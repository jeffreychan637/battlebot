ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_2.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_2_initVar
  18              		.bss
  19              		.type	PWM_2_initVar, %object
  20              		.size	PWM_2_initVar, 1
  21              	PWM_2_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_2_Init,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_2_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_2_Init, %function
  29              	PWM_2_Init:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC4\\PWM_2.c"
   1:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_2.c **** * File Name: PWM_2.c
   3:Generated_Source\PSoC4/PWM_2.c **** * Version 2.10
   4:Generated_Source\PSoC4/PWM_2.c **** *
   5:Generated_Source\PSoC4/PWM_2.c **** * Description:
   6:Generated_Source\PSoC4/PWM_2.c **** *  This file provides the source code to the API for the PWM_2
   7:Generated_Source\PSoC4/PWM_2.c **** *  component
   8:Generated_Source\PSoC4/PWM_2.c **** *
   9:Generated_Source\PSoC4/PWM_2.c **** * Note:
  10:Generated_Source\PSoC4/PWM_2.c **** *  None
  11:Generated_Source\PSoC4/PWM_2.c **** *
  12:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
  13:Generated_Source\PSoC4/PWM_2.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/PWM_2.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/PWM_2.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/PWM_2.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/PWM_2.c **** 
  19:Generated_Source\PSoC4/PWM_2.c **** #include "PWM_2.h"
  20:Generated_Source\PSoC4/PWM_2.c **** 
  21:Generated_Source\PSoC4/PWM_2.c **** uint8 PWM_2_initVar = 0u;
  22:Generated_Source\PSoC4/PWM_2.c **** 
  23:Generated_Source\PSoC4/PWM_2.c **** 
  24:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Init
  26:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 2


  27:Generated_Source\PSoC4/PWM_2.c **** *
  28:Generated_Source\PSoC4/PWM_2.c **** * Summary:
  29:Generated_Source\PSoC4/PWM_2.c **** *  Initialize/Restore default PWM_2 configuration.
  30:Generated_Source\PSoC4/PWM_2.c **** *
  31:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
  32:Generated_Source\PSoC4/PWM_2.c **** *  None
  33:Generated_Source\PSoC4/PWM_2.c **** *
  34:Generated_Source\PSoC4/PWM_2.c **** * Return:
  35:Generated_Source\PSoC4/PWM_2.c **** *  None
  36:Generated_Source\PSoC4/PWM_2.c **** *
  37:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Init(void)
  39:Generated_Source\PSoC4/PWM_2.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/PWM_2.c **** 
  41:Generated_Source\PSoC4/PWM_2.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__QUAD == PWM_2_CONFIG)
  43:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL_REG = PWM_2_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/PWM_2.c ****         
  45:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_TRIG_CONTROL1_REG  = PWM_2_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/PWM_2.c **** 
  48:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/PWM_2.c ****         
  51:Generated_Source\PSoC4/PWM_2.c ****          /* Set other values */
  52:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetCounterMode(PWM_2_COUNT_DOWN);
  53:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WritePeriod(PWM_2_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WriteCounter(PWM_2_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/PWM_2.c ****     #endif  /* (PWM_2__QUAD == PWM_2_CONFIG) */
  56:Generated_Source\PSoC4/PWM_2.c **** 
  57:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__TIMER == PWM_2_CONFIG)
  58:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL_REG = PWM_2_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/PWM_2.c ****         
  60:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_TRIG_CONTROL1_REG  = PWM_2_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/PWM_2.c ****     
  63:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/PWM_2.c ****         
  66:Generated_Source\PSoC4/PWM_2.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WritePeriod(PWM_2_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/PWM_2.c **** 
  69:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2__COMPARE == PWM_2_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompare(PWM_2_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/PWM_2.c **** 
  72:Generated_Source\PSoC4/PWM_2.c ****             #if (1u == PWM_2_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_WriteCompareBuf(PWM_2_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* (1u == PWM_2_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 3


  76:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (PWM_2__COMPARE == PWM_2_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/PWM_2.c **** 
  78:Generated_Source\PSoC4/PWM_2.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2_CY_TCPWM_V2 && PWM_2_TIMER_UPDOWN_CNT_USED && !PWM_2_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCounter(1u);
  81:Generated_Source\PSoC4/PWM_2.c ****         #elif(PWM_2__COUNT_DOWN == PWM_2_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCounter(PWM_2_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/PWM_2.c ****         #else
  84:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCounter(0u);
  85:Generated_Source\PSoC4/PWM_2.c ****         #endif /* (PWM_2_CY_TCPWM_V2 && PWM_2_TIMER_UPDOWN_CNT_USED && !PWM_2_CY_TCPWM_4000) */
  86:Generated_Source\PSoC4/PWM_2.c ****     #endif  /* (PWM_2__TIMER == PWM_2_CONFIG) */
  87:Generated_Source\PSoC4/PWM_2.c **** 
  88:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__PWM_SEL == PWM_2_CONFIG)
  89:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_CONTROL_REG = PWM_2_CTRL_PWM_BASE_CONFIG;
  40              		.loc 1 89 0
  41 0004 104B     		ldr	r3, .L2
  42 0006 8022     		mov	r2, #128
  43 0008 D204     		lsl	r2, r2, #19
  44 000a 1A60     		str	r2, [r3]
  90:Generated_Source\PSoC4/PWM_2.c **** 
  91:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2__PWM_PR == PWM_2_PWM_MODE)
  92:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL_REG |= PWM_2_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCounter(PWM_2_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/PWM_2.c ****         #else
  95:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL_REG |= PWM_2_CTRL_PWM_ALIGN | PWM_2_CTRL_PWM_KILL_EVENT;
  45              		.loc 1 95 0
  46 000c 0E4B     		ldr	r3, .L2
  47 000e 0E4A     		ldr	r2, .L2
  48 0010 1268     		ldr	r2, [r2]
  49 0012 1A60     		str	r2, [r3]
  96:Generated_Source\PSoC4/PWM_2.c ****             
  97:Generated_Source\PSoC4/PWM_2.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2_CY_TCPWM_V2 && PWM_2_PWM_UPDOWN_CNT_USED && !PWM_2_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_WriteCounter(1u);
 100:Generated_Source\PSoC4/PWM_2.c ****             #elif (PWM_2__RIGHT == PWM_2_PWM_ALIGN)
 101:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_WriteCounter(PWM_2_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/PWM_2.c ****             #else 
 103:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_WriteCounter(0u);
  50              		.loc 1 103 0
  51 0014 0020     		mov	r0, #0
  52 0016 FFF7FEFF 		bl	PWM_2_WriteCounter
 104:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* (PWM_2_CY_TCPWM_V2 && PWM_2_PWM_UPDOWN_CNT_USED && !PWM_2_CY_TCPWM_4000) */
 105:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (PWM_2__PWM_PR == PWM_2_PWM_MODE) */
 106:Generated_Source\PSoC4/PWM_2.c **** 
 107:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2__PWM_DT == PWM_2_PWM_MODE)
 108:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL_REG |= PWM_2_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (PWM_2__PWM_DT == PWM_2_PWM_MODE) */
 110:Generated_Source\PSoC4/PWM_2.c **** 
 111:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2__PWM == PWM_2_PWM_MODE)
 112:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_CONTROL_REG |= PWM_2_CTRL_PWM_PRESCALER;
  53              		.loc 1 112 0
  54 001a 0B4B     		ldr	r3, .L2
  55 001c 0A4A     		ldr	r2, .L2
  56 001e 1268     		ldr	r2, [r2]
  57 0020 1A60     		str	r2, [r3]
 113:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (PWM_2__PWM == PWM_2_PWM_MODE) */
 114:Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 4


 115:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_TRIG_CONTROL1_REG  = PWM_2_PWM_SIGNALS_MODES;
  58              		.loc 1 116 0
  59 0022 0A4B     		ldr	r3, .L2+4
  60 0024 0C22     		mov	r2, #12
  61 0026 1A60     		str	r2, [r3]
 117:Generated_Source\PSoC4/PWM_2.c ****     
 118:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_SetInterruptMode(PWM_2_PWM_INTERRUPT_MASK);
  62              		.loc 1 119 0
  63 0028 0120     		mov	r0, #1
  64 002a FFF7FEFF 		bl	PWM_2_SetInterruptMode
 120:Generated_Source\PSoC4/PWM_2.c **** 
 121:Generated_Source\PSoC4/PWM_2.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/PWM_2.c ****         #if (PWM_2__PWM_PR == PWM_2_PWM_MODE)
 123:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/PWM_2.c ****                     (PWM_2_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/PWM_2.c ****                     PWM_2_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/PWM_2.c ****                     PWM_2_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/PWM_2.c ****         #else
 128:Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2__LEFT == PWM_2_PWM_ALIGN)
 129:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_TRIG_CONTROL2_REG = PWM_2_PWM_MODE_LEFT;
  65              		.loc 1 129 0
  66 002e 084B     		ldr	r3, .L2+8
  67 0030 3122     		mov	r2, #49
  68 0032 1A60     		str	r2, [r3]
 130:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* ( PWM_2_PWM_LEFT == PWM_2_PWM_ALIGN) */
 131:Generated_Source\PSoC4/PWM_2.c **** 
 132:Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2__RIGHT == PWM_2_PWM_ALIGN)
 133:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_TRIG_CONTROL2_REG = PWM_2_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* ( PWM_2_PWM_RIGHT == PWM_2_PWM_ALIGN) */
 135:Generated_Source\PSoC4/PWM_2.c **** 
 136:Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2__CENTER == PWM_2_PWM_ALIGN)
 137:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_TRIG_CONTROL2_REG = PWM_2_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* ( PWM_2_PWM_CENTER == PWM_2_PWM_ALIGN) */
 139:Generated_Source\PSoC4/PWM_2.c **** 
 140:Generated_Source\PSoC4/PWM_2.c ****             #if (PWM_2__ASYMMETRIC == PWM_2_PWM_ALIGN)
 141:Generated_Source\PSoC4/PWM_2.c ****                 PWM_2_TRIG_CONTROL2_REG = PWM_2_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/PWM_2.c ****             #endif  /* (PWM_2__ASYMMETRIC == PWM_2_PWM_ALIGN) */
 143:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (PWM_2__PWM_PR == PWM_2_PWM_MODE) */
 144:Generated_Source\PSoC4/PWM_2.c **** 
 145:Generated_Source\PSoC4/PWM_2.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WritePeriod(PWM_2_PWM_PERIOD_VALUE );
  69              		.loc 1 146 0
  70 0034 074B     		ldr	r3, .L2+12
  71 0036 181C     		mov	r0, r3
  72 0038 FFF7FEFF 		bl	PWM_2_WritePeriod
 147:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_WriteCompare(PWM_2_PWM_COMPARE_VALUE);
  73              		.loc 1 147 0
  74 003c 064B     		ldr	r3, .L2+16
  75 003e 181C     		mov	r0, r3
  76 0040 FFF7FEFF 		bl	PWM_2_WriteCompare
 148:Generated_Source\PSoC4/PWM_2.c **** 
 149:Generated_Source\PSoC4/PWM_2.c ****         #if (1u == PWM_2_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WriteCompareBuf(PWM_2_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (1u == PWM_2_PWM_COMPARE_SWAP) */
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 5


 153:Generated_Source\PSoC4/PWM_2.c **** 
 154:Generated_Source\PSoC4/PWM_2.c ****         #if (1u == PWM_2_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_WritePeriodBuf(PWM_2_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/PWM_2.c ****         #endif  /* (1u == PWM_2_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/PWM_2.c ****     #endif  /* (PWM_2__PWM_SEL == PWM_2_CONFIG) */
 159:Generated_Source\PSoC4/PWM_2.c ****     
 160:Generated_Source\PSoC4/PWM_2.c **** }
  77              		.loc 1 160 0
  78 0044 BD46     		mov	sp, r7
  79              		@ sp needed
  80 0046 80BD     		pop	{r7, pc}
  81              	.L3:
  82              		.align	2
  83              	.L2:
  84 0048 40010540 		.word	1074069824
  85 004c 64010540 		.word	1074069860
  86 0050 68010540 		.word	1074069864
  87 0054 409C0000 		.word	40000
  88 0058 50460000 		.word	18000
  89              		.cfi_endproc
  90              	.LFE0:
  91              		.size	PWM_2_Init, .-PWM_2_Init
  92              		.section	.text.PWM_2_Enable,"ax",%progbits
  93              		.align	2
  94              		.global	PWM_2_Enable
  95              		.code	16
  96              		.thumb_func
  97              		.type	PWM_2_Enable, %function
  98              	PWM_2_Enable:
  99              	.LFB1:
 161:Generated_Source\PSoC4/PWM_2.c **** 
 162:Generated_Source\PSoC4/PWM_2.c **** 
 163:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Enable
 165:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 166:Generated_Source\PSoC4/PWM_2.c **** *
 167:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 168:Generated_Source\PSoC4/PWM_2.c **** *  Enables the PWM_2.
 169:Generated_Source\PSoC4/PWM_2.c **** *
 170:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 171:Generated_Source\PSoC4/PWM_2.c **** *  None
 172:Generated_Source\PSoC4/PWM_2.c **** *
 173:Generated_Source\PSoC4/PWM_2.c **** * Return:
 174:Generated_Source\PSoC4/PWM_2.c **** *  None
 175:Generated_Source\PSoC4/PWM_2.c **** *
 176:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Enable(void)
 178:Generated_Source\PSoC4/PWM_2.c **** {
 100              		.loc 1 178 0
 101              		.cfi_startproc
 102 0000 90B5     		push	{r4, r7, lr}
 103              		.cfi_def_cfa_offset 12
 104              		.cfi_offset 4, -12
 105              		.cfi_offset 7, -8
 106              		.cfi_offset 14, -4
 107 0002 83B0     		sub	sp, sp, #12
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 6


 108              		.cfi_def_cfa_offset 24
 109 0004 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/PWM_2.c **** 
 181:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 111              		.loc 1 181 0
 112 0006 FC1D     		add	r4, r7, #7
 113 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 114 000c 031C     		mov	r3, r0
 115 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_BLOCK_CONTROL_REG |= PWM_2_MASK;
 116              		.loc 1 182 0
 117 0010 084B     		ldr	r3, .L5
 118 0012 084A     		ldr	r2, .L5
 119 0014 1268     		ldr	r2, [r2]
 120 0016 0221     		mov	r1, #2
 121 0018 0A43     		orr	r2, r1
 122 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 123              		.loc 1 183 0
 124 001c FB1D     		add	r3, r7, #7
 125 001e 1B78     		ldrb	r3, [r3]
 126 0020 181C     		mov	r0, r3
 127 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/PWM_2.c **** 
 185:Generated_Source\PSoC4/PWM_2.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__PWM_SEL == PWM_2_CONFIG)
 187:Generated_Source\PSoC4/PWM_2.c ****         #if (0u == PWM_2_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_TriggerCommand(PWM_2_MASK, PWM_2_CMD_START);
 128              		.loc 1 188 0
 129 0026 0220     		mov	r0, #2
 130 0028 1821     		mov	r1, #24
 131 002a FFF7FEFF 		bl	PWM_2_TriggerCommand
 189:Generated_Source\PSoC4/PWM_2.c ****         #endif /* (0u == PWM_2_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2__PWM_SEL == PWM_2_CONFIG) */
 191:Generated_Source\PSoC4/PWM_2.c **** 
 192:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__TIMER == PWM_2_CONFIG)
 193:Generated_Source\PSoC4/PWM_2.c ****         #if (0u == PWM_2_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_TriggerCommand(PWM_2_MASK, PWM_2_CMD_START);
 195:Generated_Source\PSoC4/PWM_2.c ****         #endif /* (0u == PWM_2_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2__TIMER == PWM_2_CONFIG) */
 197:Generated_Source\PSoC4/PWM_2.c ****     
 198:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2__QUAD == PWM_2_CONFIG)
 199:Generated_Source\PSoC4/PWM_2.c ****         #if (0u != PWM_2_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/PWM_2.c ****             PWM_2_TriggerCommand(PWM_2_MASK, PWM_2_CMD_RELOAD);
 201:Generated_Source\PSoC4/PWM_2.c ****         #endif /* (0u != PWM_2_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/PWM_2.c ****     #endif  /* (PWM_2__QUAD == PWM_2_CONFIG) */
 203:Generated_Source\PSoC4/PWM_2.c **** }
 132              		.loc 1 203 0
 133 002e BD46     		mov	sp, r7
 134 0030 03B0     		add	sp, sp, #12
 135              		@ sp needed
 136 0032 90BD     		pop	{r4, r7, pc}
 137              	.L6:
 138              		.align	2
 139              	.L5:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 7


 140 0034 00000540 		.word	1074069504
 141              		.cfi_endproc
 142              	.LFE1:
 143              		.size	PWM_2_Enable, .-PWM_2_Enable
 144              		.section	.text.PWM_2_Start,"ax",%progbits
 145              		.align	2
 146              		.global	PWM_2_Start
 147              		.code	16
 148              		.thumb_func
 149              		.type	PWM_2_Start, %function
 150              	PWM_2_Start:
 151              	.LFB2:
 204:Generated_Source\PSoC4/PWM_2.c **** 
 205:Generated_Source\PSoC4/PWM_2.c **** 
 206:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Start
 208:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 209:Generated_Source\PSoC4/PWM_2.c **** *
 210:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 211:Generated_Source\PSoC4/PWM_2.c **** *  Initializes the PWM_2 with default customizer
 212:Generated_Source\PSoC4/PWM_2.c **** *  values when called the first time and enables the PWM_2.
 213:Generated_Source\PSoC4/PWM_2.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/PWM_2.c **** *  just enabled.
 215:Generated_Source\PSoC4/PWM_2.c **** *
 216:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 217:Generated_Source\PSoC4/PWM_2.c **** *  None
 218:Generated_Source\PSoC4/PWM_2.c **** *
 219:Generated_Source\PSoC4/PWM_2.c **** * Return:
 220:Generated_Source\PSoC4/PWM_2.c **** *  None
 221:Generated_Source\PSoC4/PWM_2.c **** *
 222:Generated_Source\PSoC4/PWM_2.c **** * Global variables:
 223:Generated_Source\PSoC4/PWM_2.c **** *  PWM_2_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/PWM_2.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/PWM_2.c **** *  to 1 the first time PWM_2_Start() is called. This allows
 226:Generated_Source\PSoC4/PWM_2.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/PWM_2.c **** *  calls to the PWM_2_Start() routine.
 228:Generated_Source\PSoC4/PWM_2.c **** *
 229:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Start(void)
 231:Generated_Source\PSoC4/PWM_2.c **** {
 152              		.loc 1 231 0
 153              		.cfi_startproc
 154 0000 80B5     		push	{r7, lr}
 155              		.cfi_def_cfa_offset 8
 156              		.cfi_offset 7, -8
 157              		.cfi_offset 14, -4
 158 0002 00AF     		add	r7, sp, #0
 159              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/PWM_2.c ****     if (0u == PWM_2_initVar)
 160              		.loc 1 232 0
 161 0004 064B     		ldr	r3, .L9
 162 0006 1B78     		ldrb	r3, [r3]
 163 0008 002B     		cmp	r3, #0
 164 000a 04D1     		bne	.L8
 233:Generated_Source\PSoC4/PWM_2.c ****     {
 234:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_Init();
 165              		.loc 1 234 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 8


 166 000c FFF7FEFF 		bl	PWM_2_Init
 235:Generated_Source\PSoC4/PWM_2.c ****         PWM_2_initVar = 1u;
 167              		.loc 1 235 0
 168 0010 034B     		ldr	r3, .L9
 169 0012 0122     		mov	r2, #1
 170 0014 1A70     		strb	r2, [r3]
 171              	.L8:
 236:Generated_Source\PSoC4/PWM_2.c ****     }
 237:Generated_Source\PSoC4/PWM_2.c **** 
 238:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_Enable();
 172              		.loc 1 238 0
 173 0016 FFF7FEFF 		bl	PWM_2_Enable
 239:Generated_Source\PSoC4/PWM_2.c **** }
 174              		.loc 1 239 0
 175 001a BD46     		mov	sp, r7
 176              		@ sp needed
 177 001c 80BD     		pop	{r7, pc}
 178              	.L10:
 179 001e C046     		.align	2
 180              	.L9:
 181 0020 00000000 		.word	PWM_2_initVar
 182              		.cfi_endproc
 183              	.LFE2:
 184              		.size	PWM_2_Start, .-PWM_2_Start
 185              		.section	.text.PWM_2_Stop,"ax",%progbits
 186              		.align	2
 187              		.global	PWM_2_Stop
 188              		.code	16
 189              		.thumb_func
 190              		.type	PWM_2_Stop, %function
 191              	PWM_2_Stop:
 192              	.LFB3:
 240:Generated_Source\PSoC4/PWM_2.c **** 
 241:Generated_Source\PSoC4/PWM_2.c **** 
 242:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_Stop
 244:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 245:Generated_Source\PSoC4/PWM_2.c **** *
 246:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 247:Generated_Source\PSoC4/PWM_2.c **** *  Disables the PWM_2.
 248:Generated_Source\PSoC4/PWM_2.c **** *
 249:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 250:Generated_Source\PSoC4/PWM_2.c **** *  None
 251:Generated_Source\PSoC4/PWM_2.c **** *
 252:Generated_Source\PSoC4/PWM_2.c **** * Return:
 253:Generated_Source\PSoC4/PWM_2.c **** *  None
 254:Generated_Source\PSoC4/PWM_2.c **** *
 255:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_Stop(void)
 257:Generated_Source\PSoC4/PWM_2.c **** {
 193              		.loc 1 257 0
 194              		.cfi_startproc
 195 0000 90B5     		push	{r4, r7, lr}
 196              		.cfi_def_cfa_offset 12
 197              		.cfi_offset 4, -12
 198              		.cfi_offset 7, -8
 199              		.cfi_offset 14, -4
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 9


 200 0002 83B0     		sub	sp, sp, #12
 201              		.cfi_def_cfa_offset 24
 202 0004 00AF     		add	r7, sp, #0
 203              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/PWM_2.c **** 
 260:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 260 0
 205 0006 FC1D     		add	r4, r7, #7
 206 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 207 000c 031C     		mov	r3, r0
 208 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/PWM_2.c **** 
 262:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_BLOCK_CONTROL_REG &= (uint32)~PWM_2_MASK;
 209              		.loc 1 262 0
 210 0010 064B     		ldr	r3, .L12
 211 0012 064A     		ldr	r2, .L12
 212 0014 1268     		ldr	r2, [r2]
 213 0016 0221     		mov	r1, #2
 214 0018 8A43     		bic	r2, r1
 215 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/PWM_2.c **** 
 264:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 264 0
 217 001c FB1D     		add	r3, r7, #7
 218 001e 1B78     		ldrb	r3, [r3]
 219 0020 181C     		mov	r0, r3
 220 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/PWM_2.c **** }
 221              		.loc 1 265 0
 222 0026 BD46     		mov	sp, r7
 223 0028 03B0     		add	sp, sp, #12
 224              		@ sp needed
 225 002a 90BD     		pop	{r4, r7, pc}
 226              	.L13:
 227              		.align	2
 228              	.L12:
 229 002c 00000540 		.word	1074069504
 230              		.cfi_endproc
 231              	.LFE3:
 232              		.size	PWM_2_Stop, .-PWM_2_Stop
 233              		.section	.text.PWM_2_SetMode,"ax",%progbits
 234              		.align	2
 235              		.global	PWM_2_SetMode
 236              		.code	16
 237              		.thumb_func
 238              		.type	PWM_2_SetMode, %function
 239              	PWM_2_SetMode:
 240              	.LFB4:
 266:Generated_Source\PSoC4/PWM_2.c **** 
 267:Generated_Source\PSoC4/PWM_2.c **** 
 268:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetMode
 270:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 271:Generated_Source\PSoC4/PWM_2.c **** *
 272:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 273:Generated_Source\PSoC4/PWM_2.c **** *  Sets the operation mode of the PWM_2. This function is used when
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 10


 274:Generated_Source\PSoC4/PWM_2.c **** *  configured as a generic PWM_2 and the actual mode of operation is
 275:Generated_Source\PSoC4/PWM_2.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/PWM_2.c **** *
 277:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 278:Generated_Source\PSoC4/PWM_2.c **** *  mode: Mode for the PWM_2 to operate in
 279:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 280:Generated_Source\PSoC4/PWM_2.c **** *   - PWM_2_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/PWM_2.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/PWM_2.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_PWM - PWM
 286:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/PWM_2.c **** *
 289:Generated_Source\PSoC4/PWM_2.c **** * Return:
 290:Generated_Source\PSoC4/PWM_2.c **** *  None
 291:Generated_Source\PSoC4/PWM_2.c **** *
 292:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/PWM_2.c **** {
 241              		.loc 1 294 0
 242              		.cfi_startproc
 243 0000 90B5     		push	{r4, r7, lr}
 244              		.cfi_def_cfa_offset 12
 245              		.cfi_offset 4, -12
 246              		.cfi_offset 7, -8
 247              		.cfi_offset 14, -4
 248 0002 85B0     		sub	sp, sp, #20
 249              		.cfi_def_cfa_offset 32
 250 0004 00AF     		add	r7, sp, #0
 251              		.cfi_def_cfa_register 7
 252 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/PWM_2.c **** 
 297:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 253              		.loc 1 297 0
 254 0008 0F23     		mov	r3, #15
 255 000a FC18     		add	r4, r7, r3
 256 000c FFF7FEFF 		bl	CyEnterCriticalSection
 257 0010 031C     		mov	r3, r0
 258 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/PWM_2.c **** 
 299:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_MODE_MASK;
 259              		.loc 1 299 0
 260 0014 0A4B     		ldr	r3, .L15
 261 0016 0A4A     		ldr	r2, .L15
 262 0018 1268     		ldr	r2, [r2]
 263 001a 0A49     		ldr	r1, .L15+4
 264 001c 0A40     		and	r2, r1
 265 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= mode;
 266              		.loc 1 300 0
 267 0020 074B     		ldr	r3, .L15
 268 0022 074A     		ldr	r2, .L15
 269 0024 1168     		ldr	r1, [r2]
 270 0026 7A68     		ldr	r2, [r7, #4]
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 11


 271 0028 0A43     		orr	r2, r1
 272 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/PWM_2.c **** 
 302:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 273              		.loc 1 302 0
 274 002c 0F23     		mov	r3, #15
 275 002e FB18     		add	r3, r7, r3
 276 0030 1B78     		ldrb	r3, [r3]
 277 0032 181C     		mov	r0, r3
 278 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/PWM_2.c **** }
 279              		.loc 1 303 0
 280 0038 BD46     		mov	sp, r7
 281 003a 05B0     		add	sp, sp, #20
 282              		@ sp needed
 283 003c 90BD     		pop	{r4, r7, pc}
 284              	.L16:
 285 003e C046     		.align	2
 286              	.L15:
 287 0040 40010540 		.word	1074069824
 288 0044 FFFFFFF8 		.word	-117440513
 289              		.cfi_endproc
 290              	.LFE4:
 291              		.size	PWM_2_SetMode, .-PWM_2_SetMode
 292              		.section	.text.PWM_2_SetQDMode,"ax",%progbits
 293              		.align	2
 294              		.global	PWM_2_SetQDMode
 295              		.code	16
 296              		.thumb_func
 297              		.type	PWM_2_SetQDMode, %function
 298              	PWM_2_SetQDMode:
 299              	.LFB5:
 304:Generated_Source\PSoC4/PWM_2.c **** 
 305:Generated_Source\PSoC4/PWM_2.c **** 
 306:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetQDMode
 308:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 309:Generated_Source\PSoC4/PWM_2.c **** *
 310:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 311:Generated_Source\PSoC4/PWM_2.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/PWM_2.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/PWM_2.c **** *
 314:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 315:Generated_Source\PSoC4/PWM_2.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 317:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/PWM_2.c **** *                                        (4x faster)
 321:Generated_Source\PSoC4/PWM_2.c **** *
 322:Generated_Source\PSoC4/PWM_2.c **** * Return:
 323:Generated_Source\PSoC4/PWM_2.c **** *  None
 324:Generated_Source\PSoC4/PWM_2.c **** *
 325:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/PWM_2.c **** {
 300              		.loc 1 327 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 12


 301              		.cfi_startproc
 302 0000 90B5     		push	{r4, r7, lr}
 303              		.cfi_def_cfa_offset 12
 304              		.cfi_offset 4, -12
 305              		.cfi_offset 7, -8
 306              		.cfi_offset 14, -4
 307 0002 85B0     		sub	sp, sp, #20
 308              		.cfi_def_cfa_offset 32
 309 0004 00AF     		add	r7, sp, #0
 310              		.cfi_def_cfa_register 7
 311 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/PWM_2.c **** 
 330:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 312              		.loc 1 330 0
 313 0008 0F23     		mov	r3, #15
 314 000a FC18     		add	r4, r7, r3
 315 000c FFF7FEFF 		bl	CyEnterCriticalSection
 316 0010 031C     		mov	r3, r0
 317 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/PWM_2.c **** 
 332:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_QUAD_MODE_MASK;
 318              		.loc 1 332 0
 319 0014 0A4B     		ldr	r3, .L18
 320 0016 0A4A     		ldr	r2, .L18
 321 0018 1268     		ldr	r2, [r2]
 322 001a 0A49     		ldr	r1, .L18+4
 323 001c 0A40     		and	r2, r1
 324 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= qdMode;
 325              		.loc 1 333 0
 326 0020 074B     		ldr	r3, .L18
 327 0022 074A     		ldr	r2, .L18
 328 0024 1168     		ldr	r1, [r2]
 329 0026 7A68     		ldr	r2, [r7, #4]
 330 0028 0A43     		orr	r2, r1
 331 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/PWM_2.c **** 
 335:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 332              		.loc 1 335 0
 333 002c 0F23     		mov	r3, #15
 334 002e FB18     		add	r3, r7, r3
 335 0030 1B78     		ldrb	r3, [r3]
 336 0032 181C     		mov	r0, r3
 337 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/PWM_2.c **** }
 338              		.loc 1 336 0
 339 0038 BD46     		mov	sp, r7
 340 003a 05B0     		add	sp, sp, #20
 341              		@ sp needed
 342 003c 90BD     		pop	{r4, r7, pc}
 343              	.L19:
 344 003e C046     		.align	2
 345              	.L18:
 346 0040 40010540 		.word	1074069824
 347 0044 FFFF8FFF 		.word	-7340033
 348              		.cfi_endproc
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 13


 349              	.LFE5:
 350              		.size	PWM_2_SetQDMode, .-PWM_2_SetQDMode
 351              		.section	.text.PWM_2_SetPrescaler,"ax",%progbits
 352              		.align	2
 353              		.global	PWM_2_SetPrescaler
 354              		.code	16
 355              		.thumb_func
 356              		.type	PWM_2_SetPrescaler, %function
 357              	PWM_2_SetPrescaler:
 358              	.LFB6:
 337:Generated_Source\PSoC4/PWM_2.c **** 
 338:Generated_Source\PSoC4/PWM_2.c **** 
 339:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPrescaler
 341:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 342:Generated_Source\PSoC4/PWM_2.c **** *
 343:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 344:Generated_Source\PSoC4/PWM_2.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/PWM_2.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/PWM_2.c **** *
 347:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 348:Generated_Source\PSoC4/PWM_2.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 350:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/PWM_2.c **** *
 359:Generated_Source\PSoC4/PWM_2.c **** * Return:
 360:Generated_Source\PSoC4/PWM_2.c **** *  None
 361:Generated_Source\PSoC4/PWM_2.c **** *
 362:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/PWM_2.c **** {
 359              		.loc 1 364 0
 360              		.cfi_startproc
 361 0000 90B5     		push	{r4, r7, lr}
 362              		.cfi_def_cfa_offset 12
 363              		.cfi_offset 4, -12
 364              		.cfi_offset 7, -8
 365              		.cfi_offset 14, -4
 366 0002 85B0     		sub	sp, sp, #20
 367              		.cfi_def_cfa_offset 32
 368 0004 00AF     		add	r7, sp, #0
 369              		.cfi_def_cfa_register 7
 370 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/PWM_2.c **** 
 367:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 371              		.loc 1 367 0
 372 0008 0F23     		mov	r3, #15
 373 000a FC18     		add	r4, r7, r3
 374 000c FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 14


 375 0010 031C     		mov	r3, r0
 376 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/PWM_2.c **** 
 369:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_PRESCALER_MASK;
 377              		.loc 1 369 0
 378 0014 0A4B     		ldr	r3, .L21
 379 0016 0A4A     		ldr	r2, .L21
 380 0018 1268     		ldr	r2, [r2]
 381 001a 0A49     		ldr	r1, .L21+4
 382 001c 0A40     		and	r2, r1
 383 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= prescaler;
 384              		.loc 1 370 0
 385 0020 074B     		ldr	r3, .L21
 386 0022 074A     		ldr	r2, .L21
 387 0024 1168     		ldr	r1, [r2]
 388 0026 7A68     		ldr	r2, [r7, #4]
 389 0028 0A43     		orr	r2, r1
 390 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/PWM_2.c **** 
 372:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 391              		.loc 1 372 0
 392 002c 0F23     		mov	r3, #15
 393 002e FB18     		add	r3, r7, r3
 394 0030 1B78     		ldrb	r3, [r3]
 395 0032 181C     		mov	r0, r3
 396 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/PWM_2.c **** }
 397              		.loc 1 373 0
 398 0038 BD46     		mov	sp, r7
 399 003a 05B0     		add	sp, sp, #20
 400              		@ sp needed
 401 003c 90BD     		pop	{r4, r7, pc}
 402              	.L22:
 403 003e C046     		.align	2
 404              	.L21:
 405 0040 40010540 		.word	1074069824
 406 0044 FF00FFFF 		.word	-65281
 407              		.cfi_endproc
 408              	.LFE6:
 409              		.size	PWM_2_SetPrescaler, .-PWM_2_SetPrescaler
 410              		.section	.text.PWM_2_SetOneShot,"ax",%progbits
 411              		.align	2
 412              		.global	PWM_2_SetOneShot
 413              		.code	16
 414              		.thumb_func
 415              		.type	PWM_2_SetOneShot, %function
 416              	PWM_2_SetOneShot:
 417              	.LFB7:
 374:Generated_Source\PSoC4/PWM_2.c **** 
 375:Generated_Source\PSoC4/PWM_2.c **** 
 376:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetOneShot
 378:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 379:Generated_Source\PSoC4/PWM_2.c **** *
 380:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 381:Generated_Source\PSoC4/PWM_2.c **** *  Writes the register that controls whether the PWM_2 runs
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 15


 382:Generated_Source\PSoC4/PWM_2.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/PWM_2.c **** *  PWM_2 operates in the continuous mode.
 384:Generated_Source\PSoC4/PWM_2.c **** *
 385:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 386:Generated_Source\PSoC4/PWM_2.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 388:Generated_Source\PSoC4/PWM_2.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/PWM_2.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/PWM_2.c **** *
 391:Generated_Source\PSoC4/PWM_2.c **** * Return:
 392:Generated_Source\PSoC4/PWM_2.c **** *  None
 393:Generated_Source\PSoC4/PWM_2.c **** *
 394:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/PWM_2.c **** {
 418              		.loc 1 396 0
 419              		.cfi_startproc
 420 0000 90B5     		push	{r4, r7, lr}
 421              		.cfi_def_cfa_offset 12
 422              		.cfi_offset 4, -12
 423              		.cfi_offset 7, -8
 424              		.cfi_offset 14, -4
 425 0002 85B0     		sub	sp, sp, #20
 426              		.cfi_def_cfa_offset 32
 427 0004 00AF     		add	r7, sp, #0
 428              		.cfi_def_cfa_register 7
 429 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/PWM_2.c **** 
 399:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 430              		.loc 1 399 0
 431 0008 0F23     		mov	r3, #15
 432 000a FC18     		add	r4, r7, r3
 433 000c FFF7FEFF 		bl	CyEnterCriticalSection
 434 0010 031C     		mov	r3, r0
 435 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/PWM_2.c **** 
 401:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_ONESHOT_MASK;
 436              		.loc 1 401 0
 437 0014 0B4B     		ldr	r3, .L24
 438 0016 0B4A     		ldr	r2, .L24
 439 0018 1268     		ldr	r2, [r2]
 440 001a 0B49     		ldr	r1, .L24+4
 441 001c 0A40     		and	r2, r1
 442 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= ((uint32)((oneShotEnable & PWM_2_1BIT_MASK) <<
 443              		.loc 1 402 0
 444 0020 084B     		ldr	r3, .L24
 445 0022 084A     		ldr	r2, .L24
 446 0024 1168     		ldr	r1, [r2]
 447 0026 7A68     		ldr	r2, [r7, #4]
 448 0028 0120     		mov	r0, #1
 449 002a 0240     		and	r2, r0
 450 002c 9204     		lsl	r2, r2, #18
 451 002e 0A43     		orr	r2, r1
 452 0030 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/PWM_2.c ****                                                                PWM_2_ONESHOT_SHIFT));
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 16


 404:Generated_Source\PSoC4/PWM_2.c **** 
 405:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 453              		.loc 1 405 0
 454 0032 0F23     		mov	r3, #15
 455 0034 FB18     		add	r3, r7, r3
 456 0036 1B78     		ldrb	r3, [r3]
 457 0038 181C     		mov	r0, r3
 458 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/PWM_2.c **** }
 459              		.loc 1 406 0
 460 003e BD46     		mov	sp, r7
 461 0040 05B0     		add	sp, sp, #20
 462              		@ sp needed
 463 0042 90BD     		pop	{r4, r7, pc}
 464              	.L25:
 465              		.align	2
 466              	.L24:
 467 0044 40010540 		.word	1074069824
 468 0048 FFFFFBFF 		.word	-262145
 469              		.cfi_endproc
 470              	.LFE7:
 471              		.size	PWM_2_SetOneShot, .-PWM_2_SetOneShot
 472              		.section	.text.PWM_2_SetPWMMode,"ax",%progbits
 473              		.align	2
 474              		.global	PWM_2_SetPWMMode
 475              		.code	16
 476              		.thumb_func
 477              		.type	PWM_2_SetPWMMode, %function
 478              	PWM_2_SetPWMMode:
 479              	.LFB8:
 407:Generated_Source\PSoC4/PWM_2.c **** 
 408:Generated_Source\PSoC4/PWM_2.c **** 
 409:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPWMMode
 411:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 412:Generated_Source\PSoC4/PWM_2.c **** *
 413:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 414:Generated_Source\PSoC4/PWM_2.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/PWM_2.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/PWM_2.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/PWM_2.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/PWM_2.c **** *  the mode.
 419:Generated_Source\PSoC4/PWM_2.c **** *
 420:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 421:Generated_Source\PSoC4/PWM_2.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/PWM_2.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 424:Generated_Source\PSoC4/PWM_2.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/PWM_2.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
 426:Generated_Source\PSoC4/PWM_2.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/PWM_2.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/PWM_2.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/PWM_2.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/PWM_2.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/PWM_2.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/PWM_2.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/PWM_2.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 17


 434:Generated_Source\PSoC4/PWM_2.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/PWM_2.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/PWM_2.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/PWM_2.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/PWM_2.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/PWM_2.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/PWM_2.c **** *
 445:Generated_Source\PSoC4/PWM_2.c **** * Return:
 446:Generated_Source\PSoC4/PWM_2.c **** *  None
 447:Generated_Source\PSoC4/PWM_2.c **** *
 448:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/PWM_2.c **** {
 480              		.loc 1 450 0
 481              		.cfi_startproc
 482 0000 80B5     		push	{r7, lr}
 483              		.cfi_def_cfa_offset 8
 484              		.cfi_offset 7, -8
 485              		.cfi_offset 14, -4
 486 0002 82B0     		sub	sp, sp, #8
 487              		.cfi_def_cfa_offset 16
 488 0004 00AF     		add	r7, sp, #0
 489              		.cfi_def_cfa_register 7
 490 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL2_REG = (modeMask & PWM_2_6BIT_MASK);
 491              		.loc 1 451 0
 492 0008 034B     		ldr	r3, .L27
 493 000a 7A68     		ldr	r2, [r7, #4]
 494 000c 3F21     		mov	r1, #63
 495 000e 0A40     		and	r2, r1
 496 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/PWM_2.c **** }
 497              		.loc 1 452 0
 498 0012 BD46     		mov	sp, r7
 499 0014 02B0     		add	sp, sp, #8
 500              		@ sp needed
 501 0016 80BD     		pop	{r7, pc}
 502              	.L28:
 503              		.align	2
 504              	.L27:
 505 0018 68010540 		.word	1074069864
 506              		.cfi_endproc
 507              	.LFE8:
 508              		.size	PWM_2_SetPWMMode, .-PWM_2_SetPWMMode
 509              		.section	.text.PWM_2_SetPWMSyncKill,"ax",%progbits
 510              		.align	2
 511              		.global	PWM_2_SetPWMSyncKill
 512              		.code	16
 513              		.thumb_func
 514              		.type	PWM_2_SetPWMSyncKill, %function
 515              	PWM_2_SetPWMSyncKill:
 516              	.LFB9:
 453:Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 18


 454:Generated_Source\PSoC4/PWM_2.c **** 
 455:Generated_Source\PSoC4/PWM_2.c **** 
 456:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPWMSyncKill
 458:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 459:Generated_Source\PSoC4/PWM_2.c **** *
 460:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 461:Generated_Source\PSoC4/PWM_2.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/PWM_2.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/PWM_2.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/PWM_2.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/PWM_2.c **** *
 466:Generated_Source\PSoC4/PWM_2.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/PWM_2.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/PWM_2.c **** *
 469:Generated_Source\PSoC4/PWM_2.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/PWM_2.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/PWM_2.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/PWM_2.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/PWM_2.c **** 
 474:Generated_Source\PSoC4/PWM_2.c **** *
 475:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 476:Generated_Source\PSoC4/PWM_2.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 478:Generated_Source\PSoC4/PWM_2.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/PWM_2.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/PWM_2.c **** *
 481:Generated_Source\PSoC4/PWM_2.c **** * Return:
 482:Generated_Source\PSoC4/PWM_2.c **** *  None
 483:Generated_Source\PSoC4/PWM_2.c **** *
 484:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/PWM_2.c **** {
 517              		.loc 1 486 0
 518              		.cfi_startproc
 519 0000 90B5     		push	{r4, r7, lr}
 520              		.cfi_def_cfa_offset 12
 521              		.cfi_offset 4, -12
 522              		.cfi_offset 7, -8
 523              		.cfi_offset 14, -4
 524 0002 85B0     		sub	sp, sp, #20
 525              		.cfi_def_cfa_offset 32
 526 0004 00AF     		add	r7, sp, #0
 527              		.cfi_def_cfa_register 7
 528 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/PWM_2.c **** 
 489:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 529              		.loc 1 489 0
 530 0008 0F23     		mov	r3, #15
 531 000a FC18     		add	r4, r7, r3
 532 000c FFF7FEFF 		bl	CyEnterCriticalSection
 533 0010 031C     		mov	r3, r0
 534 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/PWM_2.c **** 
 491:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_PWM_SYNC_KILL_MASK;
 535              		.loc 1 491 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 19


 536 0014 0B4B     		ldr	r3, .L30
 537 0016 0B4A     		ldr	r2, .L30
 538 0018 1268     		ldr	r2, [r2]
 539 001a 0421     		mov	r1, #4
 540 001c 8A43     		bic	r2, r1
 541 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= ((uint32)((syncKillEnable & PWM_2_1BIT_MASK)  <<
 542              		.loc 1 492 0
 543 0020 084B     		ldr	r3, .L30
 544 0022 084A     		ldr	r2, .L30
 545 0024 1168     		ldr	r1, [r2]
 546 0026 7A68     		ldr	r2, [r7, #4]
 547 0028 0120     		mov	r0, #1
 548 002a 0240     		and	r2, r0
 549 002c 9200     		lsl	r2, r2, #2
 550 002e 0A43     		orr	r2, r1
 551 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/PWM_2.c ****                                                PWM_2_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/PWM_2.c **** 
 495:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 552              		.loc 1 495 0
 553 0032 0F23     		mov	r3, #15
 554 0034 FB18     		add	r3, r7, r3
 555 0036 1B78     		ldrb	r3, [r3]
 556 0038 181C     		mov	r0, r3
 557 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/PWM_2.c **** }
 558              		.loc 1 496 0
 559 003e BD46     		mov	sp, r7
 560 0040 05B0     		add	sp, sp, #20
 561              		@ sp needed
 562 0042 90BD     		pop	{r4, r7, pc}
 563              	.L31:
 564              		.align	2
 565              	.L30:
 566 0044 40010540 		.word	1074069824
 567              		.cfi_endproc
 568              	.LFE9:
 569              		.size	PWM_2_SetPWMSyncKill, .-PWM_2_SetPWMSyncKill
 570              		.section	.text.PWM_2_SetPWMStopOnKill,"ax",%progbits
 571              		.align	2
 572              		.global	PWM_2_SetPWMStopOnKill
 573              		.code	16
 574              		.thumb_func
 575              		.type	PWM_2_SetPWMStopOnKill, %function
 576              	PWM_2_SetPWMStopOnKill:
 577              	.LFB10:
 497:Generated_Source\PSoC4/PWM_2.c **** 
 498:Generated_Source\PSoC4/PWM_2.c **** 
 499:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPWMStopOnKill
 501:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 502:Generated_Source\PSoC4/PWM_2.c **** *
 503:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 504:Generated_Source\PSoC4/PWM_2.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/PWM_2.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/PWM_2.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 20


 507:Generated_Source\PSoC4/PWM_2.c **** *
 508:Generated_Source\PSoC4/PWM_2.c **** *
 509:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 510:Generated_Source\PSoC4/PWM_2.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 512:Generated_Source\PSoC4/PWM_2.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/PWM_2.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/PWM_2.c **** *
 515:Generated_Source\PSoC4/PWM_2.c **** * Return:
 516:Generated_Source\PSoC4/PWM_2.c **** *  None
 517:Generated_Source\PSoC4/PWM_2.c **** *
 518:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/PWM_2.c **** {
 578              		.loc 1 520 0
 579              		.cfi_startproc
 580 0000 90B5     		push	{r4, r7, lr}
 581              		.cfi_def_cfa_offset 12
 582              		.cfi_offset 4, -12
 583              		.cfi_offset 7, -8
 584              		.cfi_offset 14, -4
 585 0002 85B0     		sub	sp, sp, #20
 586              		.cfi_def_cfa_offset 32
 587 0004 00AF     		add	r7, sp, #0
 588              		.cfi_def_cfa_register 7
 589 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/PWM_2.c **** 
 523:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 590              		.loc 1 523 0
 591 0008 0F23     		mov	r3, #15
 592 000a FC18     		add	r4, r7, r3
 593 000c FFF7FEFF 		bl	CyEnterCriticalSection
 594 0010 031C     		mov	r3, r0
 595 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/PWM_2.c **** 
 525:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_PWM_STOP_KILL_MASK;
 596              		.loc 1 525 0
 597 0014 0B4B     		ldr	r3, .L33
 598 0016 0B4A     		ldr	r2, .L33
 599 0018 1268     		ldr	r2, [r2]
 600 001a 0821     		mov	r1, #8
 601 001c 8A43     		bic	r2, r1
 602 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= ((uint32)((stopOnKillEnable & PWM_2_1BIT_MASK)  <<
 603              		.loc 1 526 0
 604 0020 084B     		ldr	r3, .L33
 605 0022 084A     		ldr	r2, .L33
 606 0024 1168     		ldr	r1, [r2]
 607 0026 7A68     		ldr	r2, [r7, #4]
 608 0028 0120     		mov	r0, #1
 609 002a 0240     		and	r2, r0
 610 002c D200     		lsl	r2, r2, #3
 611 002e 0A43     		orr	r2, r1
 612 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/PWM_2.c ****                                                          PWM_2_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/PWM_2.c **** 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 21


 529:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 613              		.loc 1 529 0
 614 0032 0F23     		mov	r3, #15
 615 0034 FB18     		add	r3, r7, r3
 616 0036 1B78     		ldrb	r3, [r3]
 617 0038 181C     		mov	r0, r3
 618 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/PWM_2.c **** }
 619              		.loc 1 530 0
 620 003e BD46     		mov	sp, r7
 621 0040 05B0     		add	sp, sp, #20
 622              		@ sp needed
 623 0042 90BD     		pop	{r4, r7, pc}
 624              	.L34:
 625              		.align	2
 626              	.L33:
 627 0044 40010540 		.word	1074069824
 628              		.cfi_endproc
 629              	.LFE10:
 630              		.size	PWM_2_SetPWMStopOnKill, .-PWM_2_SetPWMStopOnKill
 631              		.section	.text.PWM_2_SetPWMDeadTime,"ax",%progbits
 632              		.align	2
 633              		.global	PWM_2_SetPWMDeadTime
 634              		.code	16
 635              		.thumb_func
 636              		.type	PWM_2_SetPWMDeadTime, %function
 637              	PWM_2_SetPWMDeadTime:
 638              	.LFB11:
 531:Generated_Source\PSoC4/PWM_2.c **** 
 532:Generated_Source\PSoC4/PWM_2.c **** 
 533:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPWMDeadTime
 535:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 536:Generated_Source\PSoC4/PWM_2.c **** *
 537:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 538:Generated_Source\PSoC4/PWM_2.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/PWM_2.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/PWM_2.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/PWM_2.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/PWM_2.c **** 
 543:Generated_Source\PSoC4/PWM_2.c **** *
 544:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 545:Generated_Source\PSoC4/PWM_2.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/PWM_2.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/PWM_2.c **** *
 548:Generated_Source\PSoC4/PWM_2.c **** * Return:
 549:Generated_Source\PSoC4/PWM_2.c **** *  None
 550:Generated_Source\PSoC4/PWM_2.c **** *
 551:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 552:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/PWM_2.c **** {
 639              		.loc 1 553 0
 640              		.cfi_startproc
 641 0000 90B5     		push	{r4, r7, lr}
 642              		.cfi_def_cfa_offset 12
 643              		.cfi_offset 4, -12
 644              		.cfi_offset 7, -8
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 22


 645              		.cfi_offset 14, -4
 646 0002 85B0     		sub	sp, sp, #20
 647              		.cfi_def_cfa_offset 32
 648 0004 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 650 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/PWM_2.c **** 
 556:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 651              		.loc 1 556 0
 652 0008 0F23     		mov	r3, #15
 653 000a FC18     		add	r4, r7, r3
 654 000c FFF7FEFF 		bl	CyEnterCriticalSection
 655 0010 031C     		mov	r3, r0
 656 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/PWM_2.c **** 
 558:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_PRESCALER_MASK;
 657              		.loc 1 558 0
 658 0014 0B4B     		ldr	r3, .L36
 659 0016 0B4A     		ldr	r2, .L36
 660 0018 1268     		ldr	r2, [r2]
 661 001a 0B49     		ldr	r1, .L36+4
 662 001c 0A40     		and	r2, r1
 663 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= ((uint32)((deadTime & PWM_2_8BIT_MASK) <<
 664              		.loc 1 559 0
 665 0020 084B     		ldr	r3, .L36
 666 0022 084A     		ldr	r2, .L36
 667 0024 1168     		ldr	r1, [r2]
 668 0026 7A68     		ldr	r2, [r7, #4]
 669 0028 1202     		lsl	r2, r2, #8
 670 002a 1204     		lsl	r2, r2, #16
 671 002c 120C     		lsr	r2, r2, #16
 672 002e 0A43     		orr	r2, r1
 673 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/PWM_2.c ****                                                           PWM_2_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/PWM_2.c **** 
 562:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 674              		.loc 1 562 0
 675 0032 0F23     		mov	r3, #15
 676 0034 FB18     		add	r3, r7, r3
 677 0036 1B78     		ldrb	r3, [r3]
 678 0038 181C     		mov	r0, r3
 679 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/PWM_2.c **** }
 680              		.loc 1 563 0
 681 003e BD46     		mov	sp, r7
 682 0040 05B0     		add	sp, sp, #20
 683              		@ sp needed
 684 0042 90BD     		pop	{r4, r7, pc}
 685              	.L37:
 686              		.align	2
 687              	.L36:
 688 0044 40010540 		.word	1074069824
 689 0048 FF00FFFF 		.word	-65281
 690              		.cfi_endproc
 691              	.LFE11:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 23


 692              		.size	PWM_2_SetPWMDeadTime, .-PWM_2_SetPWMDeadTime
 693              		.section	.text.PWM_2_SetPWMInvert,"ax",%progbits
 694              		.align	2
 695              		.global	PWM_2_SetPWMInvert
 696              		.code	16
 697              		.thumb_func
 698              		.type	PWM_2_SetPWMInvert, %function
 699              	PWM_2_SetPWMInvert:
 700              	.LFB12:
 564:Generated_Source\PSoC4/PWM_2.c **** 
 565:Generated_Source\PSoC4/PWM_2.c **** 
 566:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPWMInvert
 568:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 569:Generated_Source\PSoC4/PWM_2.c **** *
 570:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 571:Generated_Source\PSoC4/PWM_2.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/PWM_2.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/PWM_2.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/PWM_2.c **** *
 575:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 576:Generated_Source\PSoC4/PWM_2.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 578:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/PWM_2.c **** *         - PWM_2_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/PWM_2.c **** *
 581:Generated_Source\PSoC4/PWM_2.c **** * Return:
 582:Generated_Source\PSoC4/PWM_2.c **** *  None
 583:Generated_Source\PSoC4/PWM_2.c **** *
 584:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/PWM_2.c **** {
 701              		.loc 1 586 0
 702              		.cfi_startproc
 703 0000 90B5     		push	{r4, r7, lr}
 704              		.cfi_def_cfa_offset 12
 705              		.cfi_offset 4, -12
 706              		.cfi_offset 7, -8
 707              		.cfi_offset 14, -4
 708 0002 85B0     		sub	sp, sp, #20
 709              		.cfi_def_cfa_offset 32
 710 0004 00AF     		add	r7, sp, #0
 711              		.cfi_def_cfa_register 7
 712 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/PWM_2.c **** 
 589:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 713              		.loc 1 589 0
 714 0008 0F23     		mov	r3, #15
 715 000a FC18     		add	r4, r7, r3
 716 000c FFF7FEFF 		bl	CyEnterCriticalSection
 717 0010 031C     		mov	r3, r0
 718 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/PWM_2.c **** 
 591:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_INV_OUT_MASK;
 719              		.loc 1 591 0
 720 0014 0A4B     		ldr	r3, .L39
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 24


 721 0016 0A4A     		ldr	r2, .L39
 722 0018 1268     		ldr	r2, [r2]
 723 001a 0A49     		ldr	r1, .L39+4
 724 001c 0A40     		and	r2, r1
 725 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= mask;
 726              		.loc 1 592 0
 727 0020 074B     		ldr	r3, .L39
 728 0022 074A     		ldr	r2, .L39
 729 0024 1168     		ldr	r1, [r2]
 730 0026 7A68     		ldr	r2, [r7, #4]
 731 0028 0A43     		orr	r2, r1
 732 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/PWM_2.c **** 
 594:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 733              		.loc 1 594 0
 734 002c 0F23     		mov	r3, #15
 735 002e FB18     		add	r3, r7, r3
 736 0030 1B78     		ldrb	r3, [r3]
 737 0032 181C     		mov	r0, r3
 738 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/PWM_2.c **** }
 739              		.loc 1 595 0
 740 0038 BD46     		mov	sp, r7
 741 003a 05B0     		add	sp, sp, #20
 742              		@ sp needed
 743 003c 90BD     		pop	{r4, r7, pc}
 744              	.L40:
 745 003e C046     		.align	2
 746              	.L39:
 747 0040 40010540 		.word	1074069824
 748 0044 FFFFCFFF 		.word	-3145729
 749              		.cfi_endproc
 750              	.LFE12:
 751              		.size	PWM_2_SetPWMInvert, .-PWM_2_SetPWMInvert
 752              		.section	.text.PWM_2_WriteCounter,"ax",%progbits
 753              		.align	2
 754              		.global	PWM_2_WriteCounter
 755              		.code	16
 756              		.thumb_func
 757              		.type	PWM_2_WriteCounter, %function
 758              	PWM_2_WriteCounter:
 759              	.LFB13:
 596:Generated_Source\PSoC4/PWM_2.c **** 
 597:Generated_Source\PSoC4/PWM_2.c **** 
 598:Generated_Source\PSoC4/PWM_2.c **** 
 599:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WriteCounter
 601:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 602:Generated_Source\PSoC4/PWM_2.c **** *
 603:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 604:Generated_Source\PSoC4/PWM_2.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/PWM_2.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/PWM_2.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/PWM_2.c **** *
 608:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 609:Generated_Source\PSoC4/PWM_2.c **** *  count: value to write
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 25


 610:Generated_Source\PSoC4/PWM_2.c **** *
 611:Generated_Source\PSoC4/PWM_2.c **** * Return:
 612:Generated_Source\PSoC4/PWM_2.c **** *  None
 613:Generated_Source\PSoC4/PWM_2.c **** *
 614:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/PWM_2.c **** {
 760              		.loc 1 616 0
 761              		.cfi_startproc
 762 0000 80B5     		push	{r7, lr}
 763              		.cfi_def_cfa_offset 8
 764              		.cfi_offset 7, -8
 765              		.cfi_offset 14, -4
 766 0002 82B0     		sub	sp, sp, #8
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 770 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_COUNTER_REG = (count & PWM_2_16BIT_MASK);
 771              		.loc 1 617 0
 772 0008 034B     		ldr	r3, .L42
 773 000a 7A68     		ldr	r2, [r7, #4]
 774 000c 1204     		lsl	r2, r2, #16
 775 000e 120C     		lsr	r2, r2, #16
 776 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/PWM_2.c **** }
 777              		.loc 1 618 0
 778 0012 BD46     		mov	sp, r7
 779 0014 02B0     		add	sp, sp, #8
 780              		@ sp needed
 781 0016 80BD     		pop	{r7, pc}
 782              	.L43:
 783              		.align	2
 784              	.L42:
 785 0018 48010540 		.word	1074069832
 786              		.cfi_endproc
 787              	.LFE13:
 788              		.size	PWM_2_WriteCounter, .-PWM_2_WriteCounter
 789              		.section	.text.PWM_2_ReadCounter,"ax",%progbits
 790              		.align	2
 791              		.global	PWM_2_ReadCounter
 792              		.code	16
 793              		.thumb_func
 794              		.type	PWM_2_ReadCounter, %function
 795              	PWM_2_ReadCounter:
 796              	.LFB14:
 619:Generated_Source\PSoC4/PWM_2.c **** 
 620:Generated_Source\PSoC4/PWM_2.c **** 
 621:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 622:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadCounter
 623:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 624:Generated_Source\PSoC4/PWM_2.c **** *
 625:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 626:Generated_Source\PSoC4/PWM_2.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/PWM_2.c **** *
 628:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 629:Generated_Source\PSoC4/PWM_2.c **** *  None
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 26


 630:Generated_Source\PSoC4/PWM_2.c **** *
 631:Generated_Source\PSoC4/PWM_2.c **** * Return:
 632:Generated_Source\PSoC4/PWM_2.c **** *  Current counter value
 633:Generated_Source\PSoC4/PWM_2.c **** *
 634:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadCounter(void)
 636:Generated_Source\PSoC4/PWM_2.c **** {
 797              		.loc 1 636 0
 798              		.cfi_startproc
 799 0000 80B5     		push	{r7, lr}
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 7, -8
 802              		.cfi_offset 14, -4
 803 0002 00AF     		add	r7, sp, #0
 804              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_COUNTER_REG & PWM_2_16BIT_MASK);
 805              		.loc 1 637 0
 806 0004 034B     		ldr	r3, .L46
 807 0006 1B68     		ldr	r3, [r3]
 808 0008 1B04     		lsl	r3, r3, #16
 809 000a 1B0C     		lsr	r3, r3, #16
 638:Generated_Source\PSoC4/PWM_2.c **** }
 810              		.loc 1 638 0
 811 000c 181C     		mov	r0, r3
 812 000e BD46     		mov	sp, r7
 813              		@ sp needed
 814 0010 80BD     		pop	{r7, pc}
 815              	.L47:
 816 0012 C046     		.align	2
 817              	.L46:
 818 0014 48010540 		.word	1074069832
 819              		.cfi_endproc
 820              	.LFE14:
 821              		.size	PWM_2_ReadCounter, .-PWM_2_ReadCounter
 822              		.section	.text.PWM_2_SetCounterMode,"ax",%progbits
 823              		.align	2
 824              		.global	PWM_2_SetCounterMode
 825              		.code	16
 826              		.thumb_func
 827              		.type	PWM_2_SetCounterMode, %function
 828              	PWM_2_SetCounterMode:
 829              	.LFB15:
 639:Generated_Source\PSoC4/PWM_2.c **** 
 640:Generated_Source\PSoC4/PWM_2.c **** 
 641:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetCounterMode
 643:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 644:Generated_Source\PSoC4/PWM_2.c **** *
 645:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 646:Generated_Source\PSoC4/PWM_2.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/PWM_2.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/PWM_2.c **** *
 649:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 650:Generated_Source\PSoC4/PWM_2.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 652:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_COUNT_DOWN     - Counts down
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 27


 654:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/PWM_2.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/PWM_2.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/PWM_2.c **** *                                         and period
 659:Generated_Source\PSoC4/PWM_2.c **** *
 660:Generated_Source\PSoC4/PWM_2.c **** * Return:
 661:Generated_Source\PSoC4/PWM_2.c **** *  None
 662:Generated_Source\PSoC4/PWM_2.c **** *
 663:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/PWM_2.c **** {
 830              		.loc 1 665 0
 831              		.cfi_startproc
 832 0000 90B5     		push	{r4, r7, lr}
 833              		.cfi_def_cfa_offset 12
 834              		.cfi_offset 4, -12
 835              		.cfi_offset 7, -8
 836              		.cfi_offset 14, -4
 837 0002 85B0     		sub	sp, sp, #20
 838              		.cfi_def_cfa_offset 32
 839 0004 00AF     		add	r7, sp, #0
 840              		.cfi_def_cfa_register 7
 841 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/PWM_2.c **** 
 668:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 842              		.loc 1 668 0
 843 0008 0F23     		mov	r3, #15
 844 000a FC18     		add	r4, r7, r3
 845 000c FFF7FEFF 		bl	CyEnterCriticalSection
 846 0010 031C     		mov	r3, r0
 847 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/PWM_2.c **** 
 670:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_UPDOWN_MASK;
 848              		.loc 1 670 0
 849 0014 0A4B     		ldr	r3, .L49
 850 0016 0A4A     		ldr	r2, .L49
 851 0018 1268     		ldr	r2, [r2]
 852 001a 0A49     		ldr	r1, .L49+4
 853 001c 0A40     		and	r2, r1
 854 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= counterMode;
 855              		.loc 1 671 0
 856 0020 074B     		ldr	r3, .L49
 857 0022 074A     		ldr	r2, .L49
 858 0024 1168     		ldr	r1, [r2]
 859 0026 7A68     		ldr	r2, [r7, #4]
 860 0028 0A43     		orr	r2, r1
 861 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/PWM_2.c **** 
 673:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 862              		.loc 1 673 0
 863 002c 0F23     		mov	r3, #15
 864 002e FB18     		add	r3, r7, r3
 865 0030 1B78     		ldrb	r3, [r3]
 866 0032 181C     		mov	r0, r3
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 28


 867 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/PWM_2.c **** }
 868              		.loc 1 674 0
 869 0038 BD46     		mov	sp, r7
 870 003a 05B0     		add	sp, sp, #20
 871              		@ sp needed
 872 003c 90BD     		pop	{r4, r7, pc}
 873              	.L50:
 874 003e C046     		.align	2
 875              	.L49:
 876 0040 40010540 		.word	1074069824
 877 0044 FFFFFCFF 		.word	-196609
 878              		.cfi_endproc
 879              	.LFE15:
 880              		.size	PWM_2_SetCounterMode, .-PWM_2_SetCounterMode
 881              		.section	.text.PWM_2_WritePeriod,"ax",%progbits
 882              		.align	2
 883              		.global	PWM_2_WritePeriod
 884              		.code	16
 885              		.thumb_func
 886              		.type	PWM_2_WritePeriod, %function
 887              	PWM_2_WritePeriod:
 888              	.LFB16:
 675:Generated_Source\PSoC4/PWM_2.c **** 
 676:Generated_Source\PSoC4/PWM_2.c **** 
 677:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WritePeriod
 679:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 680:Generated_Source\PSoC4/PWM_2.c **** *
 681:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 682:Generated_Source\PSoC4/PWM_2.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/PWM_2.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/PWM_2.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/PWM_2.c **** *
 686:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 687:Generated_Source\PSoC4/PWM_2.c **** *  period: Period value
 688:Generated_Source\PSoC4/PWM_2.c **** *
 689:Generated_Source\PSoC4/PWM_2.c **** * Return:
 690:Generated_Source\PSoC4/PWM_2.c **** *  None
 691:Generated_Source\PSoC4/PWM_2.c **** *
 692:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/PWM_2.c **** {
 889              		.loc 1 694 0
 890              		.cfi_startproc
 891 0000 80B5     		push	{r7, lr}
 892              		.cfi_def_cfa_offset 8
 893              		.cfi_offset 7, -8
 894              		.cfi_offset 14, -4
 895 0002 82B0     		sub	sp, sp, #8
 896              		.cfi_def_cfa_offset 16
 897 0004 00AF     		add	r7, sp, #0
 898              		.cfi_def_cfa_register 7
 899 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_PERIOD_REG = (period & PWM_2_16BIT_MASK);
 900              		.loc 1 695 0
 901 0008 034B     		ldr	r3, .L52
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 29


 902 000a 7A68     		ldr	r2, [r7, #4]
 903 000c 1204     		lsl	r2, r2, #16
 904 000e 120C     		lsr	r2, r2, #16
 905 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/PWM_2.c **** }
 906              		.loc 1 696 0
 907 0012 BD46     		mov	sp, r7
 908 0014 02B0     		add	sp, sp, #8
 909              		@ sp needed
 910 0016 80BD     		pop	{r7, pc}
 911              	.L53:
 912              		.align	2
 913              	.L52:
 914 0018 54010540 		.word	1074069844
 915              		.cfi_endproc
 916              	.LFE16:
 917              		.size	PWM_2_WritePeriod, .-PWM_2_WritePeriod
 918              		.section	.text.PWM_2_ReadPeriod,"ax",%progbits
 919              		.align	2
 920              		.global	PWM_2_ReadPeriod
 921              		.code	16
 922              		.thumb_func
 923              		.type	PWM_2_ReadPeriod, %function
 924              	PWM_2_ReadPeriod:
 925              	.LFB17:
 697:Generated_Source\PSoC4/PWM_2.c **** 
 698:Generated_Source\PSoC4/PWM_2.c **** 
 699:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadPeriod
 701:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 702:Generated_Source\PSoC4/PWM_2.c **** *
 703:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 704:Generated_Source\PSoC4/PWM_2.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/PWM_2.c **** *
 706:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 707:Generated_Source\PSoC4/PWM_2.c **** *  None
 708:Generated_Source\PSoC4/PWM_2.c **** *
 709:Generated_Source\PSoC4/PWM_2.c **** * Return:
 710:Generated_Source\PSoC4/PWM_2.c **** *  Period value
 711:Generated_Source\PSoC4/PWM_2.c **** *
 712:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadPeriod(void)
 714:Generated_Source\PSoC4/PWM_2.c **** {
 926              		.loc 1 714 0
 927              		.cfi_startproc
 928 0000 80B5     		push	{r7, lr}
 929              		.cfi_def_cfa_offset 8
 930              		.cfi_offset 7, -8
 931              		.cfi_offset 14, -4
 932 0002 00AF     		add	r7, sp, #0
 933              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_PERIOD_REG & PWM_2_16BIT_MASK);
 934              		.loc 1 715 0
 935 0004 034B     		ldr	r3, .L56
 936 0006 1B68     		ldr	r3, [r3]
 937 0008 1B04     		lsl	r3, r3, #16
 938 000a 1B0C     		lsr	r3, r3, #16
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 30


 716:Generated_Source\PSoC4/PWM_2.c **** }
 939              		.loc 1 716 0
 940 000c 181C     		mov	r0, r3
 941 000e BD46     		mov	sp, r7
 942              		@ sp needed
 943 0010 80BD     		pop	{r7, pc}
 944              	.L57:
 945 0012 C046     		.align	2
 946              	.L56:
 947 0014 54010540 		.word	1074069844
 948              		.cfi_endproc
 949              	.LFE17:
 950              		.size	PWM_2_ReadPeriod, .-PWM_2_ReadPeriod
 951              		.section	.text.PWM_2_SetCompareSwap,"ax",%progbits
 952              		.align	2
 953              		.global	PWM_2_SetCompareSwap
 954              		.code	16
 955              		.thumb_func
 956              		.type	PWM_2_SetCompareSwap, %function
 957              	PWM_2_SetCompareSwap:
 958              	.LFB18:
 717:Generated_Source\PSoC4/PWM_2.c **** 
 718:Generated_Source\PSoC4/PWM_2.c **** 
 719:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetCompareSwap
 721:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 722:Generated_Source\PSoC4/PWM_2.c **** *
 723:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 724:Generated_Source\PSoC4/PWM_2.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/PWM_2.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/PWM_2.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/PWM_2.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/PWM_2.c **** *
 729:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 730:Generated_Source\PSoC4/PWM_2.c **** *  swapEnable
 731:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 732:Generated_Source\PSoC4/PWM_2.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/PWM_2.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/PWM_2.c **** *
 735:Generated_Source\PSoC4/PWM_2.c **** * Return:
 736:Generated_Source\PSoC4/PWM_2.c **** *  None
 737:Generated_Source\PSoC4/PWM_2.c **** *
 738:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/PWM_2.c **** {
 959              		.loc 1 740 0
 960              		.cfi_startproc
 961 0000 90B5     		push	{r4, r7, lr}
 962              		.cfi_def_cfa_offset 12
 963              		.cfi_offset 4, -12
 964              		.cfi_offset 7, -8
 965              		.cfi_offset 14, -4
 966 0002 85B0     		sub	sp, sp, #20
 967              		.cfi_def_cfa_offset 32
 968 0004 00AF     		add	r7, sp, #0
 969              		.cfi_def_cfa_register 7
 970 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 31


 741:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/PWM_2.c **** 
 743:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 971              		.loc 1 743 0
 972 0008 0F23     		mov	r3, #15
 973 000a FC18     		add	r4, r7, r3
 974 000c FFF7FEFF 		bl	CyEnterCriticalSection
 975 0010 031C     		mov	r3, r0
 976 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/PWM_2.c **** 
 745:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_RELOAD_CC_MASK;
 977              		.loc 1 745 0
 978 0014 0B4B     		ldr	r3, .L59
 979 0016 0B4A     		ldr	r2, .L59
 980 0018 1268     		ldr	r2, [r2]
 981 001a 0121     		mov	r1, #1
 982 001c 8A43     		bic	r2, r1
 983 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= (swapEnable & PWM_2_1BIT_MASK);
 984              		.loc 1 746 0
 985 0020 084B     		ldr	r3, .L59
 986 0022 084A     		ldr	r2, .L59
 987 0024 1168     		ldr	r1, [r2]
 988 0026 7A68     		ldr	r2, [r7, #4]
 989 0028 0120     		mov	r0, #1
 990 002a 0240     		and	r2, r0
 991 002c 0A43     		orr	r2, r1
 992 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/PWM_2.c **** 
 748:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 993              		.loc 1 748 0
 994 0030 0F23     		mov	r3, #15
 995 0032 FB18     		add	r3, r7, r3
 996 0034 1B78     		ldrb	r3, [r3]
 997 0036 181C     		mov	r0, r3
 998 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/PWM_2.c **** }
 999              		.loc 1 749 0
 1000 003c BD46     		mov	sp, r7
 1001 003e 05B0     		add	sp, sp, #20
 1002              		@ sp needed
 1003 0040 90BD     		pop	{r4, r7, pc}
 1004              	.L60:
 1005 0042 C046     		.align	2
 1006              	.L59:
 1007 0044 40010540 		.word	1074069824
 1008              		.cfi_endproc
 1009              	.LFE18:
 1010              		.size	PWM_2_SetCompareSwap, .-PWM_2_SetCompareSwap
 1011              		.section	.text.PWM_2_WritePeriodBuf,"ax",%progbits
 1012              		.align	2
 1013              		.global	PWM_2_WritePeriodBuf
 1014              		.code	16
 1015              		.thumb_func
 1016              		.type	PWM_2_WritePeriodBuf, %function
 1017              	PWM_2_WritePeriodBuf:
 1018              	.LFB19:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 32


 750:Generated_Source\PSoC4/PWM_2.c **** 
 751:Generated_Source\PSoC4/PWM_2.c **** 
 752:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WritePeriodBuf
 754:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 755:Generated_Source\PSoC4/PWM_2.c **** *
 756:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 757:Generated_Source\PSoC4/PWM_2.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/PWM_2.c **** *
 759:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 760:Generated_Source\PSoC4/PWM_2.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/PWM_2.c **** *
 762:Generated_Source\PSoC4/PWM_2.c **** * Return:
 763:Generated_Source\PSoC4/PWM_2.c **** *  None
 764:Generated_Source\PSoC4/PWM_2.c **** *
 765:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/PWM_2.c **** {
 1019              		.loc 1 767 0
 1020              		.cfi_startproc
 1021 0000 80B5     		push	{r7, lr}
 1022              		.cfi_def_cfa_offset 8
 1023              		.cfi_offset 7, -8
 1024              		.cfi_offset 14, -4
 1025 0002 82B0     		sub	sp, sp, #8
 1026              		.cfi_def_cfa_offset 16
 1027 0004 00AF     		add	r7, sp, #0
 1028              		.cfi_def_cfa_register 7
 1029 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_PERIOD_BUF_REG = (periodBuf & PWM_2_16BIT_MASK);
 1030              		.loc 1 768 0
 1031 0008 034B     		ldr	r3, .L62
 1032 000a 7A68     		ldr	r2, [r7, #4]
 1033 000c 1204     		lsl	r2, r2, #16
 1034 000e 120C     		lsr	r2, r2, #16
 1035 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/PWM_2.c **** }
 1036              		.loc 1 769 0
 1037 0012 BD46     		mov	sp, r7
 1038 0014 02B0     		add	sp, sp, #8
 1039              		@ sp needed
 1040 0016 80BD     		pop	{r7, pc}
 1041              	.L63:
 1042              		.align	2
 1043              	.L62:
 1044 0018 58010540 		.word	1074069848
 1045              		.cfi_endproc
 1046              	.LFE19:
 1047              		.size	PWM_2_WritePeriodBuf, .-PWM_2_WritePeriodBuf
 1048              		.section	.text.PWM_2_ReadPeriodBuf,"ax",%progbits
 1049              		.align	2
 1050              		.global	PWM_2_ReadPeriodBuf
 1051              		.code	16
 1052              		.thumb_func
 1053              		.type	PWM_2_ReadPeriodBuf, %function
 1054              	PWM_2_ReadPeriodBuf:
 1055              	.LFB20:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 33


 770:Generated_Source\PSoC4/PWM_2.c **** 
 771:Generated_Source\PSoC4/PWM_2.c **** 
 772:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadPeriodBuf
 774:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 775:Generated_Source\PSoC4/PWM_2.c **** *
 776:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 777:Generated_Source\PSoC4/PWM_2.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/PWM_2.c **** *
 779:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 780:Generated_Source\PSoC4/PWM_2.c **** *  None
 781:Generated_Source\PSoC4/PWM_2.c **** *
 782:Generated_Source\PSoC4/PWM_2.c **** * Return:
 783:Generated_Source\PSoC4/PWM_2.c **** *  Period value
 784:Generated_Source\PSoC4/PWM_2.c **** *
 785:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/PWM_2.c **** {
 1056              		.loc 1 787 0
 1057              		.cfi_startproc
 1058 0000 80B5     		push	{r7, lr}
 1059              		.cfi_def_cfa_offset 8
 1060              		.cfi_offset 7, -8
 1061              		.cfi_offset 14, -4
 1062 0002 00AF     		add	r7, sp, #0
 1063              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_PERIOD_BUF_REG & PWM_2_16BIT_MASK);
 1064              		.loc 1 788 0
 1065 0004 034B     		ldr	r3, .L66
 1066 0006 1B68     		ldr	r3, [r3]
 1067 0008 1B04     		lsl	r3, r3, #16
 1068 000a 1B0C     		lsr	r3, r3, #16
 789:Generated_Source\PSoC4/PWM_2.c **** }
 1069              		.loc 1 789 0
 1070 000c 181C     		mov	r0, r3
 1071 000e BD46     		mov	sp, r7
 1072              		@ sp needed
 1073 0010 80BD     		pop	{r7, pc}
 1074              	.L67:
 1075 0012 C046     		.align	2
 1076              	.L66:
 1077 0014 58010540 		.word	1074069848
 1078              		.cfi_endproc
 1079              	.LFE20:
 1080              		.size	PWM_2_ReadPeriodBuf, .-PWM_2_ReadPeriodBuf
 1081              		.section	.text.PWM_2_SetPeriodSwap,"ax",%progbits
 1082              		.align	2
 1083              		.global	PWM_2_SetPeriodSwap
 1084              		.code	16
 1085              		.thumb_func
 1086              		.type	PWM_2_SetPeriodSwap, %function
 1087              	PWM_2_SetPeriodSwap:
 1088              	.LFB21:
 790:Generated_Source\PSoC4/PWM_2.c **** 
 791:Generated_Source\PSoC4/PWM_2.c **** 
 792:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetPeriodSwap
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 34


 794:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 795:Generated_Source\PSoC4/PWM_2.c **** *
 796:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 797:Generated_Source\PSoC4/PWM_2.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/PWM_2.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/PWM_2.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/PWM_2.c **** *  switch event.
 801:Generated_Source\PSoC4/PWM_2.c **** *
 802:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 803:Generated_Source\PSoC4/PWM_2.c **** *  swapEnable
 804:Generated_Source\PSoC4/PWM_2.c **** *   Values:
 805:Generated_Source\PSoC4/PWM_2.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/PWM_2.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/PWM_2.c **** *
 808:Generated_Source\PSoC4/PWM_2.c **** * Return:
 809:Generated_Source\PSoC4/PWM_2.c **** *  None
 810:Generated_Source\PSoC4/PWM_2.c **** *
 811:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/PWM_2.c **** {
 1089              		.loc 1 813 0
 1090              		.cfi_startproc
 1091 0000 90B5     		push	{r4, r7, lr}
 1092              		.cfi_def_cfa_offset 12
 1093              		.cfi_offset 4, -12
 1094              		.cfi_offset 7, -8
 1095              		.cfi_offset 14, -4
 1096 0002 85B0     		sub	sp, sp, #20
 1097              		.cfi_def_cfa_offset 32
 1098 0004 00AF     		add	r7, sp, #0
 1099              		.cfi_def_cfa_register 7
 1100 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/PWM_2.c **** 
 816:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1101              		.loc 1 816 0
 1102 0008 0F23     		mov	r3, #15
 1103 000a FC18     		add	r4, r7, r3
 1104 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1105 0010 031C     		mov	r3, r0
 1106 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/PWM_2.c **** 
 818:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG &= (uint32)~PWM_2_RELOAD_PERIOD_MASK;
 1107              		.loc 1 818 0
 1108 0014 0B4B     		ldr	r3, .L69
 1109 0016 0B4A     		ldr	r2, .L69
 1110 0018 1268     		ldr	r2, [r2]
 1111 001a 0221     		mov	r1, #2
 1112 001c 8A43     		bic	r2, r1
 1113 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_CONTROL_REG |= ((uint32)((swapEnable & PWM_2_1BIT_MASK) <<
 1114              		.loc 1 819 0
 1115 0020 084B     		ldr	r3, .L69
 1116 0022 084A     		ldr	r2, .L69
 1117 0024 1168     		ldr	r1, [r2]
 1118 0026 7A68     		ldr	r2, [r7, #4]
 1119 0028 0120     		mov	r0, #1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 35


 1120 002a 0240     		and	r2, r0
 1121 002c 5200     		lsl	r2, r2, #1
 1122 002e 0A43     		orr	r2, r1
 1123 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/PWM_2.c ****                                                             PWM_2_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/PWM_2.c **** 
 822:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1124              		.loc 1 822 0
 1125 0032 0F23     		mov	r3, #15
 1126 0034 FB18     		add	r3, r7, r3
 1127 0036 1B78     		ldrb	r3, [r3]
 1128 0038 181C     		mov	r0, r3
 1129 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/PWM_2.c **** }
 1130              		.loc 1 823 0
 1131 003e BD46     		mov	sp, r7
 1132 0040 05B0     		add	sp, sp, #20
 1133              		@ sp needed
 1134 0042 90BD     		pop	{r4, r7, pc}
 1135              	.L70:
 1136              		.align	2
 1137              	.L69:
 1138 0044 40010540 		.word	1074069824
 1139              		.cfi_endproc
 1140              	.LFE21:
 1141              		.size	PWM_2_SetPeriodSwap, .-PWM_2_SetPeriodSwap
 1142              		.section	.text.PWM_2_WriteCompare,"ax",%progbits
 1143              		.align	2
 1144              		.global	PWM_2_WriteCompare
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	PWM_2_WriteCompare, %function
 1148              	PWM_2_WriteCompare:
 1149              	.LFB22:
 824:Generated_Source\PSoC4/PWM_2.c **** 
 825:Generated_Source\PSoC4/PWM_2.c **** 
 826:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WriteCompare
 828:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 829:Generated_Source\PSoC4/PWM_2.c **** *
 830:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 831:Generated_Source\PSoC4/PWM_2.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/PWM_2.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/PWM_2.c **** *
 834:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 835:Generated_Source\PSoC4/PWM_2.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/PWM_2.c **** *
 837:Generated_Source\PSoC4/PWM_2.c **** * Return:
 838:Generated_Source\PSoC4/PWM_2.c **** *  None
 839:Generated_Source\PSoC4/PWM_2.c **** *
 840:Generated_Source\PSoC4/PWM_2.c **** * Note:
 841:Generated_Source\PSoC4/PWM_2.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/PWM_2.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/PWM_2.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/PWM_2.c **** *  compare value in the Down counting mode (except 0xFFFFu).
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 36


 847:Generated_Source\PSoC4/PWM_2.c **** *
 848:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/PWM_2.c **** {
 1150              		.loc 1 850 0
 1151              		.cfi_startproc
 1152 0000 80B5     		push	{r7, lr}
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 7, -8
 1155              		.cfi_offset 14, -4
 1156 0002 82B0     		sub	sp, sp, #8
 1157              		.cfi_def_cfa_offset 16
 1158 0004 00AF     		add	r7, sp, #0
 1159              		.cfi_def_cfa_register 7
 1160 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/PWM_2.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/PWM_2.c **** 
 855:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/PWM_2.c ****         currentMode = ((PWM_2_CONTROL_REG & PWM_2_UPDOWN_MASK) >> PWM_2_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/PWM_2.c **** 
 858:Generated_Source\PSoC4/PWM_2.c ****         if (((uint32)PWM_2__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/PWM_2.c ****         {
 860:Generated_Source\PSoC4/PWM_2.c ****             compare++;
 861:Generated_Source\PSoC4/PWM_2.c ****         }
 862:Generated_Source\PSoC4/PWM_2.c ****         else if (((uint32)PWM_2__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/PWM_2.c ****         {
 864:Generated_Source\PSoC4/PWM_2.c ****             compare--;
 865:Generated_Source\PSoC4/PWM_2.c ****         }
 866:Generated_Source\PSoC4/PWM_2.c ****         else
 867:Generated_Source\PSoC4/PWM_2.c ****         {
 868:Generated_Source\PSoC4/PWM_2.c ****         }
 869:Generated_Source\PSoC4/PWM_2.c ****         
 870:Generated_Source\PSoC4/PWM_2.c ****     
 871:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/PWM_2.c ****     
 873:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_COMP_CAP_REG = (compare & PWM_2_16BIT_MASK);
 1161              		.loc 1 873 0
 1162 0008 034B     		ldr	r3, .L72
 1163 000a 7A68     		ldr	r2, [r7, #4]
 1164 000c 1204     		lsl	r2, r2, #16
 1165 000e 120C     		lsr	r2, r2, #16
 1166 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/PWM_2.c **** }
 1167              		.loc 1 874 0
 1168 0012 BD46     		mov	sp, r7
 1169 0014 02B0     		add	sp, sp, #8
 1170              		@ sp needed
 1171 0016 80BD     		pop	{r7, pc}
 1172              	.L73:
 1173              		.align	2
 1174              	.L72:
 1175 0018 4C010540 		.word	1074069836
 1176              		.cfi_endproc
 1177              	.LFE22:
 1178              		.size	PWM_2_WriteCompare, .-PWM_2_WriteCompare
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 37


 1179              		.section	.text.PWM_2_ReadCompare,"ax",%progbits
 1180              		.align	2
 1181              		.global	PWM_2_ReadCompare
 1182              		.code	16
 1183              		.thumb_func
 1184              		.type	PWM_2_ReadCompare, %function
 1185              	PWM_2_ReadCompare:
 1186              	.LFB23:
 875:Generated_Source\PSoC4/PWM_2.c **** 
 876:Generated_Source\PSoC4/PWM_2.c **** 
 877:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadCompare
 879:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 880:Generated_Source\PSoC4/PWM_2.c **** *
 881:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 882:Generated_Source\PSoC4/PWM_2.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/PWM_2.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/PWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/PWM_2.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/PWM_2.c **** *
 888:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 889:Generated_Source\PSoC4/PWM_2.c **** *  None
 890:Generated_Source\PSoC4/PWM_2.c **** *
 891:Generated_Source\PSoC4/PWM_2.c **** * Return:
 892:Generated_Source\PSoC4/PWM_2.c **** *  Compare value
 893:Generated_Source\PSoC4/PWM_2.c **** *
 894:Generated_Source\PSoC4/PWM_2.c **** * Note:
 895:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/PWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/PWM_2.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/PWM_2.c **** *
 899:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadCompare(void)
 901:Generated_Source\PSoC4/PWM_2.c **** {
 1187              		.loc 1 901 0
 1188              		.cfi_startproc
 1189 0000 80B5     		push	{r7, lr}
 1190              		.cfi_def_cfa_offset 8
 1191              		.cfi_offset 7, -8
 1192              		.cfi_offset 14, -4
 1193 0002 00AF     		add	r7, sp, #0
 1194              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/PWM_2.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/PWM_2.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/PWM_2.c **** 
 907:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 908:Generated_Source\PSoC4/PWM_2.c ****         currentMode = ((PWM_2_CONTROL_REG & PWM_2_UPDOWN_MASK) >> PWM_2_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/PWM_2.c ****         
 910:Generated_Source\PSoC4/PWM_2.c ****         regVal = PWM_2_COMP_CAP_REG;
 911:Generated_Source\PSoC4/PWM_2.c ****         
 912:Generated_Source\PSoC4/PWM_2.c ****         if (((uint32)PWM_2__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/PWM_2.c ****         {
 914:Generated_Source\PSoC4/PWM_2.c ****             regVal--;
 915:Generated_Source\PSoC4/PWM_2.c ****         }
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 38


 916:Generated_Source\PSoC4/PWM_2.c ****         else if (((uint32)PWM_2__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/PWM_2.c ****         {
 918:Generated_Source\PSoC4/PWM_2.c ****             regVal++;
 919:Generated_Source\PSoC4/PWM_2.c ****         }
 920:Generated_Source\PSoC4/PWM_2.c ****         else
 921:Generated_Source\PSoC4/PWM_2.c ****         {
 922:Generated_Source\PSoC4/PWM_2.c ****         }
 923:Generated_Source\PSoC4/PWM_2.c **** 
 924:Generated_Source\PSoC4/PWM_2.c ****         return (regVal & PWM_2_16BIT_MASK);
 925:Generated_Source\PSoC4/PWM_2.c ****     #else
 926:Generated_Source\PSoC4/PWM_2.c ****         return (PWM_2_COMP_CAP_REG & PWM_2_16BIT_MASK);
 1195              		.loc 1 926 0
 1196 0004 034B     		ldr	r3, .L76
 1197 0006 1B68     		ldr	r3, [r3]
 1198 0008 1B04     		lsl	r3, r3, #16
 1199 000a 1B0C     		lsr	r3, r3, #16
 927:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/PWM_2.c **** }
 1200              		.loc 1 928 0
 1201 000c 181C     		mov	r0, r3
 1202 000e BD46     		mov	sp, r7
 1203              		@ sp needed
 1204 0010 80BD     		pop	{r7, pc}
 1205              	.L77:
 1206 0012 C046     		.align	2
 1207              	.L76:
 1208 0014 4C010540 		.word	1074069836
 1209              		.cfi_endproc
 1210              	.LFE23:
 1211              		.size	PWM_2_ReadCompare, .-PWM_2_ReadCompare
 1212              		.section	.text.PWM_2_WriteCompareBuf,"ax",%progbits
 1213              		.align	2
 1214              		.global	PWM_2_WriteCompareBuf
 1215              		.code	16
 1216              		.thumb_func
 1217              		.type	PWM_2_WriteCompareBuf, %function
 1218              	PWM_2_WriteCompareBuf:
 1219              	.LFB24:
 929:Generated_Source\PSoC4/PWM_2.c **** 
 930:Generated_Source\PSoC4/PWM_2.c **** 
 931:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_WriteCompareBuf
 933:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 934:Generated_Source\PSoC4/PWM_2.c **** *
 935:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 936:Generated_Source\PSoC4/PWM_2.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/PWM_2.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/PWM_2.c **** *
 939:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 940:Generated_Source\PSoC4/PWM_2.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/PWM_2.c **** *
 942:Generated_Source\PSoC4/PWM_2.c **** * Return:
 943:Generated_Source\PSoC4/PWM_2.c **** *  None
 944:Generated_Source\PSoC4/PWM_2.c **** *
 945:Generated_Source\PSoC4/PWM_2.c **** * Note:
 946:Generated_Source\PSoC4/PWM_2.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/PWM_2.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 39


 948:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/PWM_2.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/PWM_2.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/PWM_2.c **** *
 953:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/PWM_2.c **** {
 1220              		.loc 1 955 0
 1221              		.cfi_startproc
 1222 0000 80B5     		push	{r7, lr}
 1223              		.cfi_def_cfa_offset 8
 1224              		.cfi_offset 7, -8
 1225              		.cfi_offset 14, -4
 1226 0002 82B0     		sub	sp, sp, #8
 1227              		.cfi_def_cfa_offset 16
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/PWM_2.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/PWM_2.c **** 
 960:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/PWM_2.c ****         currentMode = ((PWM_2_CONTROL_REG & PWM_2_UPDOWN_MASK) >> PWM_2_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/PWM_2.c **** 
 963:Generated_Source\PSoC4/PWM_2.c ****         if (((uint32)PWM_2__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/PWM_2.c ****         {
 965:Generated_Source\PSoC4/PWM_2.c ****             compareBuf++;
 966:Generated_Source\PSoC4/PWM_2.c ****         }
 967:Generated_Source\PSoC4/PWM_2.c ****         else if (((uint32)PWM_2__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/PWM_2.c ****         {
 969:Generated_Source\PSoC4/PWM_2.c ****             compareBuf --;
 970:Generated_Source\PSoC4/PWM_2.c ****         }
 971:Generated_Source\PSoC4/PWM_2.c ****         else
 972:Generated_Source\PSoC4/PWM_2.c ****         {
 973:Generated_Source\PSoC4/PWM_2.c ****         }
 974:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/PWM_2.c ****     
 976:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_COMP_CAP_BUF_REG = (compareBuf & PWM_2_16BIT_MASK);
 1231              		.loc 1 976 0
 1232 0008 034B     		ldr	r3, .L79
 1233 000a 7A68     		ldr	r2, [r7, #4]
 1234 000c 1204     		lsl	r2, r2, #16
 1235 000e 120C     		lsr	r2, r2, #16
 1236 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/PWM_2.c **** }
 1237              		.loc 1 977 0
 1238 0012 BD46     		mov	sp, r7
 1239 0014 02B0     		add	sp, sp, #8
 1240              		@ sp needed
 1241 0016 80BD     		pop	{r7, pc}
 1242              	.L80:
 1243              		.align	2
 1244              	.L79:
 1245 0018 50010540 		.word	1074069840
 1246              		.cfi_endproc
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 40


 1247              	.LFE24:
 1248              		.size	PWM_2_WriteCompareBuf, .-PWM_2_WriteCompareBuf
 1249              		.section	.text.PWM_2_ReadCompareBuf,"ax",%progbits
 1250              		.align	2
 1251              		.global	PWM_2_ReadCompareBuf
 1252              		.code	16
 1253              		.thumb_func
 1254              		.type	PWM_2_ReadCompareBuf, %function
 1255              	PWM_2_ReadCompareBuf:
 1256              	.LFB25:
 978:Generated_Source\PSoC4/PWM_2.c **** 
 979:Generated_Source\PSoC4/PWM_2.c **** 
 980:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadCompareBuf
 982:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
 983:Generated_Source\PSoC4/PWM_2.c **** *
 984:Generated_Source\PSoC4/PWM_2.c **** * Summary:
 985:Generated_Source\PSoC4/PWM_2.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/PWM_2.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/PWM_2.c **** *
 988:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
 989:Generated_Source\PSoC4/PWM_2.c **** *  None
 990:Generated_Source\PSoC4/PWM_2.c **** *
 991:Generated_Source\PSoC4/PWM_2.c **** * Return:
 992:Generated_Source\PSoC4/PWM_2.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/PWM_2.c **** *
 994:Generated_Source\PSoC4/PWM_2.c **** * Note:
 995:Generated_Source\PSoC4/PWM_2.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/PWM_2.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/PWM_2.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/PWM_2.c **** *
 999:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/PWM_2.c **** {
 1257              		.loc 1 1001 0
 1258              		.cfi_startproc
 1259 0000 80B5     		push	{r7, lr}
 1260              		.cfi_def_cfa_offset 8
 1261              		.cfi_offset 7, -8
 1262              		.cfi_offset 14, -4
 1263 0002 00AF     		add	r7, sp, #0
 1264              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/PWM_2.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/PWM_2.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/PWM_2.c **** 
1007:Generated_Source\PSoC4/PWM_2.c ****     #if (PWM_2_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/PWM_2.c ****         currentMode = ((PWM_2_CONTROL_REG & PWM_2_UPDOWN_MASK) >> PWM_2_UPDOWN_SHIFT);
1009:Generated_Source\PSoC4/PWM_2.c **** 
1010:Generated_Source\PSoC4/PWM_2.c ****         regVal = PWM_2_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/PWM_2.c ****         
1012:Generated_Source\PSoC4/PWM_2.c ****         if (((uint32)PWM_2__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/PWM_2.c ****         {
1014:Generated_Source\PSoC4/PWM_2.c ****             regVal--;
1015:Generated_Source\PSoC4/PWM_2.c ****         }
1016:Generated_Source\PSoC4/PWM_2.c ****         else if (((uint32)PWM_2__COUNT_UP == currentMode) && (0xFFFFu != regVal))
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 41


1017:Generated_Source\PSoC4/PWM_2.c ****         {
1018:Generated_Source\PSoC4/PWM_2.c ****             regVal++;
1019:Generated_Source\PSoC4/PWM_2.c ****         }
1020:Generated_Source\PSoC4/PWM_2.c ****         else
1021:Generated_Source\PSoC4/PWM_2.c ****         {
1022:Generated_Source\PSoC4/PWM_2.c ****         }
1023:Generated_Source\PSoC4/PWM_2.c **** 
1024:Generated_Source\PSoC4/PWM_2.c ****         return (regVal & PWM_2_16BIT_MASK);
1025:Generated_Source\PSoC4/PWM_2.c ****     #else
1026:Generated_Source\PSoC4/PWM_2.c ****         return (PWM_2_COMP_CAP_BUF_REG & PWM_2_16BIT_MASK);
 1265              		.loc 1 1026 0
 1266 0004 034B     		ldr	r3, .L83
 1267 0006 1B68     		ldr	r3, [r3]
 1268 0008 1B04     		lsl	r3, r3, #16
 1269 000a 1B0C     		lsr	r3, r3, #16
1027:Generated_Source\PSoC4/PWM_2.c ****     #endif /* (PWM_2_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/PWM_2.c **** }
 1270              		.loc 1 1028 0
 1271 000c 181C     		mov	r0, r3
 1272 000e BD46     		mov	sp, r7
 1273              		@ sp needed
 1274 0010 80BD     		pop	{r7, pc}
 1275              	.L84:
 1276 0012 C046     		.align	2
 1277              	.L83:
 1278 0014 50010540 		.word	1074069840
 1279              		.cfi_endproc
 1280              	.LFE25:
 1281              		.size	PWM_2_ReadCompareBuf, .-PWM_2_ReadCompareBuf
 1282              		.section	.text.PWM_2_ReadCapture,"ax",%progbits
 1283              		.align	2
 1284              		.global	PWM_2_ReadCapture
 1285              		.code	16
 1286              		.thumb_func
 1287              		.type	PWM_2_ReadCapture, %function
 1288              	PWM_2_ReadCapture:
 1289              	.LFB26:
1029:Generated_Source\PSoC4/PWM_2.c **** 
1030:Generated_Source\PSoC4/PWM_2.c **** 
1031:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadCapture
1033:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1034:Generated_Source\PSoC4/PWM_2.c **** *
1035:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1036:Generated_Source\PSoC4/PWM_2.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/PWM_2.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/PWM_2.c **** *
1039:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1040:Generated_Source\PSoC4/PWM_2.c **** *  None
1041:Generated_Source\PSoC4/PWM_2.c **** *
1042:Generated_Source\PSoC4/PWM_2.c **** * Return:
1043:Generated_Source\PSoC4/PWM_2.c **** *  Capture value
1044:Generated_Source\PSoC4/PWM_2.c **** *
1045:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadCapture(void)
1047:Generated_Source\PSoC4/PWM_2.c **** {
 1290              		.loc 1 1047 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 42


 1291              		.cfi_startproc
 1292 0000 80B5     		push	{r7, lr}
 1293              		.cfi_def_cfa_offset 8
 1294              		.cfi_offset 7, -8
 1295              		.cfi_offset 14, -4
 1296 0002 00AF     		add	r7, sp, #0
 1297              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_COMP_CAP_REG & PWM_2_16BIT_MASK);
 1298              		.loc 1 1048 0
 1299 0004 034B     		ldr	r3, .L87
 1300 0006 1B68     		ldr	r3, [r3]
 1301 0008 1B04     		lsl	r3, r3, #16
 1302 000a 1B0C     		lsr	r3, r3, #16
1049:Generated_Source\PSoC4/PWM_2.c **** }
 1303              		.loc 1 1049 0
 1304 000c 181C     		mov	r0, r3
 1305 000e BD46     		mov	sp, r7
 1306              		@ sp needed
 1307 0010 80BD     		pop	{r7, pc}
 1308              	.L88:
 1309 0012 C046     		.align	2
 1310              	.L87:
 1311 0014 4C010540 		.word	1074069836
 1312              		.cfi_endproc
 1313              	.LFE26:
 1314              		.size	PWM_2_ReadCapture, .-PWM_2_ReadCapture
 1315              		.section	.text.PWM_2_ReadCaptureBuf,"ax",%progbits
 1316              		.align	2
 1317              		.global	PWM_2_ReadCaptureBuf
 1318              		.code	16
 1319              		.thumb_func
 1320              		.type	PWM_2_ReadCaptureBuf, %function
 1321              	PWM_2_ReadCaptureBuf:
 1322              	.LFB27:
1050:Generated_Source\PSoC4/PWM_2.c **** 
1051:Generated_Source\PSoC4/PWM_2.c **** 
1052:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadCaptureBuf
1054:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1055:Generated_Source\PSoC4/PWM_2.c **** *
1056:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1057:Generated_Source\PSoC4/PWM_2.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/PWM_2.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/PWM_2.c **** *
1060:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1061:Generated_Source\PSoC4/PWM_2.c **** *  None
1062:Generated_Source\PSoC4/PWM_2.c **** *
1063:Generated_Source\PSoC4/PWM_2.c **** * Return:
1064:Generated_Source\PSoC4/PWM_2.c **** *  Capture buffer value
1065:Generated_Source\PSoC4/PWM_2.c **** *
1066:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/PWM_2.c **** {
 1323              		.loc 1 1068 0
 1324              		.cfi_startproc
 1325 0000 80B5     		push	{r7, lr}
 1326              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 43


 1327              		.cfi_offset 7, -8
 1328              		.cfi_offset 14, -4
 1329 0002 00AF     		add	r7, sp, #0
 1330              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_COMP_CAP_BUF_REG & PWM_2_16BIT_MASK);
 1331              		.loc 1 1069 0
 1332 0004 034B     		ldr	r3, .L91
 1333 0006 1B68     		ldr	r3, [r3]
 1334 0008 1B04     		lsl	r3, r3, #16
 1335 000a 1B0C     		lsr	r3, r3, #16
1070:Generated_Source\PSoC4/PWM_2.c **** }
 1336              		.loc 1 1070 0
 1337 000c 181C     		mov	r0, r3
 1338 000e BD46     		mov	sp, r7
 1339              		@ sp needed
 1340 0010 80BD     		pop	{r7, pc}
 1341              	.L92:
 1342 0012 C046     		.align	2
 1343              	.L91:
 1344 0014 50010540 		.word	1074069840
 1345              		.cfi_endproc
 1346              	.LFE27:
 1347              		.size	PWM_2_ReadCaptureBuf, .-PWM_2_ReadCaptureBuf
 1348              		.section	.text.PWM_2_SetCaptureMode,"ax",%progbits
 1349              		.align	2
 1350              		.global	PWM_2_SetCaptureMode
 1351              		.code	16
 1352              		.thumb_func
 1353              		.type	PWM_2_SetCaptureMode, %function
 1354              	PWM_2_SetCaptureMode:
 1355              	.LFB28:
1071:Generated_Source\PSoC4/PWM_2.c **** 
1072:Generated_Source\PSoC4/PWM_2.c **** 
1073:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetCaptureMode
1075:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1076:Generated_Source\PSoC4/PWM_2.c **** *
1077:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1078:Generated_Source\PSoC4/PWM_2.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/PWM_2.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/PWM_2.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/PWM_2.c **** *
1082:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1083:Generated_Source\PSoC4/PWM_2.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1085:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_BOTH      - Both rising and falling edge
1089:Generated_Source\PSoC4/PWM_2.c **** *
1090:Generated_Source\PSoC4/PWM_2.c **** * Return:
1091:Generated_Source\PSoC4/PWM_2.c **** *  None
1092:Generated_Source\PSoC4/PWM_2.c **** *
1093:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/PWM_2.c **** {
 1356              		.loc 1 1095 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 44


 1357              		.cfi_startproc
 1358 0000 90B5     		push	{r4, r7, lr}
 1359              		.cfi_def_cfa_offset 12
 1360              		.cfi_offset 4, -12
 1361              		.cfi_offset 7, -8
 1362              		.cfi_offset 14, -4
 1363 0002 85B0     		sub	sp, sp, #20
 1364              		.cfi_def_cfa_offset 32
 1365 0004 00AF     		add	r7, sp, #0
 1366              		.cfi_def_cfa_register 7
 1367 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/PWM_2.c **** 
1098:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1368              		.loc 1 1098 0
 1369 0008 0F23     		mov	r3, #15
 1370 000a FC18     		add	r4, r7, r3
 1371 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1372 0010 031C     		mov	r3, r0
 1373 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/PWM_2.c **** 
1100:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG &= (uint32)~PWM_2_CAPTURE_MASK;
 1374              		.loc 1 1100 0
 1375 0014 0A4B     		ldr	r3, .L94
 1376 0016 0A4A     		ldr	r2, .L94
 1377 0018 1268     		ldr	r2, [r2]
 1378 001a 0321     		mov	r1, #3
 1379 001c 8A43     		bic	r2, r1
 1380 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG |= triggerMode;
 1381              		.loc 1 1101 0
 1382 0020 074B     		ldr	r3, .L94
 1383 0022 074A     		ldr	r2, .L94
 1384 0024 1168     		ldr	r1, [r2]
 1385 0026 7A68     		ldr	r2, [r7, #4]
 1386 0028 0A43     		orr	r2, r1
 1387 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/PWM_2.c **** 
1103:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1388              		.loc 1 1103 0
 1389 002c 0F23     		mov	r3, #15
 1390 002e FB18     		add	r3, r7, r3
 1391 0030 1B78     		ldrb	r3, [r3]
 1392 0032 181C     		mov	r0, r3
 1393 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/PWM_2.c **** }
 1394              		.loc 1 1104 0
 1395 0038 BD46     		mov	sp, r7
 1396 003a 05B0     		add	sp, sp, #20
 1397              		@ sp needed
 1398 003c 90BD     		pop	{r4, r7, pc}
 1399              	.L95:
 1400 003e C046     		.align	2
 1401              	.L94:
 1402 0040 64010540 		.word	1074069860
 1403              		.cfi_endproc
 1404              	.LFE28:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 45


 1405              		.size	PWM_2_SetCaptureMode, .-PWM_2_SetCaptureMode
 1406              		.section	.text.PWM_2_SetReloadMode,"ax",%progbits
 1407              		.align	2
 1408              		.global	PWM_2_SetReloadMode
 1409              		.code	16
 1410              		.thumb_func
 1411              		.type	PWM_2_SetReloadMode, %function
 1412              	PWM_2_SetReloadMode:
 1413              	.LFB29:
1105:Generated_Source\PSoC4/PWM_2.c **** 
1106:Generated_Source\PSoC4/PWM_2.c **** 
1107:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetReloadMode
1109:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1110:Generated_Source\PSoC4/PWM_2.c **** *
1111:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1112:Generated_Source\PSoC4/PWM_2.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/PWM_2.c **** *  input.
1114:Generated_Source\PSoC4/PWM_2.c **** *
1115:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1116:Generated_Source\PSoC4/PWM_2.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1118:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/PWM_2.c **** *
1123:Generated_Source\PSoC4/PWM_2.c **** * Return:
1124:Generated_Source\PSoC4/PWM_2.c **** *  None
1125:Generated_Source\PSoC4/PWM_2.c **** *
1126:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/PWM_2.c **** {
 1414              		.loc 1 1128 0
 1415              		.cfi_startproc
 1416 0000 90B5     		push	{r4, r7, lr}
 1417              		.cfi_def_cfa_offset 12
 1418              		.cfi_offset 4, -12
 1419              		.cfi_offset 7, -8
 1420              		.cfi_offset 14, -4
 1421 0002 85B0     		sub	sp, sp, #20
 1422              		.cfi_def_cfa_offset 32
 1423 0004 00AF     		add	r7, sp, #0
 1424              		.cfi_def_cfa_register 7
 1425 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/PWM_2.c **** 
1131:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1426              		.loc 1 1131 0
 1427 0008 0F23     		mov	r3, #15
 1428 000a FC18     		add	r4, r7, r3
 1429 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1430 0010 031C     		mov	r3, r0
 1431 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/PWM_2.c **** 
1133:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG &= (uint32)~PWM_2_RELOAD_MASK;
 1432              		.loc 1 1133 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 46


 1433 0014 0A4B     		ldr	r3, .L97
 1434 0016 0A4A     		ldr	r2, .L97
 1435 0018 1268     		ldr	r2, [r2]
 1436 001a 3021     		mov	r1, #48
 1437 001c 8A43     		bic	r2, r1
 1438 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_2_RELOAD_SHIFT));
 1439              		.loc 1 1134 0
 1440 0020 074B     		ldr	r3, .L97
 1441 0022 074A     		ldr	r2, .L97
 1442 0024 1168     		ldr	r1, [r2]
 1443 0026 7A68     		ldr	r2, [r7, #4]
 1444 0028 1201     		lsl	r2, r2, #4
 1445 002a 0A43     		orr	r2, r1
 1446 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/PWM_2.c **** 
1136:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1447              		.loc 1 1136 0
 1448 002e 0F23     		mov	r3, #15
 1449 0030 FB18     		add	r3, r7, r3
 1450 0032 1B78     		ldrb	r3, [r3]
 1451 0034 181C     		mov	r0, r3
 1452 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/PWM_2.c **** }
 1453              		.loc 1 1137 0
 1454 003a BD46     		mov	sp, r7
 1455 003c 05B0     		add	sp, sp, #20
 1456              		@ sp needed
 1457 003e 90BD     		pop	{r4, r7, pc}
 1458              	.L98:
 1459              		.align	2
 1460              	.L97:
 1461 0040 64010540 		.word	1074069860
 1462              		.cfi_endproc
 1463              	.LFE29:
 1464              		.size	PWM_2_SetReloadMode, .-PWM_2_SetReloadMode
 1465              		.section	.text.PWM_2_SetStartMode,"ax",%progbits
 1466              		.align	2
 1467              		.global	PWM_2_SetStartMode
 1468              		.code	16
 1469              		.thumb_func
 1470              		.type	PWM_2_SetStartMode, %function
 1471              	PWM_2_SetStartMode:
 1472              	.LFB30:
1138:Generated_Source\PSoC4/PWM_2.c **** 
1139:Generated_Source\PSoC4/PWM_2.c **** 
1140:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetStartMode
1142:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1143:Generated_Source\PSoC4/PWM_2.c **** *
1144:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1145:Generated_Source\PSoC4/PWM_2.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/PWM_2.c **** *  phiB input.
1147:Generated_Source\PSoC4/PWM_2.c **** *
1148:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1149:Generated_Source\PSoC4/PWM_2.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/PWM_2.c **** *   Values:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 47


1151:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/PWM_2.c **** *
1156:Generated_Source\PSoC4/PWM_2.c **** * Return:
1157:Generated_Source\PSoC4/PWM_2.c **** *  None
1158:Generated_Source\PSoC4/PWM_2.c **** *
1159:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/PWM_2.c **** {
 1473              		.loc 1 1161 0
 1474              		.cfi_startproc
 1475 0000 90B5     		push	{r4, r7, lr}
 1476              		.cfi_def_cfa_offset 12
 1477              		.cfi_offset 4, -12
 1478              		.cfi_offset 7, -8
 1479              		.cfi_offset 14, -4
 1480 0002 85B0     		sub	sp, sp, #20
 1481              		.cfi_def_cfa_offset 32
 1482 0004 00AF     		add	r7, sp, #0
 1483              		.cfi_def_cfa_register 7
 1484 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/PWM_2.c **** 
1164:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1485              		.loc 1 1164 0
 1486 0008 0F23     		mov	r3, #15
 1487 000a FC18     		add	r4, r7, r3
 1488 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1489 0010 031C     		mov	r3, r0
 1490 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/PWM_2.c **** 
1166:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG &= (uint32)~PWM_2_START_MASK;
 1491              		.loc 1 1166 0
 1492 0014 0A4B     		ldr	r3, .L100
 1493 0016 0A4A     		ldr	r2, .L100
 1494 0018 1268     		ldr	r2, [r2]
 1495 001a 0A49     		ldr	r1, .L100+4
 1496 001c 0A40     		and	r2, r1
 1497 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_2_START_SHIFT));
 1498              		.loc 1 1167 0
 1499 0020 074B     		ldr	r3, .L100
 1500 0022 074A     		ldr	r2, .L100
 1501 0024 1168     		ldr	r1, [r2]
 1502 0026 7A68     		ldr	r2, [r7, #4]
 1503 0028 1202     		lsl	r2, r2, #8
 1504 002a 0A43     		orr	r2, r1
 1505 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/PWM_2.c **** 
1169:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1506              		.loc 1 1169 0
 1507 002e 0F23     		mov	r3, #15
 1508 0030 FB18     		add	r3, r7, r3
 1509 0032 1B78     		ldrb	r3, [r3]
 1510 0034 181C     		mov	r0, r3
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 48


 1511 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/PWM_2.c **** }
 1512              		.loc 1 1170 0
 1513 003a BD46     		mov	sp, r7
 1514 003c 05B0     		add	sp, sp, #20
 1515              		@ sp needed
 1516 003e 90BD     		pop	{r4, r7, pc}
 1517              	.L101:
 1518              		.align	2
 1519              	.L100:
 1520 0040 64010540 		.word	1074069860
 1521 0044 FFFCFFFF 		.word	-769
 1522              		.cfi_endproc
 1523              	.LFE30:
 1524              		.size	PWM_2_SetStartMode, .-PWM_2_SetStartMode
 1525              		.section	.text.PWM_2_SetStopMode,"ax",%progbits
 1526              		.align	2
 1527              		.global	PWM_2_SetStopMode
 1528              		.code	16
 1529              		.thumb_func
 1530              		.type	PWM_2_SetStopMode, %function
 1531              	PWM_2_SetStopMode:
 1532              	.LFB31:
1171:Generated_Source\PSoC4/PWM_2.c **** 
1172:Generated_Source\PSoC4/PWM_2.c **** 
1173:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetStopMode
1175:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1176:Generated_Source\PSoC4/PWM_2.c **** *
1177:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1178:Generated_Source\PSoC4/PWM_2.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/PWM_2.c **** *
1180:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1181:Generated_Source\PSoC4/PWM_2.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1183:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/PWM_2.c **** *
1188:Generated_Source\PSoC4/PWM_2.c **** * Return:
1189:Generated_Source\PSoC4/PWM_2.c **** *  None
1190:Generated_Source\PSoC4/PWM_2.c **** *
1191:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/PWM_2.c **** {
 1533              		.loc 1 1193 0
 1534              		.cfi_startproc
 1535 0000 90B5     		push	{r4, r7, lr}
 1536              		.cfi_def_cfa_offset 12
 1537              		.cfi_offset 4, -12
 1538              		.cfi_offset 7, -8
 1539              		.cfi_offset 14, -4
 1540 0002 85B0     		sub	sp, sp, #20
 1541              		.cfi_def_cfa_offset 32
 1542 0004 00AF     		add	r7, sp, #0
 1543              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 49


 1544 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/PWM_2.c **** 
1196:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1545              		.loc 1 1196 0
 1546 0008 0F23     		mov	r3, #15
 1547 000a FC18     		add	r4, r7, r3
 1548 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1549 0010 031C     		mov	r3, r0
 1550 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/PWM_2.c **** 
1198:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG &= (uint32)~PWM_2_STOP_MASK;
 1551              		.loc 1 1198 0
 1552 0014 0A4B     		ldr	r3, .L103
 1553 0016 0A4A     		ldr	r2, .L103
 1554 0018 1268     		ldr	r2, [r2]
 1555 001a C021     		mov	r1, #192
 1556 001c 8A43     		bic	r2, r1
 1557 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_2_STOP_SHIFT));
 1558              		.loc 1 1199 0
 1559 0020 074B     		ldr	r3, .L103
 1560 0022 074A     		ldr	r2, .L103
 1561 0024 1168     		ldr	r1, [r2]
 1562 0026 7A68     		ldr	r2, [r7, #4]
 1563 0028 9201     		lsl	r2, r2, #6
 1564 002a 0A43     		orr	r2, r1
 1565 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/PWM_2.c **** 
1201:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1566              		.loc 1 1201 0
 1567 002e 0F23     		mov	r3, #15
 1568 0030 FB18     		add	r3, r7, r3
 1569 0032 1B78     		ldrb	r3, [r3]
 1570 0034 181C     		mov	r0, r3
 1571 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/PWM_2.c **** }
 1572              		.loc 1 1202 0
 1573 003a BD46     		mov	sp, r7
 1574 003c 05B0     		add	sp, sp, #20
 1575              		@ sp needed
 1576 003e 90BD     		pop	{r4, r7, pc}
 1577              	.L104:
 1578              		.align	2
 1579              	.L103:
 1580 0040 64010540 		.word	1074069860
 1581              		.cfi_endproc
 1582              	.LFE31:
 1583              		.size	PWM_2_SetStopMode, .-PWM_2_SetStopMode
 1584              		.section	.text.PWM_2_SetCountMode,"ax",%progbits
 1585              		.align	2
 1586              		.global	PWM_2_SetCountMode
 1587              		.code	16
 1588              		.thumb_func
 1589              		.type	PWM_2_SetCountMode, %function
 1590              	PWM_2_SetCountMode:
 1591              	.LFB32:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 50


1203:Generated_Source\PSoC4/PWM_2.c **** 
1204:Generated_Source\PSoC4/PWM_2.c **** 
1205:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetCountMode
1207:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1208:Generated_Source\PSoC4/PWM_2.c **** *
1209:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1210:Generated_Source\PSoC4/PWM_2.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/PWM_2.c **** *  input.
1212:Generated_Source\PSoC4/PWM_2.c **** *
1213:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1214:Generated_Source\PSoC4/PWM_2.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1216:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/PWM_2.c **** *
1221:Generated_Source\PSoC4/PWM_2.c **** * Return:
1222:Generated_Source\PSoC4/PWM_2.c **** *  None
1223:Generated_Source\PSoC4/PWM_2.c **** *
1224:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/PWM_2.c **** {
 1592              		.loc 1 1226 0
 1593              		.cfi_startproc
 1594 0000 90B5     		push	{r4, r7, lr}
 1595              		.cfi_def_cfa_offset 12
 1596              		.cfi_offset 4, -12
 1597              		.cfi_offset 7, -8
 1598              		.cfi_offset 14, -4
 1599 0002 85B0     		sub	sp, sp, #20
 1600              		.cfi_def_cfa_offset 32
 1601 0004 00AF     		add	r7, sp, #0
 1602              		.cfi_def_cfa_register 7
 1603 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/PWM_2.c **** 
1229:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1604              		.loc 1 1229 0
 1605 0008 0F23     		mov	r3, #15
 1606 000a FC18     		add	r4, r7, r3
 1607 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1608 0010 031C     		mov	r3, r0
 1609 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/PWM_2.c **** 
1231:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG &= (uint32)~PWM_2_COUNT_MASK;
 1610              		.loc 1 1231 0
 1611 0014 0A4B     		ldr	r3, .L106
 1612 0016 0A4A     		ldr	r2, .L106
 1613 0018 1268     		ldr	r2, [r2]
 1614 001a 0C21     		mov	r1, #12
 1615 001c 8A43     		bic	r2, r1
 1616 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << PWM_2_COUNT_SHIFT));
 1617              		.loc 1 1232 0
 1618 0020 074B     		ldr	r3, .L106
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 51


 1619 0022 074A     		ldr	r2, .L106
 1620 0024 1168     		ldr	r1, [r2]
 1621 0026 7A68     		ldr	r2, [r7, #4]
 1622 0028 9200     		lsl	r2, r2, #2
 1623 002a 0A43     		orr	r2, r1
 1624 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/PWM_2.c **** 
1234:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1625              		.loc 1 1234 0
 1626 002e 0F23     		mov	r3, #15
 1627 0030 FB18     		add	r3, r7, r3
 1628 0032 1B78     		ldrb	r3, [r3]
 1629 0034 181C     		mov	r0, r3
 1630 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/PWM_2.c **** }
 1631              		.loc 1 1235 0
 1632 003a BD46     		mov	sp, r7
 1633 003c 05B0     		add	sp, sp, #20
 1634              		@ sp needed
 1635 003e 90BD     		pop	{r4, r7, pc}
 1636              	.L107:
 1637              		.align	2
 1638              	.L106:
 1639 0040 64010540 		.word	1074069860
 1640              		.cfi_endproc
 1641              	.LFE32:
 1642              		.size	PWM_2_SetCountMode, .-PWM_2_SetCountMode
 1643              		.section	.text.PWM_2_TriggerCommand,"ax",%progbits
 1644              		.align	2
 1645              		.global	PWM_2_TriggerCommand
 1646              		.code	16
 1647              		.thumb_func
 1648              		.type	PWM_2_TriggerCommand, %function
 1649              	PWM_2_TriggerCommand:
 1650              	.LFB33:
1236:Generated_Source\PSoC4/PWM_2.c **** 
1237:Generated_Source\PSoC4/PWM_2.c **** 
1238:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_TriggerCommand
1240:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1241:Generated_Source\PSoC4/PWM_2.c **** *
1242:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1243:Generated_Source\PSoC4/PWM_2.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/PWM_2.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/PWM_2.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/PWM_2.c **** *
1247:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1248:Generated_Source\PSoC4/PWM_2.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/PWM_2.c **** *        command should apply to.  This function from one instance can be used
1250:Generated_Source\PSoC4/PWM_2.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/PWM_2.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/PWM_2.c **** *        define.
1253:Generated_Source\PSoC4/PWM_2.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/PWM_2.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1256:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_CMD_RELOAD     - Trigger Reload/Index command
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 52


1258:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/PWM_2.c **** *
1261:Generated_Source\PSoC4/PWM_2.c **** * Return:
1262:Generated_Source\PSoC4/PWM_2.c **** *  None
1263:Generated_Source\PSoC4/PWM_2.c **** *
1264:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/PWM_2.c **** {
 1651              		.loc 1 1266 0
 1652              		.cfi_startproc
 1653 0000 90B5     		push	{r4, r7, lr}
 1654              		.cfi_def_cfa_offset 12
 1655              		.cfi_offset 4, -12
 1656              		.cfi_offset 7, -8
 1657              		.cfi_offset 14, -4
 1658 0002 85B0     		sub	sp, sp, #20
 1659              		.cfi_def_cfa_offset 32
 1660 0004 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
 1662 0006 7860     		str	r0, [r7, #4]
 1663 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/PWM_2.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/PWM_2.c **** 
1269:Generated_Source\PSoC4/PWM_2.c ****     enableInterrupts = CyEnterCriticalSection();
 1664              		.loc 1 1269 0
 1665 000a 0F23     		mov	r3, #15
 1666 000c FC18     		add	r4, r7, r3
 1667 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1668 0012 031C     		mov	r3, r0
 1669 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/PWM_2.c **** 
1271:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_COMMAND_REG = ((uint32)(mask << command));
 1670              		.loc 1 1271 0
 1671 0016 074B     		ldr	r3, .L109
 1672 0018 3A68     		ldr	r2, [r7]
 1673 001a 7968     		ldr	r1, [r7, #4]
 1674 001c 9140     		lsl	r1, r1, r2
 1675 001e 0A1C     		mov	r2, r1
 1676 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/PWM_2.c **** 
1273:Generated_Source\PSoC4/PWM_2.c ****     CyExitCriticalSection(enableInterrupts);
 1677              		.loc 1 1273 0
 1678 0022 0F23     		mov	r3, #15
 1679 0024 FB18     		add	r3, r7, r3
 1680 0026 1B78     		ldrb	r3, [r3]
 1681 0028 181C     		mov	r0, r3
 1682 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/PWM_2.c **** }
 1683              		.loc 1 1274 0
 1684 002e BD46     		mov	sp, r7
 1685 0030 05B0     		add	sp, sp, #20
 1686              		@ sp needed
 1687 0032 90BD     		pop	{r4, r7, pc}
 1688              	.L110:
 1689              		.align	2
 1690              	.L109:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 53


 1691 0034 08000540 		.word	1074069512
 1692              		.cfi_endproc
 1693              	.LFE33:
 1694              		.size	PWM_2_TriggerCommand, .-PWM_2_TriggerCommand
 1695              		.section	.text.PWM_2_ReadStatus,"ax",%progbits
 1696              		.align	2
 1697              		.global	PWM_2_ReadStatus
 1698              		.code	16
 1699              		.thumb_func
 1700              		.type	PWM_2_ReadStatus, %function
 1701              	PWM_2_ReadStatus:
 1702              	.LFB34:
1275:Generated_Source\PSoC4/PWM_2.c **** 
1276:Generated_Source\PSoC4/PWM_2.c **** 
1277:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ReadStatus
1279:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1280:Generated_Source\PSoC4/PWM_2.c **** *
1281:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1282:Generated_Source\PSoC4/PWM_2.c **** *  Reads the status of the PWM_2.
1283:Generated_Source\PSoC4/PWM_2.c **** *
1284:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1285:Generated_Source\PSoC4/PWM_2.c **** *  None
1286:Generated_Source\PSoC4/PWM_2.c **** *
1287:Generated_Source\PSoC4/PWM_2.c **** * Return:
1288:Generated_Source\PSoC4/PWM_2.c **** *  Status
1289:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1290:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/PWM_2.c **** *
1293:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_ReadStatus(void)
1295:Generated_Source\PSoC4/PWM_2.c **** {
 1703              		.loc 1 1295 0
 1704              		.cfi_startproc
 1705 0000 80B5     		push	{r7, lr}
 1706              		.cfi_def_cfa_offset 8
 1707              		.cfi_offset 7, -8
 1708              		.cfi_offset 14, -4
 1709 0002 00AF     		add	r7, sp, #0
 1710              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/PWM_2.c ****     return ((PWM_2_STATUS_REG >> PWM_2_RUNNING_STATUS_SHIFT) |
 1711              		.loc 1 1296 0
 1712 0004 054B     		ldr	r3, .L113
 1713 0006 1B68     		ldr	r3, [r3]
 1714 0008 9A0F     		lsr	r2, r3, #30
1297:Generated_Source\PSoC4/PWM_2.c ****             (PWM_2_STATUS_REG & PWM_2_STATUS_DOWN));
 1715              		.loc 1 1297 0
 1716 000a 044B     		ldr	r3, .L113
 1717 000c 1B68     		ldr	r3, [r3]
 1718 000e 0121     		mov	r1, #1
 1719 0010 0B40     		and	r3, r1
1296:Generated_Source\PSoC4/PWM_2.c ****     return ((PWM_2_STATUS_REG >> PWM_2_RUNNING_STATUS_SHIFT) |
 1720              		.loc 1 1296 0
 1721 0012 1343     		orr	r3, r2
1298:Generated_Source\PSoC4/PWM_2.c **** }
 1722              		.loc 1 1298 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 54


 1723 0014 181C     		mov	r0, r3
 1724 0016 BD46     		mov	sp, r7
 1725              		@ sp needed
 1726 0018 80BD     		pop	{r7, pc}
 1727              	.L114:
 1728 001a C046     		.align	2
 1729              	.L113:
 1730 001c 44010540 		.word	1074069828
 1731              		.cfi_endproc
 1732              	.LFE34:
 1733              		.size	PWM_2_ReadStatus, .-PWM_2_ReadStatus
 1734              		.section	.text.PWM_2_SetInterruptMode,"ax",%progbits
 1735              		.align	2
 1736              		.global	PWM_2_SetInterruptMode
 1737              		.code	16
 1738              		.thumb_func
 1739              		.type	PWM_2_SetInterruptMode, %function
 1740              	PWM_2_SetInterruptMode:
 1741              	.LFB35:
1299:Generated_Source\PSoC4/PWM_2.c **** 
1300:Generated_Source\PSoC4/PWM_2.c **** 
1301:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetInterruptMode
1303:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1304:Generated_Source\PSoC4/PWM_2.c **** *
1305:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1306:Generated_Source\PSoC4/PWM_2.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/PWM_2.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/PWM_2.c **** *
1309:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1310:Generated_Source\PSoC4/PWM_2.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1312:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/PWM_2.c **** *
1315:Generated_Source\PSoC4/PWM_2.c **** * Return:
1316:Generated_Source\PSoC4/PWM_2.c **** *  None
1317:Generated_Source\PSoC4/PWM_2.c **** *
1318:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/PWM_2.c **** {
 1742              		.loc 1 1320 0
 1743              		.cfi_startproc
 1744 0000 80B5     		push	{r7, lr}
 1745              		.cfi_def_cfa_offset 8
 1746              		.cfi_offset 7, -8
 1747              		.cfi_offset 14, -4
 1748 0002 82B0     		sub	sp, sp, #8
 1749              		.cfi_def_cfa_offset 16
 1750 0004 00AF     		add	r7, sp, #0
 1751              		.cfi_def_cfa_register 7
 1752 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_INTERRUPT_MASK_REG =  interruptMask;
 1753              		.loc 1 1321 0
 1754 0008 024B     		ldr	r3, .L116
 1755 000a 7A68     		ldr	r2, [r7, #4]
 1756 000c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 55


1322:Generated_Source\PSoC4/PWM_2.c **** }
 1757              		.loc 1 1322 0
 1758 000e BD46     		mov	sp, r7
 1759 0010 02B0     		add	sp, sp, #8
 1760              		@ sp needed
 1761 0012 80BD     		pop	{r7, pc}
 1762              	.L117:
 1763              		.align	2
 1764              	.L116:
 1765 0014 78010540 		.word	1074069880
 1766              		.cfi_endproc
 1767              	.LFE35:
 1768              		.size	PWM_2_SetInterruptMode, .-PWM_2_SetInterruptMode
 1769              		.section	.text.PWM_2_GetInterruptSourceMasked,"ax",%progbits
 1770              		.align	2
 1771              		.global	PWM_2_GetInterruptSourceMasked
 1772              		.code	16
 1773              		.thumb_func
 1774              		.type	PWM_2_GetInterruptSourceMasked, %function
 1775              	PWM_2_GetInterruptSourceMasked:
 1776              	.LFB36:
1323:Generated_Source\PSoC4/PWM_2.c **** 
1324:Generated_Source\PSoC4/PWM_2.c **** 
1325:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1328:Generated_Source\PSoC4/PWM_2.c **** *
1329:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1330:Generated_Source\PSoC4/PWM_2.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/PWM_2.c **** *
1332:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1333:Generated_Source\PSoC4/PWM_2.c **** *   None
1334:Generated_Source\PSoC4/PWM_2.c **** *
1335:Generated_Source\PSoC4/PWM_2.c **** * Return:
1336:Generated_Source\PSoC4/PWM_2.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1338:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/PWM_2.c **** *
1341:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/PWM_2.c **** {
 1777              		.loc 1 1343 0
 1778              		.cfi_startproc
 1779 0000 80B5     		push	{r7, lr}
 1780              		.cfi_def_cfa_offset 8
 1781              		.cfi_offset 7, -8
 1782              		.cfi_offset 14, -4
 1783 0002 00AF     		add	r7, sp, #0
 1784              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_INTERRUPT_MASKED_REG);
 1785              		.loc 1 1344 0
 1786 0004 024B     		ldr	r3, .L120
 1787 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/PWM_2.c **** }
 1788              		.loc 1 1345 0
 1789 0008 181C     		mov	r0, r3
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 56


 1790 000a BD46     		mov	sp, r7
 1791              		@ sp needed
 1792 000c 80BD     		pop	{r7, pc}
 1793              	.L121:
 1794 000e C046     		.align	2
 1795              	.L120:
 1796 0010 7C010540 		.word	1074069884
 1797              		.cfi_endproc
 1798              	.LFE36:
 1799              		.size	PWM_2_GetInterruptSourceMasked, .-PWM_2_GetInterruptSourceMasked
 1800              		.section	.text.PWM_2_GetInterruptSource,"ax",%progbits
 1801              		.align	2
 1802              		.global	PWM_2_GetInterruptSource
 1803              		.code	16
 1804              		.thumb_func
 1805              		.type	PWM_2_GetInterruptSource, %function
 1806              	PWM_2_GetInterruptSource:
 1807              	.LFB37:
1346:Generated_Source\PSoC4/PWM_2.c **** 
1347:Generated_Source\PSoC4/PWM_2.c **** 
1348:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_GetInterruptSource
1350:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1351:Generated_Source\PSoC4/PWM_2.c **** *
1352:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1353:Generated_Source\PSoC4/PWM_2.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/PWM_2.c **** *
1355:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1356:Generated_Source\PSoC4/PWM_2.c **** *  None
1357:Generated_Source\PSoC4/PWM_2.c **** *
1358:Generated_Source\PSoC4/PWM_2.c **** * Return:
1359:Generated_Source\PSoC4/PWM_2.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1361:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/PWM_2.c **** *
1364:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/PWM_2.c **** uint32 PWM_2_GetInterruptSource(void)
1366:Generated_Source\PSoC4/PWM_2.c **** {
 1808              		.loc 1 1366 0
 1809              		.cfi_startproc
 1810 0000 80B5     		push	{r7, lr}
 1811              		.cfi_def_cfa_offset 8
 1812              		.cfi_offset 7, -8
 1813              		.cfi_offset 14, -4
 1814 0002 00AF     		add	r7, sp, #0
 1815              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/PWM_2.c ****     return (PWM_2_INTERRUPT_REQ_REG);
 1816              		.loc 1 1367 0
 1817 0004 024B     		ldr	r3, .L124
 1818 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/PWM_2.c **** }
 1819              		.loc 1 1368 0
 1820 0008 181C     		mov	r0, r3
 1821 000a BD46     		mov	sp, r7
 1822              		@ sp needed
 1823 000c 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 57


 1824              	.L125:
 1825 000e C046     		.align	2
 1826              	.L124:
 1827 0010 70010540 		.word	1074069872
 1828              		.cfi_endproc
 1829              	.LFE37:
 1830              		.size	PWM_2_GetInterruptSource, .-PWM_2_GetInterruptSource
 1831              		.section	.text.PWM_2_ClearInterrupt,"ax",%progbits
 1832              		.align	2
 1833              		.global	PWM_2_ClearInterrupt
 1834              		.code	16
 1835              		.thumb_func
 1836              		.type	PWM_2_ClearInterrupt, %function
 1837              	PWM_2_ClearInterrupt:
 1838              	.LFB38:
1369:Generated_Source\PSoC4/PWM_2.c **** 
1370:Generated_Source\PSoC4/PWM_2.c **** 
1371:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_ClearInterrupt
1373:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1374:Generated_Source\PSoC4/PWM_2.c **** *
1375:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1376:Generated_Source\PSoC4/PWM_2.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/PWM_2.c **** *
1378:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1379:Generated_Source\PSoC4/PWM_2.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1381:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/PWM_2.c **** *
1384:Generated_Source\PSoC4/PWM_2.c **** * Return:
1385:Generated_Source\PSoC4/PWM_2.c **** *  None
1386:Generated_Source\PSoC4/PWM_2.c **** *
1387:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/PWM_2.c **** {
 1839              		.loc 1 1389 0
 1840              		.cfi_startproc
 1841 0000 80B5     		push	{r7, lr}
 1842              		.cfi_def_cfa_offset 8
 1843              		.cfi_offset 7, -8
 1844              		.cfi_offset 14, -4
 1845 0002 82B0     		sub	sp, sp, #8
 1846              		.cfi_def_cfa_offset 16
 1847 0004 00AF     		add	r7, sp, #0
 1848              		.cfi_def_cfa_register 7
 1849 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_INTERRUPT_REQ_REG = interruptMask;
 1850              		.loc 1 1390 0
 1851 0008 024B     		ldr	r3, .L127
 1852 000a 7A68     		ldr	r2, [r7, #4]
 1853 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/PWM_2.c **** }
 1854              		.loc 1 1391 0
 1855 000e BD46     		mov	sp, r7
 1856 0010 02B0     		add	sp, sp, #8
 1857              		@ sp needed
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 58


 1858 0012 80BD     		pop	{r7, pc}
 1859              	.L128:
 1860              		.align	2
 1861              	.L127:
 1862 0014 70010540 		.word	1074069872
 1863              		.cfi_endproc
 1864              	.LFE38:
 1865              		.size	PWM_2_ClearInterrupt, .-PWM_2_ClearInterrupt
 1866              		.section	.text.PWM_2_SetInterrupt,"ax",%progbits
 1867              		.align	2
 1868              		.global	PWM_2_SetInterrupt
 1869              		.code	16
 1870              		.thumb_func
 1871              		.type	PWM_2_SetInterrupt, %function
 1872              	PWM_2_SetInterrupt:
 1873              	.LFB39:
1392:Generated_Source\PSoC4/PWM_2.c **** 
1393:Generated_Source\PSoC4/PWM_2.c **** 
1394:Generated_Source\PSoC4/PWM_2.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/PWM_2.c **** * Function Name: PWM_2_SetInterrupt
1396:Generated_Source\PSoC4/PWM_2.c **** ********************************************************************************
1397:Generated_Source\PSoC4/PWM_2.c **** *
1398:Generated_Source\PSoC4/PWM_2.c **** * Summary:
1399:Generated_Source\PSoC4/PWM_2.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/PWM_2.c **** *
1401:Generated_Source\PSoC4/PWM_2.c **** * Parameters:
1402:Generated_Source\PSoC4/PWM_2.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/PWM_2.c **** *   Values:
1404:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/PWM_2.c **** *     - PWM_2_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/PWM_2.c **** *
1407:Generated_Source\PSoC4/PWM_2.c **** * Return:
1408:Generated_Source\PSoC4/PWM_2.c **** *  None
1409:Generated_Source\PSoC4/PWM_2.c **** *
1410:Generated_Source\PSoC4/PWM_2.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/PWM_2.c **** void PWM_2_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/PWM_2.c **** {
 1874              		.loc 1 1412 0
 1875              		.cfi_startproc
 1876 0000 80B5     		push	{r7, lr}
 1877              		.cfi_def_cfa_offset 8
 1878              		.cfi_offset 7, -8
 1879              		.cfi_offset 14, -4
 1880 0002 82B0     		sub	sp, sp, #8
 1881              		.cfi_def_cfa_offset 16
 1882 0004 00AF     		add	r7, sp, #0
 1883              		.cfi_def_cfa_register 7
 1884 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/PWM_2.c ****     PWM_2_INTERRUPT_SET_REG = interruptMask;
 1885              		.loc 1 1413 0
 1886 0008 024B     		ldr	r3, .L130
 1887 000a 7A68     		ldr	r2, [r7, #4]
 1888 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/PWM_2.c **** }
 1889              		.loc 1 1414 0
 1890 000e BD46     		mov	sp, r7
 1891 0010 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 59


 1892              		@ sp needed
 1893 0012 80BD     		pop	{r7, pc}
 1894              	.L131:
 1895              		.align	2
 1896              	.L130:
 1897 0014 74010540 		.word	1074069876
 1898              		.cfi_endproc
 1899              	.LFE39:
 1900              		.size	PWM_2_SetInterrupt, .-PWM_2_SetInterrupt
 1901              		.text
 1902              	.Letext0:
 1903              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1904              		.section	.debug_info,"",%progbits
 1905              	.Ldebug_info0:
 1906 0000 F0060000 		.4byte	0x6f0
 1907 0004 0400     		.2byte	0x4
 1908 0006 00000000 		.4byte	.Ldebug_abbrev0
 1909 000a 04       		.byte	0x4
 1910 000b 01       		.uleb128 0x1
 1911 000c 73040000 		.4byte	.LASF76
 1912 0010 01       		.byte	0x1
 1913 0011 20040000 		.4byte	.LASF77
 1914 0015 01050000 		.4byte	.LASF78
 1915 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1916 001d 00000000 		.4byte	0
 1917 0021 00000000 		.4byte	.Ldebug_line0
 1918 0025 02       		.uleb128 0x2
 1919 0026 01       		.byte	0x1
 1920 0027 06       		.byte	0x6
 1921 0028 B3000000 		.4byte	.LASF0
 1922 002c 02       		.uleb128 0x2
 1923 002d 01       		.byte	0x1
 1924 002e 08       		.byte	0x8
 1925 002f 11030000 		.4byte	.LASF1
 1926 0033 02       		.uleb128 0x2
 1927 0034 02       		.byte	0x2
 1928 0035 05       		.byte	0x5
 1929 0036 47030000 		.4byte	.LASF2
 1930 003a 02       		.uleb128 0x2
 1931 003b 02       		.byte	0x2
 1932 003c 07       		.byte	0x7
 1933 003d D3010000 		.4byte	.LASF3
 1934 0041 02       		.uleb128 0x2
 1935 0042 04       		.byte	0x4
 1936 0043 05       		.byte	0x5
 1937 0044 F3000000 		.4byte	.LASF4
 1938 0048 02       		.uleb128 0x2
 1939 0049 04       		.byte	0x4
 1940 004a 07       		.byte	0x7
 1941 004b B5010000 		.4byte	.LASF5
 1942 004f 02       		.uleb128 0x2
 1943 0050 08       		.byte	0x8
 1944 0051 05       		.byte	0x5
 1945 0052 A5000000 		.4byte	.LASF6
 1946 0056 02       		.uleb128 0x2
 1947 0057 08       		.byte	0x8
 1948 0058 07       		.byte	0x7
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 60


 1949 0059 39000000 		.4byte	.LASF7
 1950 005d 03       		.uleb128 0x3
 1951 005e 04       		.byte	0x4
 1952 005f 05       		.byte	0x5
 1953 0060 696E7400 		.ascii	"int\000"
 1954 0064 02       		.uleb128 0x2
 1955 0065 04       		.byte	0x4
 1956 0066 07       		.byte	0x7
 1957 0067 79010000 		.4byte	.LASF8
 1958 006b 04       		.uleb128 0x4
 1959 006c 0F010000 		.4byte	.LASF9
 1960 0070 02       		.byte	0x2
 1961 0071 B901     		.2byte	0x1b9
 1962 0073 2C000000 		.4byte	0x2c
 1963 0077 04       		.uleb128 0x4
 1964 0078 46010000 		.4byte	.LASF10
 1965 007c 02       		.byte	0x2
 1966 007d BB01     		.2byte	0x1bb
 1967 007f 48000000 		.4byte	0x48
 1968 0083 02       		.uleb128 0x2
 1969 0084 04       		.byte	0x4
 1970 0085 04       		.byte	0x4
 1971 0086 C8020000 		.4byte	.LASF11
 1972 008a 02       		.uleb128 0x2
 1973 008b 08       		.byte	0x8
 1974 008c 04       		.byte	0x4
 1975 008d 15010000 		.4byte	.LASF12
 1976 0091 02       		.uleb128 0x2
 1977 0092 01       		.byte	0x1
 1978 0093 08       		.byte	0x8
 1979 0094 94030000 		.4byte	.LASF13
 1980 0098 04       		.uleb128 0x4
 1981 0099 50020000 		.4byte	.LASF14
 1982 009d 02       		.byte	0x2
 1983 009e 6502     		.2byte	0x265
 1984 00a0 A4000000 		.4byte	0xa4
 1985 00a4 05       		.uleb128 0x5
 1986 00a5 77000000 		.4byte	0x77
 1987 00a9 02       		.uleb128 0x2
 1988 00aa 04       		.byte	0x4
 1989 00ab 07       		.byte	0x7
 1990 00ac 88020000 		.4byte	.LASF15
 1991 00b0 06       		.uleb128 0x6
 1992 00b1 BD020000 		.4byte	.LASF16
 1993 00b5 01       		.byte	0x1
 1994 00b6 26       		.byte	0x26
 1995 00b7 00000000 		.4byte	.LFB0
 1996 00bb 5C000000 		.4byte	.LFE0-.LFB0
 1997 00bf 01       		.uleb128 0x1
 1998 00c0 9C       		.byte	0x9c
 1999 00c1 07       		.uleb128 0x7
 2000 00c2 30020000 		.4byte	.LASF18
 2001 00c6 01       		.byte	0x1
 2002 00c7 B1       		.byte	0xb1
 2003 00c8 00000000 		.4byte	.LFB1
 2004 00cc 38000000 		.4byte	.LFE1-.LFB1
 2005 00d0 01       		.uleb128 0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 61


 2006 00d1 9C       		.byte	0x9c
 2007 00d2 E5000000 		.4byte	0xe5
 2008 00d6 08       		.uleb128 0x8
 2009 00d7 F8030000 		.4byte	.LASF20
 2010 00db 01       		.byte	0x1
 2011 00dc B3       		.byte	0xb3
 2012 00dd 6B000000 		.4byte	0x6b
 2013 00e1 02       		.uleb128 0x2
 2014 00e2 91       		.byte	0x91
 2015 00e3 6F       		.sleb128 -17
 2016 00e4 00       		.byte	0
 2017 00e5 06       		.uleb128 0x6
 2018 00e6 C7010000 		.4byte	.LASF17
 2019 00ea 01       		.byte	0x1
 2020 00eb E6       		.byte	0xe6
 2021 00ec 00000000 		.4byte	.LFB2
 2022 00f0 24000000 		.4byte	.LFE2-.LFB2
 2023 00f4 01       		.uleb128 0x1
 2024 00f5 9C       		.byte	0x9c
 2025 00f6 09       		.uleb128 0x9
 2026 00f7 BF000000 		.4byte	.LASF19
 2027 00fb 01       		.byte	0x1
 2028 00fc 0001     		.2byte	0x100
 2029 00fe 00000000 		.4byte	.LFB3
 2030 0102 30000000 		.4byte	.LFE3-.LFB3
 2031 0106 01       		.uleb128 0x1
 2032 0107 9C       		.byte	0x9c
 2033 0108 1C010000 		.4byte	0x11c
 2034 010c 0A       		.uleb128 0xa
 2035 010d F8030000 		.4byte	.LASF20
 2036 0111 01       		.byte	0x1
 2037 0112 0201     		.2byte	0x102
 2038 0114 6B000000 		.4byte	0x6b
 2039 0118 02       		.uleb128 0x2
 2040 0119 91       		.byte	0x91
 2041 011a 6F       		.sleb128 -17
 2042 011b 00       		.byte	0
 2043 011c 09       		.uleb128 0x9
 2044 011d 69020000 		.4byte	.LASF21
 2045 0121 01       		.byte	0x1
 2046 0122 2501     		.2byte	0x125
 2047 0124 00000000 		.4byte	.LFB4
 2048 0128 48000000 		.4byte	.LFE4-.LFB4
 2049 012c 01       		.uleb128 0x1
 2050 012d 9C       		.byte	0x9c
 2051 012e 51010000 		.4byte	0x151
 2052 0132 0B       		.uleb128 0xb
 2053 0133 99030000 		.4byte	.LASF23
 2054 0137 01       		.byte	0x1
 2055 0138 2501     		.2byte	0x125
 2056 013a 77000000 		.4byte	0x77
 2057 013e 02       		.uleb128 0x2
 2058 013f 91       		.byte	0x91
 2059 0140 64       		.sleb128 -28
 2060 0141 0A       		.uleb128 0xa
 2061 0142 F8030000 		.4byte	.LASF20
 2062 0146 01       		.byte	0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 62


 2063 0147 2701     		.2byte	0x127
 2064 0149 6B000000 		.4byte	0x6b
 2065 014d 02       		.uleb128 0x2
 2066 014e 91       		.byte	0x91
 2067 014f 6F       		.sleb128 -17
 2068 0150 00       		.byte	0
 2069 0151 09       		.uleb128 0x9
 2070 0152 51030000 		.4byte	.LASF22
 2071 0156 01       		.byte	0x1
 2072 0157 4601     		.2byte	0x146
 2073 0159 00000000 		.4byte	.LFB5
 2074 015d 48000000 		.4byte	.LFE5-.LFB5
 2075 0161 01       		.uleb128 0x1
 2076 0162 9C       		.byte	0x9c
 2077 0163 86010000 		.4byte	0x186
 2078 0167 0B       		.uleb128 0xb
 2079 0168 77000000 		.4byte	.LASF24
 2080 016c 01       		.byte	0x1
 2081 016d 4601     		.2byte	0x146
 2082 016f 77000000 		.4byte	0x77
 2083 0173 02       		.uleb128 0x2
 2084 0174 91       		.byte	0x91
 2085 0175 64       		.sleb128 -28
 2086 0176 0A       		.uleb128 0xa
 2087 0177 F8030000 		.4byte	.LASF20
 2088 017b 01       		.byte	0x1
 2089 017c 4801     		.2byte	0x148
 2090 017e 6B000000 		.4byte	0x6b
 2091 0182 02       		.uleb128 0x2
 2092 0183 91       		.byte	0x91
 2093 0184 6F       		.sleb128 -17
 2094 0185 00       		.byte	0
 2095 0186 09       		.uleb128 0x9
 2096 0187 E9020000 		.4byte	.LASF25
 2097 018b 01       		.byte	0x1
 2098 018c 6B01     		.2byte	0x16b
 2099 018e 00000000 		.4byte	.LFB6
 2100 0192 48000000 		.4byte	.LFE6-.LFB6
 2101 0196 01       		.uleb128 0x1
 2102 0197 9C       		.byte	0x9c
 2103 0198 BB010000 		.4byte	0x1bb
 2104 019c 0B       		.uleb128 0xb
 2105 019d CE020000 		.4byte	.LASF26
 2106 01a1 01       		.byte	0x1
 2107 01a2 6B01     		.2byte	0x16b
 2108 01a4 77000000 		.4byte	0x77
 2109 01a8 02       		.uleb128 0x2
 2110 01a9 91       		.byte	0x91
 2111 01aa 64       		.sleb128 -28
 2112 01ab 0A       		.uleb128 0xa
 2113 01ac F8030000 		.4byte	.LASF20
 2114 01b0 01       		.byte	0x1
 2115 01b1 6D01     		.2byte	0x16d
 2116 01b3 6B000000 		.4byte	0x6b
 2117 01b7 02       		.uleb128 0x2
 2118 01b8 91       		.byte	0x91
 2119 01b9 6F       		.sleb128 -17
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 63


 2120 01ba 00       		.byte	0
 2121 01bb 09       		.uleb128 0x9
 2122 01bc 77020000 		.4byte	.LASF27
 2123 01c0 01       		.byte	0x1
 2124 01c1 8B01     		.2byte	0x18b
 2125 01c3 00000000 		.4byte	.LFB7
 2126 01c7 4C000000 		.4byte	.LFE7-.LFB7
 2127 01cb 01       		.uleb128 0x1
 2128 01cc 9C       		.byte	0x9c
 2129 01cd F0010000 		.4byte	0x1f0
 2130 01d1 0B       		.uleb128 0xb
 2131 01d2 FB010000 		.4byte	.LASF28
 2132 01d6 01       		.byte	0x1
 2133 01d7 8B01     		.2byte	0x18b
 2134 01d9 77000000 		.4byte	0x77
 2135 01dd 02       		.uleb128 0x2
 2136 01de 91       		.byte	0x91
 2137 01df 64       		.sleb128 -28
 2138 01e0 0A       		.uleb128 0xa
 2139 01e1 F8030000 		.4byte	.LASF20
 2140 01e5 01       		.byte	0x1
 2141 01e6 8D01     		.2byte	0x18d
 2142 01e8 6B000000 		.4byte	0x6b
 2143 01ec 02       		.uleb128 0x2
 2144 01ed 91       		.byte	0x91
 2145 01ee 6F       		.sleb128 -17
 2146 01ef 00       		.byte	0
 2147 01f0 0C       		.uleb128 0xc
 2148 01f1 D8020000 		.4byte	.LASF29
 2149 01f5 01       		.byte	0x1
 2150 01f6 C101     		.2byte	0x1c1
 2151 01f8 00000000 		.4byte	.LFB8
 2152 01fc 1C000000 		.4byte	.LFE8-.LFB8
 2153 0200 01       		.uleb128 0x1
 2154 0201 9C       		.byte	0x9c
 2155 0202 16020000 		.4byte	0x216
 2156 0206 0B       		.uleb128 0xb
 2157 0207 29000000 		.4byte	.LASF30
 2158 020b 01       		.byte	0x1
 2159 020c C101     		.2byte	0x1c1
 2160 020e 77000000 		.4byte	0x77
 2161 0212 02       		.uleb128 0x2
 2162 0213 91       		.byte	0x91
 2163 0214 74       		.sleb128 -12
 2164 0215 00       		.byte	0
 2165 0216 09       		.uleb128 0x9
 2166 0217 7E000000 		.4byte	.LASF31
 2167 021b 01       		.byte	0x1
 2168 021c E501     		.2byte	0x1e5
 2169 021e 00000000 		.4byte	.LFB9
 2170 0222 48000000 		.4byte	.LFE9-.LFB9
 2171 0226 01       		.uleb128 0x1
 2172 0227 9C       		.byte	0x9c
 2173 0228 4B020000 		.4byte	0x24b
 2174 022c 0B       		.uleb128 0xb
 2175 022d 91020000 		.4byte	.LASF32
 2176 0231 01       		.byte	0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 64


 2177 0232 E501     		.2byte	0x1e5
 2178 0234 77000000 		.4byte	0x77
 2179 0238 02       		.uleb128 0x2
 2180 0239 91       		.byte	0x91
 2181 023a 64       		.sleb128 -28
 2182 023b 0A       		.uleb128 0xa
 2183 023c F8030000 		.4byte	.LASF20
 2184 0240 01       		.byte	0x1
 2185 0241 E701     		.2byte	0x1e7
 2186 0243 6B000000 		.4byte	0x6b
 2187 0247 02       		.uleb128 0x2
 2188 0248 91       		.byte	0x91
 2189 0249 6F       		.sleb128 -17
 2190 024a 00       		.byte	0
 2191 024b 09       		.uleb128 0x9
 2192 024c 1F030000 		.4byte	.LASF33
 2193 0250 01       		.byte	0x1
 2194 0251 0702     		.2byte	0x207
 2195 0253 00000000 		.4byte	.LFB10
 2196 0257 48000000 		.4byte	.LFE10-.LFB10
 2197 025b 01       		.uleb128 0x1
 2198 025c 9C       		.byte	0x9c
 2199 025d 80020000 		.4byte	0x280
 2200 0261 0B       		.uleb128 0xb
 2201 0262 36030000 		.4byte	.LASF34
 2202 0266 01       		.byte	0x1
 2203 0267 0702     		.2byte	0x207
 2204 0269 77000000 		.4byte	0x77
 2205 026d 02       		.uleb128 0x2
 2206 026e 91       		.byte	0x91
 2207 026f 64       		.sleb128 -28
 2208 0270 0A       		.uleb128 0xa
 2209 0271 F8030000 		.4byte	.LASF20
 2210 0275 01       		.byte	0x1
 2211 0276 0902     		.2byte	0x209
 2212 0278 6B000000 		.4byte	0x6b
 2213 027c 02       		.uleb128 0x2
 2214 027d 91       		.byte	0x91
 2215 027e 6F       		.sleb128 -17
 2216 027f 00       		.byte	0
 2217 0280 09       		.uleb128 0x9
 2218 0281 E6010000 		.4byte	.LASF35
 2219 0285 01       		.byte	0x1
 2220 0286 2802     		.2byte	0x228
 2221 0288 00000000 		.4byte	.LFB11
 2222 028c 4C000000 		.4byte	.LFE11-.LFB11
 2223 0290 01       		.uleb128 0x1
 2224 0291 9C       		.byte	0x9c
 2225 0292 B5020000 		.4byte	0x2b5
 2226 0296 0B       		.uleb128 0xb
 2227 0297 70010000 		.4byte	.LASF36
 2228 029b 01       		.byte	0x1
 2229 029c 2802     		.2byte	0x228
 2230 029e 77000000 		.4byte	0x77
 2231 02a2 02       		.uleb128 0x2
 2232 02a3 91       		.byte	0x91
 2233 02a4 64       		.sleb128 -28
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 65


 2234 02a5 0A       		.uleb128 0xa
 2235 02a6 F8030000 		.4byte	.LASF20
 2236 02aa 01       		.byte	0x1
 2237 02ab 2A02     		.2byte	0x22a
 2238 02ad 6B000000 		.4byte	0x6b
 2239 02b1 02       		.uleb128 0x2
 2240 02b2 91       		.byte	0x91
 2241 02b3 6F       		.sleb128 -17
 2242 02b4 00       		.byte	0
 2243 02b5 09       		.uleb128 0x9
 2244 02b6 3D020000 		.4byte	.LASF37
 2245 02ba 01       		.byte	0x1
 2246 02bb 4902     		.2byte	0x249
 2247 02bd 00000000 		.4byte	.LFB12
 2248 02c1 48000000 		.4byte	.LFE12-.LFB12
 2249 02c5 01       		.uleb128 0x1
 2250 02c6 9C       		.byte	0x9c
 2251 02c7 EA020000 		.4byte	0x2ea
 2252 02cb 0B       		.uleb128 0xb
 2253 02cc 59010000 		.4byte	.LASF38
 2254 02d0 01       		.byte	0x1
 2255 02d1 4902     		.2byte	0x249
 2256 02d3 77000000 		.4byte	0x77
 2257 02d7 02       		.uleb128 0x2
 2258 02d8 91       		.byte	0x91
 2259 02d9 64       		.sleb128 -28
 2260 02da 0A       		.uleb128 0xa
 2261 02db F8030000 		.4byte	.LASF20
 2262 02df 01       		.byte	0x1
 2263 02e0 4B02     		.2byte	0x24b
 2264 02e2 6B000000 		.4byte	0x6b
 2265 02e6 02       		.uleb128 0x2
 2266 02e7 91       		.byte	0x91
 2267 02e8 6F       		.sleb128 -17
 2268 02e9 00       		.byte	0
 2269 02ea 0C       		.uleb128 0xc
 2270 02eb 86010000 		.4byte	.LASF39
 2271 02ef 01       		.byte	0x1
 2272 02f0 6702     		.2byte	0x267
 2273 02f2 00000000 		.4byte	.LFB13
 2274 02f6 1C000000 		.4byte	.LFE13-.LFB13
 2275 02fa 01       		.uleb128 0x1
 2276 02fb 9C       		.byte	0x9c
 2277 02fc 10030000 		.4byte	0x310
 2278 0300 0B       		.uleb128 0xb
 2279 0301 00000000 		.4byte	.LASF40
 2280 0305 01       		.byte	0x1
 2281 0306 6702     		.2byte	0x267
 2282 0308 77000000 		.4byte	0x77
 2283 030c 02       		.uleb128 0x2
 2284 030d 91       		.byte	0x91
 2285 030e 74       		.sleb128 -12
 2286 030f 00       		.byte	0
 2287 0310 0D       		.uleb128 0xd
 2288 0311 CA030000 		.4byte	.LASF45
 2289 0315 01       		.byte	0x1
 2290 0316 7B02     		.2byte	0x27b
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 66


 2291 0318 77000000 		.4byte	0x77
 2292 031c 00000000 		.4byte	.LFB14
 2293 0320 18000000 		.4byte	.LFE14-.LFB14
 2294 0324 01       		.uleb128 0x1
 2295 0325 9C       		.byte	0x9c
 2296 0326 09       		.uleb128 0x9
 2297 0327 9E030000 		.4byte	.LASF41
 2298 032b 01       		.byte	0x1
 2299 032c 9802     		.2byte	0x298
 2300 032e 00000000 		.4byte	.LFB15
 2301 0332 48000000 		.4byte	.LFE15-.LFB15
 2302 0336 01       		.uleb128 0x1
 2303 0337 9C       		.byte	0x9c
 2304 0338 5B030000 		.4byte	0x35b
 2305 033c 0B       		.uleb128 0xb
 2306 033d B3030000 		.4byte	.LASF42
 2307 0341 01       		.byte	0x1
 2308 0342 9802     		.2byte	0x298
 2309 0344 77000000 		.4byte	0x77
 2310 0348 02       		.uleb128 0x2
 2311 0349 91       		.byte	0x91
 2312 034a 64       		.sleb128 -28
 2313 034b 0A       		.uleb128 0xa
 2314 034c F8030000 		.4byte	.LASF20
 2315 0350 01       		.byte	0x1
 2316 0351 9A02     		.2byte	0x29a
 2317 0353 6B000000 		.4byte	0x6b
 2318 0357 02       		.uleb128 0x2
 2319 0358 91       		.byte	0x91
 2320 0359 6F       		.sleb128 -17
 2321 035a 00       		.byte	0
 2322 035b 0C       		.uleb128 0xc
 2323 035c 93000000 		.4byte	.LASF43
 2324 0360 01       		.byte	0x1
 2325 0361 B502     		.2byte	0x2b5
 2326 0363 00000000 		.4byte	.LFB16
 2327 0367 1C000000 		.4byte	.LFE16-.LFB16
 2328 036b 01       		.uleb128 0x1
 2329 036c 9C       		.byte	0x9c
 2330 036d 81030000 		.4byte	0x381
 2331 0371 0B       		.uleb128 0xb
 2332 0372 32000000 		.4byte	.LASF44
 2333 0376 01       		.byte	0x1
 2334 0377 B502     		.2byte	0x2b5
 2335 0379 77000000 		.4byte	0x77
 2336 037d 02       		.uleb128 0x2
 2337 037e 91       		.byte	0x91
 2338 037f 74       		.sleb128 -12
 2339 0380 00       		.byte	0
 2340 0381 0D       		.uleb128 0xd
 2341 0382 1F020000 		.4byte	.LASF46
 2342 0386 01       		.byte	0x1
 2343 0387 C902     		.2byte	0x2c9
 2344 0389 77000000 		.4byte	0x77
 2345 038d 00000000 		.4byte	.LFB17
 2346 0391 18000000 		.4byte	.LFE17-.LFB17
 2347 0395 01       		.uleb128 0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 67


 2348 0396 9C       		.byte	0x9c
 2349 0397 09       		.uleb128 0x9
 2350 0398 06000000 		.4byte	.LASF47
 2351 039c 01       		.byte	0x1
 2352 039d E302     		.2byte	0x2e3
 2353 039f 00000000 		.4byte	.LFB18
 2354 03a3 48000000 		.4byte	.LFE18-.LFB18
 2355 03a7 01       		.uleb128 0x1
 2356 03a8 9C       		.byte	0x9c
 2357 03a9 CC030000 		.4byte	0x3cc
 2358 03ad 0B       		.uleb128 0xb
 2359 03ae BF030000 		.4byte	.LASF48
 2360 03b2 01       		.byte	0x1
 2361 03b3 E302     		.2byte	0x2e3
 2362 03b5 77000000 		.4byte	0x77
 2363 03b9 02       		.uleb128 0x2
 2364 03ba 91       		.byte	0x91
 2365 03bb 64       		.sleb128 -28
 2366 03bc 0A       		.uleb128 0xa
 2367 03bd F8030000 		.4byte	.LASF20
 2368 03c1 01       		.byte	0x1
 2369 03c2 E502     		.2byte	0x2e5
 2370 03c4 6B000000 		.4byte	0x6b
 2371 03c8 02       		.uleb128 0x2
 2372 03c9 91       		.byte	0x91
 2373 03ca 6F       		.sleb128 -17
 2374 03cb 00       		.byte	0
 2375 03cc 0C       		.uleb128 0xc
 2376 03cd A0020000 		.4byte	.LASF49
 2377 03d1 01       		.byte	0x1
 2378 03d2 FE02     		.2byte	0x2fe
 2379 03d4 00000000 		.4byte	.LFB19
 2380 03d8 1C000000 		.4byte	.LFE19-.LFB19
 2381 03dc 01       		.uleb128 0x1
 2382 03dd 9C       		.byte	0x9c
 2383 03de F2030000 		.4byte	0x3f2
 2384 03e2 0B       		.uleb128 0xb
 2385 03e3 7B050000 		.4byte	.LASF50
 2386 03e7 01       		.byte	0x1
 2387 03e8 FE02     		.2byte	0x2fe
 2388 03ea 77000000 		.4byte	0x77
 2389 03ee 02       		.uleb128 0x2
 2390 03ef 91       		.byte	0x91
 2391 03f0 74       		.sleb128 -12
 2392 03f1 00       		.byte	0
 2393 03f2 0D       		.uleb128 0xd
 2394 03f3 50000000 		.4byte	.LASF51
 2395 03f7 01       		.byte	0x1
 2396 03f8 1203     		.2byte	0x312
 2397 03fa 77000000 		.4byte	0x77
 2398 03fe 00000000 		.4byte	.LFB20
 2399 0402 18000000 		.4byte	.LFE20-.LFB20
 2400 0406 01       		.uleb128 0x1
 2401 0407 9C       		.byte	0x9c
 2402 0408 09       		.uleb128 0x9
 2403 0409 CA000000 		.4byte	.LASF52
 2404 040d 01       		.byte	0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 68


 2405 040e 2C03     		.2byte	0x32c
 2406 0410 00000000 		.4byte	.LFB21
 2407 0414 48000000 		.4byte	.LFE21-.LFB21
 2408 0418 01       		.uleb128 0x1
 2409 0419 9C       		.byte	0x9c
 2410 041a 3D040000 		.4byte	0x43d
 2411 041e 0B       		.uleb128 0xb
 2412 041f BF030000 		.4byte	.LASF48
 2413 0423 01       		.byte	0x1
 2414 0424 2C03     		.2byte	0x32c
 2415 0426 77000000 		.4byte	0x77
 2416 042a 02       		.uleb128 0x2
 2417 042b 91       		.byte	0x91
 2418 042c 64       		.sleb128 -28
 2419 042d 0A       		.uleb128 0xa
 2420 042e F8030000 		.4byte	.LASF20
 2421 0432 01       		.byte	0x1
 2422 0433 2E03     		.2byte	0x32e
 2423 0435 6B000000 		.4byte	0x6b
 2424 0439 02       		.uleb128 0x2
 2425 043a 91       		.byte	0x91
 2426 043b 6F       		.sleb128 -17
 2427 043c 00       		.byte	0
 2428 043d 0C       		.uleb128 0xc
 2429 043e FC000000 		.4byte	.LASF53
 2430 0442 01       		.byte	0x1
 2431 0443 5103     		.2byte	0x351
 2432 0445 00000000 		.4byte	.LFB22
 2433 0449 1C000000 		.4byte	.LFE22-.LFB22
 2434 044d 01       		.uleb128 0x1
 2435 044e 9C       		.byte	0x9c
 2436 044f 63040000 		.4byte	0x463
 2437 0453 0B       		.uleb128 0xb
 2438 0454 B5020000 		.4byte	.LASF54
 2439 0458 01       		.byte	0x1
 2440 0459 5103     		.2byte	0x351
 2441 045b 77000000 		.4byte	0x77
 2442 045f 02       		.uleb128 0x2
 2443 0460 91       		.byte	0x91
 2444 0461 74       		.sleb128 -12
 2445 0462 00       		.byte	0
 2446 0463 0D       		.uleb128 0xd
 2447 0464 61030000 		.4byte	.LASF55
 2448 0468 01       		.byte	0x1
 2449 0469 8403     		.2byte	0x384
 2450 046b 77000000 		.4byte	0x77
 2451 046f 00000000 		.4byte	.LFB23
 2452 0473 18000000 		.4byte	.LFE23-.LFB23
 2453 0477 01       		.uleb128 0x1
 2454 0478 9C       		.byte	0x9c
 2455 0479 0C       		.uleb128 0xc
 2456 047a 09020000 		.4byte	.LASF56
 2457 047e 01       		.byte	0x1
 2458 047f BA03     		.2byte	0x3ba
 2459 0481 00000000 		.4byte	.LFB24
 2460 0485 1C000000 		.4byte	.LFE24-.LFB24
 2461 0489 01       		.uleb128 0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 69


 2462 048a 9C       		.byte	0x9c
 2463 048b 9F040000 		.4byte	0x49f
 2464 048f 0B       		.uleb128 0xb
 2465 0490 DC030000 		.4byte	.LASF57
 2466 0494 01       		.byte	0x1
 2467 0495 BA03     		.2byte	0x3ba
 2468 0497 77000000 		.4byte	0x77
 2469 049b 02       		.uleb128 0x2
 2470 049c 91       		.byte	0x91
 2471 049d 74       		.sleb128 -12
 2472 049e 00       		.byte	0
 2473 049f 0D       		.uleb128 0xd
 2474 04a0 DE000000 		.4byte	.LASF58
 2475 04a4 01       		.byte	0x1
 2476 04a5 E803     		.2byte	0x3e8
 2477 04a7 77000000 		.4byte	0x77
 2478 04ab 00000000 		.4byte	.LFB25
 2479 04af 18000000 		.4byte	.LFE25-.LFB25
 2480 04b3 01       		.uleb128 0x1
 2481 04b4 9C       		.byte	0x9c
 2482 04b5 0D       		.uleb128 0xd
 2483 04b6 5E010000 		.4byte	.LASF59
 2484 04ba 01       		.byte	0x1
 2485 04bb 1604     		.2byte	0x416
 2486 04bd 77000000 		.4byte	0x77
 2487 04c1 00000000 		.4byte	.LFB26
 2488 04c5 18000000 		.4byte	.LFE26-.LFB26
 2489 04c9 01       		.uleb128 0x1
 2490 04ca 9C       		.byte	0x9c
 2491 04cb 0D       		.uleb128 0xd
 2492 04cc FC020000 		.4byte	.LASF60
 2493 04d0 01       		.byte	0x1
 2494 04d1 2B04     		.2byte	0x42b
 2495 04d3 77000000 		.4byte	0x77
 2496 04d7 00000000 		.4byte	.LFB27
 2497 04db 18000000 		.4byte	.LFE27-.LFB27
 2498 04df 01       		.uleb128 0x1
 2499 04e0 9C       		.byte	0x9c
 2500 04e1 09       		.uleb128 0x9
 2501 04e2 3F040000 		.4byte	.LASF61
 2502 04e6 01       		.byte	0x1
 2503 04e7 4604     		.2byte	0x446
 2504 04e9 00000000 		.4byte	.LFB28
 2505 04ed 44000000 		.4byte	.LFE28-.LFB28
 2506 04f1 01       		.uleb128 0x1
 2507 04f2 9C       		.byte	0x9c
 2508 04f3 16050000 		.4byte	0x516
 2509 04f7 0B       		.uleb128 0xb
 2510 04f8 4D010000 		.4byte	.LASF62
 2511 04fc 01       		.byte	0x1
 2512 04fd 4604     		.2byte	0x446
 2513 04ff 77000000 		.4byte	0x77
 2514 0503 02       		.uleb128 0x2
 2515 0504 91       		.byte	0x91
 2516 0505 64       		.sleb128 -28
 2517 0506 0A       		.uleb128 0xa
 2518 0507 F8030000 		.4byte	.LASF20
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 70


 2519 050b 01       		.byte	0x1
 2520 050c 4804     		.2byte	0x448
 2521 050e 6B000000 		.4byte	0x6b
 2522 0512 02       		.uleb128 0x2
 2523 0513 91       		.byte	0x91
 2524 0514 6F       		.sleb128 -17
 2525 0515 00       		.byte	0
 2526 0516 09       		.uleb128 0x9
 2527 0517 A1010000 		.4byte	.LASF63
 2528 051b 01       		.byte	0x1
 2529 051c 6704     		.2byte	0x467
 2530 051e 00000000 		.4byte	.LFB29
 2531 0522 44000000 		.4byte	.LFE29-.LFB29
 2532 0526 01       		.uleb128 0x1
 2533 0527 9C       		.byte	0x9c
 2534 0528 4B050000 		.4byte	0x54b
 2535 052c 0B       		.uleb128 0xb
 2536 052d 4D010000 		.4byte	.LASF62
 2537 0531 01       		.byte	0x1
 2538 0532 6704     		.2byte	0x467
 2539 0534 77000000 		.4byte	0x77
 2540 0538 02       		.uleb128 0x2
 2541 0539 91       		.byte	0x91
 2542 053a 64       		.sleb128 -28
 2543 053b 0A       		.uleb128 0xa
 2544 053c F8030000 		.4byte	.LASF20
 2545 0540 01       		.byte	0x1
 2546 0541 6904     		.2byte	0x469
 2547 0543 6B000000 		.4byte	0x6b
 2548 0547 02       		.uleb128 0x2
 2549 0548 91       		.byte	0x91
 2550 0549 6F       		.sleb128 -17
 2551 054a 00       		.byte	0
 2552 054b 09       		.uleb128 0x9
 2553 054c 56020000 		.4byte	.LASF64
 2554 0550 01       		.byte	0x1
 2555 0551 8804     		.2byte	0x488
 2556 0553 00000000 		.4byte	.LFB30
 2557 0557 48000000 		.4byte	.LFE30-.LFB30
 2558 055b 01       		.uleb128 0x1
 2559 055c 9C       		.byte	0x9c
 2560 055d 80050000 		.4byte	0x580
 2561 0561 0B       		.uleb128 0xb
 2562 0562 4D010000 		.4byte	.LASF62
 2563 0566 01       		.byte	0x1
 2564 0567 8804     		.2byte	0x488
 2565 0569 77000000 		.4byte	0x77
 2566 056d 02       		.uleb128 0x2
 2567 056e 91       		.byte	0x91
 2568 056f 64       		.sleb128 -28
 2569 0570 0A       		.uleb128 0xa
 2570 0571 F8030000 		.4byte	.LASF20
 2571 0575 01       		.byte	0x1
 2572 0576 8A04     		.2byte	0x48a
 2573 0578 6B000000 		.4byte	0x6b
 2574 057c 02       		.uleb128 0x2
 2575 057d 91       		.byte	0x91
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 71


 2576 057e 6F       		.sleb128 -17
 2577 057f 00       		.byte	0
 2578 0580 09       		.uleb128 0x9
 2579 0581 85050000 		.4byte	.LASF65
 2580 0585 01       		.byte	0x1
 2581 0586 A804     		.2byte	0x4a8
 2582 0588 00000000 		.4byte	.LFB31
 2583 058c 44000000 		.4byte	.LFE31-.LFB31
 2584 0590 01       		.uleb128 0x1
 2585 0591 9C       		.byte	0x9c
 2586 0592 B5050000 		.4byte	0x5b5
 2587 0596 0B       		.uleb128 0xb
 2588 0597 4D010000 		.4byte	.LASF62
 2589 059b 01       		.byte	0x1
 2590 059c A804     		.2byte	0x4a8
 2591 059e 77000000 		.4byte	0x77
 2592 05a2 02       		.uleb128 0x2
 2593 05a3 91       		.byte	0x91
 2594 05a4 64       		.sleb128 -28
 2595 05a5 0A       		.uleb128 0xa
 2596 05a6 F8030000 		.4byte	.LASF20
 2597 05aa 01       		.byte	0x1
 2598 05ab AA04     		.2byte	0x4aa
 2599 05ad 6B000000 		.4byte	0x6b
 2600 05b1 02       		.uleb128 0x2
 2601 05b2 91       		.byte	0x91
 2602 05b3 6F       		.sleb128 -17
 2603 05b4 00       		.byte	0
 2604 05b5 09       		.uleb128 0x9
 2605 05b6 64000000 		.4byte	.LASF66
 2606 05ba 01       		.byte	0x1
 2607 05bb C904     		.2byte	0x4c9
 2608 05bd 00000000 		.4byte	.LFB32
 2609 05c1 44000000 		.4byte	.LFE32-.LFB32
 2610 05c5 01       		.uleb128 0x1
 2611 05c6 9C       		.byte	0x9c
 2612 05c7 EA050000 		.4byte	0x5ea
 2613 05cb 0B       		.uleb128 0xb
 2614 05cc 4D010000 		.4byte	.LASF62
 2615 05d0 01       		.byte	0x1
 2616 05d1 C904     		.2byte	0x4c9
 2617 05d3 77000000 		.4byte	0x77
 2618 05d7 02       		.uleb128 0x2
 2619 05d8 91       		.byte	0x91
 2620 05d9 64       		.sleb128 -28
 2621 05da 0A       		.uleb128 0xa
 2622 05db F8030000 		.4byte	.LASF20
 2623 05df 01       		.byte	0x1
 2624 05e0 CB04     		.2byte	0x4cb
 2625 05e2 6B000000 		.4byte	0x6b
 2626 05e6 02       		.uleb128 0x2
 2627 05e7 91       		.byte	0x91
 2628 05e8 6F       		.sleb128 -17
 2629 05e9 00       		.byte	0
 2630 05ea 09       		.uleb128 0x9
 2631 05eb 1C010000 		.4byte	.LASF67
 2632 05ef 01       		.byte	0x1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 72


 2633 05f0 F104     		.2byte	0x4f1
 2634 05f2 00000000 		.4byte	.LFB33
 2635 05f6 38000000 		.4byte	.LFE33-.LFB33
 2636 05fa 01       		.uleb128 0x1
 2637 05fb 9C       		.byte	0x9c
 2638 05fc 2E060000 		.4byte	0x62e
 2639 0600 0B       		.uleb128 0xb
 2640 0601 59010000 		.4byte	.LASF38
 2641 0605 01       		.byte	0x1
 2642 0606 F104     		.2byte	0x4f1
 2643 0608 77000000 		.4byte	0x77
 2644 060c 02       		.uleb128 0x2
 2645 060d 91       		.byte	0x91
 2646 060e 64       		.sleb128 -28
 2647 060f 0B       		.uleb128 0xb
 2648 0610 99010000 		.4byte	.LASF68
 2649 0614 01       		.byte	0x1
 2650 0615 F104     		.2byte	0x4f1
 2651 0617 77000000 		.4byte	0x77
 2652 061b 02       		.uleb128 0x2
 2653 061c 91       		.byte	0x91
 2654 061d 60       		.sleb128 -32
 2655 061e 0A       		.uleb128 0xa
 2656 061f F8030000 		.4byte	.LASF20
 2657 0623 01       		.byte	0x1
 2658 0624 F304     		.2byte	0x4f3
 2659 0626 6B000000 		.4byte	0x6b
 2660 062a 02       		.uleb128 0x2
 2661 062b 91       		.byte	0x91
 2662 062c 6F       		.sleb128 -17
 2663 062d 00       		.byte	0
 2664 062e 0D       		.uleb128 0xd
 2665 062f E7030000 		.4byte	.LASF69
 2666 0633 01       		.byte	0x1
 2667 0634 0E05     		.2byte	0x50e
 2668 0636 77000000 		.4byte	0x77
 2669 063a 00000000 		.4byte	.LFB34
 2670 063e 20000000 		.4byte	.LFE34-.LFB34
 2671 0642 01       		.uleb128 0x1
 2672 0643 9C       		.byte	0x9c
 2673 0644 0C       		.uleb128 0xc
 2674 0645 09040000 		.4byte	.LASF70
 2675 0649 01       		.byte	0x1
 2676 064a 2705     		.2byte	0x527
 2677 064c 00000000 		.4byte	.LFB35
 2678 0650 18000000 		.4byte	.LFE35-.LFB35
 2679 0654 01       		.uleb128 0x1
 2680 0655 9C       		.byte	0x9c
 2681 0656 6A060000 		.4byte	0x66a
 2682 065a 0B       		.uleb128 0xb
 2683 065b 73030000 		.4byte	.LASF71
 2684 065f 01       		.byte	0x1
 2685 0660 2705     		.2byte	0x527
 2686 0662 77000000 		.4byte	0x77
 2687 0666 02       		.uleb128 0x2
 2688 0667 91       		.byte	0x91
 2689 0668 74       		.sleb128 -12
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 73


 2690 0669 00       		.byte	0
 2691 066a 0D       		.uleb128 0xd
 2692 066b 54040000 		.4byte	.LASF72
 2693 066f 01       		.byte	0x1
 2694 0670 3E05     		.2byte	0x53e
 2695 0672 77000000 		.4byte	0x77
 2696 0676 00000000 		.4byte	.LFB36
 2697 067a 14000000 		.4byte	.LFE36-.LFB36
 2698 067e 01       		.uleb128 0x1
 2699 067f 9C       		.byte	0x9c
 2700 0680 0D       		.uleb128 0xd
 2701 0681 62050000 		.4byte	.LASF73
 2702 0685 01       		.byte	0x1
 2703 0686 5505     		.2byte	0x555
 2704 0688 77000000 		.4byte	0x77
 2705 068c 00000000 		.4byte	.LFB37
 2706 0690 14000000 		.4byte	.LFE37-.LFB37
 2707 0694 01       		.uleb128 0x1
 2708 0695 9C       		.byte	0x9c
 2709 0696 0C       		.uleb128 0xc
 2710 0697 31010000 		.4byte	.LASF74
 2711 069b 01       		.byte	0x1
 2712 069c 6C05     		.2byte	0x56c
 2713 069e 00000000 		.4byte	.LFB38
 2714 06a2 18000000 		.4byte	.LFE38-.LFB38
 2715 06a6 01       		.uleb128 0x1
 2716 06a7 9C       		.byte	0x9c
 2717 06a8 BC060000 		.4byte	0x6bc
 2718 06ac 0B       		.uleb128 0xb
 2719 06ad 73030000 		.4byte	.LASF71
 2720 06b1 01       		.byte	0x1
 2721 06b2 6C05     		.2byte	0x56c
 2722 06b4 77000000 		.4byte	0x77
 2723 06b8 02       		.uleb128 0x2
 2724 06b9 91       		.byte	0x91
 2725 06ba 74       		.sleb128 -12
 2726 06bb 00       		.byte	0
 2727 06bc 0C       		.uleb128 0xc
 2728 06bd 81030000 		.4byte	.LASF75
 2729 06c1 01       		.byte	0x1
 2730 06c2 8305     		.2byte	0x583
 2731 06c4 00000000 		.4byte	.LFB39
 2732 06c8 18000000 		.4byte	.LFE39-.LFB39
 2733 06cc 01       		.uleb128 0x1
 2734 06cd 9C       		.byte	0x9c
 2735 06ce E2060000 		.4byte	0x6e2
 2736 06d2 0B       		.uleb128 0xb
 2737 06d3 73030000 		.4byte	.LASF71
 2738 06d7 01       		.byte	0x1
 2739 06d8 8305     		.2byte	0x583
 2740 06da 77000000 		.4byte	0x77
 2741 06de 02       		.uleb128 0x2
 2742 06df 91       		.byte	0x91
 2743 06e0 74       		.sleb128 -12
 2744 06e1 00       		.byte	0
 2745 06e2 0E       		.uleb128 0xe
 2746 06e3 1B000000 		.4byte	.LASF79
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 74


 2747 06e7 01       		.byte	0x1
 2748 06e8 15       		.byte	0x15
 2749 06e9 6B000000 		.4byte	0x6b
 2750 06ed 05       		.uleb128 0x5
 2751 06ee 03       		.byte	0x3
 2752 06ef 00000000 		.4byte	PWM_2_initVar
 2753 06f3 00       		.byte	0
 2754              		.section	.debug_abbrev,"",%progbits
 2755              	.Ldebug_abbrev0:
 2756 0000 01       		.uleb128 0x1
 2757 0001 11       		.uleb128 0x11
 2758 0002 01       		.byte	0x1
 2759 0003 25       		.uleb128 0x25
 2760 0004 0E       		.uleb128 0xe
 2761 0005 13       		.uleb128 0x13
 2762 0006 0B       		.uleb128 0xb
 2763 0007 03       		.uleb128 0x3
 2764 0008 0E       		.uleb128 0xe
 2765 0009 1B       		.uleb128 0x1b
 2766 000a 0E       		.uleb128 0xe
 2767 000b 55       		.uleb128 0x55
 2768 000c 17       		.uleb128 0x17
 2769 000d 11       		.uleb128 0x11
 2770 000e 01       		.uleb128 0x1
 2771 000f 10       		.uleb128 0x10
 2772 0010 17       		.uleb128 0x17
 2773 0011 00       		.byte	0
 2774 0012 00       		.byte	0
 2775 0013 02       		.uleb128 0x2
 2776 0014 24       		.uleb128 0x24
 2777 0015 00       		.byte	0
 2778 0016 0B       		.uleb128 0xb
 2779 0017 0B       		.uleb128 0xb
 2780 0018 3E       		.uleb128 0x3e
 2781 0019 0B       		.uleb128 0xb
 2782 001a 03       		.uleb128 0x3
 2783 001b 0E       		.uleb128 0xe
 2784 001c 00       		.byte	0
 2785 001d 00       		.byte	0
 2786 001e 03       		.uleb128 0x3
 2787 001f 24       		.uleb128 0x24
 2788 0020 00       		.byte	0
 2789 0021 0B       		.uleb128 0xb
 2790 0022 0B       		.uleb128 0xb
 2791 0023 3E       		.uleb128 0x3e
 2792 0024 0B       		.uleb128 0xb
 2793 0025 03       		.uleb128 0x3
 2794 0026 08       		.uleb128 0x8
 2795 0027 00       		.byte	0
 2796 0028 00       		.byte	0
 2797 0029 04       		.uleb128 0x4
 2798 002a 16       		.uleb128 0x16
 2799 002b 00       		.byte	0
 2800 002c 03       		.uleb128 0x3
 2801 002d 0E       		.uleb128 0xe
 2802 002e 3A       		.uleb128 0x3a
 2803 002f 0B       		.uleb128 0xb
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 75


 2804 0030 3B       		.uleb128 0x3b
 2805 0031 05       		.uleb128 0x5
 2806 0032 49       		.uleb128 0x49
 2807 0033 13       		.uleb128 0x13
 2808 0034 00       		.byte	0
 2809 0035 00       		.byte	0
 2810 0036 05       		.uleb128 0x5
 2811 0037 35       		.uleb128 0x35
 2812 0038 00       		.byte	0
 2813 0039 49       		.uleb128 0x49
 2814 003a 13       		.uleb128 0x13
 2815 003b 00       		.byte	0
 2816 003c 00       		.byte	0
 2817 003d 06       		.uleb128 0x6
 2818 003e 2E       		.uleb128 0x2e
 2819 003f 00       		.byte	0
 2820 0040 3F       		.uleb128 0x3f
 2821 0041 19       		.uleb128 0x19
 2822 0042 03       		.uleb128 0x3
 2823 0043 0E       		.uleb128 0xe
 2824 0044 3A       		.uleb128 0x3a
 2825 0045 0B       		.uleb128 0xb
 2826 0046 3B       		.uleb128 0x3b
 2827 0047 0B       		.uleb128 0xb
 2828 0048 27       		.uleb128 0x27
 2829 0049 19       		.uleb128 0x19
 2830 004a 11       		.uleb128 0x11
 2831 004b 01       		.uleb128 0x1
 2832 004c 12       		.uleb128 0x12
 2833 004d 06       		.uleb128 0x6
 2834 004e 40       		.uleb128 0x40
 2835 004f 18       		.uleb128 0x18
 2836 0050 9642     		.uleb128 0x2116
 2837 0052 19       		.uleb128 0x19
 2838 0053 00       		.byte	0
 2839 0054 00       		.byte	0
 2840 0055 07       		.uleb128 0x7
 2841 0056 2E       		.uleb128 0x2e
 2842 0057 01       		.byte	0x1
 2843 0058 3F       		.uleb128 0x3f
 2844 0059 19       		.uleb128 0x19
 2845 005a 03       		.uleb128 0x3
 2846 005b 0E       		.uleb128 0xe
 2847 005c 3A       		.uleb128 0x3a
 2848 005d 0B       		.uleb128 0xb
 2849 005e 3B       		.uleb128 0x3b
 2850 005f 0B       		.uleb128 0xb
 2851 0060 27       		.uleb128 0x27
 2852 0061 19       		.uleb128 0x19
 2853 0062 11       		.uleb128 0x11
 2854 0063 01       		.uleb128 0x1
 2855 0064 12       		.uleb128 0x12
 2856 0065 06       		.uleb128 0x6
 2857 0066 40       		.uleb128 0x40
 2858 0067 18       		.uleb128 0x18
 2859 0068 9642     		.uleb128 0x2116
 2860 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 76


 2861 006b 01       		.uleb128 0x1
 2862 006c 13       		.uleb128 0x13
 2863 006d 00       		.byte	0
 2864 006e 00       		.byte	0
 2865 006f 08       		.uleb128 0x8
 2866 0070 34       		.uleb128 0x34
 2867 0071 00       		.byte	0
 2868 0072 03       		.uleb128 0x3
 2869 0073 0E       		.uleb128 0xe
 2870 0074 3A       		.uleb128 0x3a
 2871 0075 0B       		.uleb128 0xb
 2872 0076 3B       		.uleb128 0x3b
 2873 0077 0B       		.uleb128 0xb
 2874 0078 49       		.uleb128 0x49
 2875 0079 13       		.uleb128 0x13
 2876 007a 02       		.uleb128 0x2
 2877 007b 18       		.uleb128 0x18
 2878 007c 00       		.byte	0
 2879 007d 00       		.byte	0
 2880 007e 09       		.uleb128 0x9
 2881 007f 2E       		.uleb128 0x2e
 2882 0080 01       		.byte	0x1
 2883 0081 3F       		.uleb128 0x3f
 2884 0082 19       		.uleb128 0x19
 2885 0083 03       		.uleb128 0x3
 2886 0084 0E       		.uleb128 0xe
 2887 0085 3A       		.uleb128 0x3a
 2888 0086 0B       		.uleb128 0xb
 2889 0087 3B       		.uleb128 0x3b
 2890 0088 05       		.uleb128 0x5
 2891 0089 27       		.uleb128 0x27
 2892 008a 19       		.uleb128 0x19
 2893 008b 11       		.uleb128 0x11
 2894 008c 01       		.uleb128 0x1
 2895 008d 12       		.uleb128 0x12
 2896 008e 06       		.uleb128 0x6
 2897 008f 40       		.uleb128 0x40
 2898 0090 18       		.uleb128 0x18
 2899 0091 9642     		.uleb128 0x2116
 2900 0093 19       		.uleb128 0x19
 2901 0094 01       		.uleb128 0x1
 2902 0095 13       		.uleb128 0x13
 2903 0096 00       		.byte	0
 2904 0097 00       		.byte	0
 2905 0098 0A       		.uleb128 0xa
 2906 0099 34       		.uleb128 0x34
 2907 009a 00       		.byte	0
 2908 009b 03       		.uleb128 0x3
 2909 009c 0E       		.uleb128 0xe
 2910 009d 3A       		.uleb128 0x3a
 2911 009e 0B       		.uleb128 0xb
 2912 009f 3B       		.uleb128 0x3b
 2913 00a0 05       		.uleb128 0x5
 2914 00a1 49       		.uleb128 0x49
 2915 00a2 13       		.uleb128 0x13
 2916 00a3 02       		.uleb128 0x2
 2917 00a4 18       		.uleb128 0x18
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 77


 2918 00a5 00       		.byte	0
 2919 00a6 00       		.byte	0
 2920 00a7 0B       		.uleb128 0xb
 2921 00a8 05       		.uleb128 0x5
 2922 00a9 00       		.byte	0
 2923 00aa 03       		.uleb128 0x3
 2924 00ab 0E       		.uleb128 0xe
 2925 00ac 3A       		.uleb128 0x3a
 2926 00ad 0B       		.uleb128 0xb
 2927 00ae 3B       		.uleb128 0x3b
 2928 00af 05       		.uleb128 0x5
 2929 00b0 49       		.uleb128 0x49
 2930 00b1 13       		.uleb128 0x13
 2931 00b2 02       		.uleb128 0x2
 2932 00b3 18       		.uleb128 0x18
 2933 00b4 00       		.byte	0
 2934 00b5 00       		.byte	0
 2935 00b6 0C       		.uleb128 0xc
 2936 00b7 2E       		.uleb128 0x2e
 2937 00b8 01       		.byte	0x1
 2938 00b9 3F       		.uleb128 0x3f
 2939 00ba 19       		.uleb128 0x19
 2940 00bb 03       		.uleb128 0x3
 2941 00bc 0E       		.uleb128 0xe
 2942 00bd 3A       		.uleb128 0x3a
 2943 00be 0B       		.uleb128 0xb
 2944 00bf 3B       		.uleb128 0x3b
 2945 00c0 05       		.uleb128 0x5
 2946 00c1 27       		.uleb128 0x27
 2947 00c2 19       		.uleb128 0x19
 2948 00c3 11       		.uleb128 0x11
 2949 00c4 01       		.uleb128 0x1
 2950 00c5 12       		.uleb128 0x12
 2951 00c6 06       		.uleb128 0x6
 2952 00c7 40       		.uleb128 0x40
 2953 00c8 18       		.uleb128 0x18
 2954 00c9 9742     		.uleb128 0x2117
 2955 00cb 19       		.uleb128 0x19
 2956 00cc 01       		.uleb128 0x1
 2957 00cd 13       		.uleb128 0x13
 2958 00ce 00       		.byte	0
 2959 00cf 00       		.byte	0
 2960 00d0 0D       		.uleb128 0xd
 2961 00d1 2E       		.uleb128 0x2e
 2962 00d2 00       		.byte	0
 2963 00d3 3F       		.uleb128 0x3f
 2964 00d4 19       		.uleb128 0x19
 2965 00d5 03       		.uleb128 0x3
 2966 00d6 0E       		.uleb128 0xe
 2967 00d7 3A       		.uleb128 0x3a
 2968 00d8 0B       		.uleb128 0xb
 2969 00d9 3B       		.uleb128 0x3b
 2970 00da 05       		.uleb128 0x5
 2971 00db 27       		.uleb128 0x27
 2972 00dc 19       		.uleb128 0x19
 2973 00dd 49       		.uleb128 0x49
 2974 00de 13       		.uleb128 0x13
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 78


 2975 00df 11       		.uleb128 0x11
 2976 00e0 01       		.uleb128 0x1
 2977 00e1 12       		.uleb128 0x12
 2978 00e2 06       		.uleb128 0x6
 2979 00e3 40       		.uleb128 0x40
 2980 00e4 18       		.uleb128 0x18
 2981 00e5 9742     		.uleb128 0x2117
 2982 00e7 19       		.uleb128 0x19
 2983 00e8 00       		.byte	0
 2984 00e9 00       		.byte	0
 2985 00ea 0E       		.uleb128 0xe
 2986 00eb 34       		.uleb128 0x34
 2987 00ec 00       		.byte	0
 2988 00ed 03       		.uleb128 0x3
 2989 00ee 0E       		.uleb128 0xe
 2990 00ef 3A       		.uleb128 0x3a
 2991 00f0 0B       		.uleb128 0xb
 2992 00f1 3B       		.uleb128 0x3b
 2993 00f2 0B       		.uleb128 0xb
 2994 00f3 49       		.uleb128 0x49
 2995 00f4 13       		.uleb128 0x13
 2996 00f5 3F       		.uleb128 0x3f
 2997 00f6 19       		.uleb128 0x19
 2998 00f7 02       		.uleb128 0x2
 2999 00f8 18       		.uleb128 0x18
 3000 00f9 00       		.byte	0
 3001 00fa 00       		.byte	0
 3002 00fb 00       		.byte	0
 3003              		.section	.debug_aranges,"",%progbits
 3004 0000 54010000 		.4byte	0x154
 3005 0004 0200     		.2byte	0x2
 3006 0006 00000000 		.4byte	.Ldebug_info0
 3007 000a 04       		.byte	0x4
 3008 000b 00       		.byte	0
 3009 000c 0000     		.2byte	0
 3010 000e 0000     		.2byte	0
 3011 0010 00000000 		.4byte	.LFB0
 3012 0014 5C000000 		.4byte	.LFE0-.LFB0
 3013 0018 00000000 		.4byte	.LFB1
 3014 001c 38000000 		.4byte	.LFE1-.LFB1
 3015 0020 00000000 		.4byte	.LFB2
 3016 0024 24000000 		.4byte	.LFE2-.LFB2
 3017 0028 00000000 		.4byte	.LFB3
 3018 002c 30000000 		.4byte	.LFE3-.LFB3
 3019 0030 00000000 		.4byte	.LFB4
 3020 0034 48000000 		.4byte	.LFE4-.LFB4
 3021 0038 00000000 		.4byte	.LFB5
 3022 003c 48000000 		.4byte	.LFE5-.LFB5
 3023 0040 00000000 		.4byte	.LFB6
 3024 0044 48000000 		.4byte	.LFE6-.LFB6
 3025 0048 00000000 		.4byte	.LFB7
 3026 004c 4C000000 		.4byte	.LFE7-.LFB7
 3027 0050 00000000 		.4byte	.LFB8
 3028 0054 1C000000 		.4byte	.LFE8-.LFB8
 3029 0058 00000000 		.4byte	.LFB9
 3030 005c 48000000 		.4byte	.LFE9-.LFB9
 3031 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 79


 3032 0064 48000000 		.4byte	.LFE10-.LFB10
 3033 0068 00000000 		.4byte	.LFB11
 3034 006c 4C000000 		.4byte	.LFE11-.LFB11
 3035 0070 00000000 		.4byte	.LFB12
 3036 0074 48000000 		.4byte	.LFE12-.LFB12
 3037 0078 00000000 		.4byte	.LFB13
 3038 007c 1C000000 		.4byte	.LFE13-.LFB13
 3039 0080 00000000 		.4byte	.LFB14
 3040 0084 18000000 		.4byte	.LFE14-.LFB14
 3041 0088 00000000 		.4byte	.LFB15
 3042 008c 48000000 		.4byte	.LFE15-.LFB15
 3043 0090 00000000 		.4byte	.LFB16
 3044 0094 1C000000 		.4byte	.LFE16-.LFB16
 3045 0098 00000000 		.4byte	.LFB17
 3046 009c 18000000 		.4byte	.LFE17-.LFB17
 3047 00a0 00000000 		.4byte	.LFB18
 3048 00a4 48000000 		.4byte	.LFE18-.LFB18
 3049 00a8 00000000 		.4byte	.LFB19
 3050 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3051 00b0 00000000 		.4byte	.LFB20
 3052 00b4 18000000 		.4byte	.LFE20-.LFB20
 3053 00b8 00000000 		.4byte	.LFB21
 3054 00bc 48000000 		.4byte	.LFE21-.LFB21
 3055 00c0 00000000 		.4byte	.LFB22
 3056 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3057 00c8 00000000 		.4byte	.LFB23
 3058 00cc 18000000 		.4byte	.LFE23-.LFB23
 3059 00d0 00000000 		.4byte	.LFB24
 3060 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3061 00d8 00000000 		.4byte	.LFB25
 3062 00dc 18000000 		.4byte	.LFE25-.LFB25
 3063 00e0 00000000 		.4byte	.LFB26
 3064 00e4 18000000 		.4byte	.LFE26-.LFB26
 3065 00e8 00000000 		.4byte	.LFB27
 3066 00ec 18000000 		.4byte	.LFE27-.LFB27
 3067 00f0 00000000 		.4byte	.LFB28
 3068 00f4 44000000 		.4byte	.LFE28-.LFB28
 3069 00f8 00000000 		.4byte	.LFB29
 3070 00fc 44000000 		.4byte	.LFE29-.LFB29
 3071 0100 00000000 		.4byte	.LFB30
 3072 0104 48000000 		.4byte	.LFE30-.LFB30
 3073 0108 00000000 		.4byte	.LFB31
 3074 010c 44000000 		.4byte	.LFE31-.LFB31
 3075 0110 00000000 		.4byte	.LFB32
 3076 0114 44000000 		.4byte	.LFE32-.LFB32
 3077 0118 00000000 		.4byte	.LFB33
 3078 011c 38000000 		.4byte	.LFE33-.LFB33
 3079 0120 00000000 		.4byte	.LFB34
 3080 0124 20000000 		.4byte	.LFE34-.LFB34
 3081 0128 00000000 		.4byte	.LFB35
 3082 012c 18000000 		.4byte	.LFE35-.LFB35
 3083 0130 00000000 		.4byte	.LFB36
 3084 0134 14000000 		.4byte	.LFE36-.LFB36
 3085 0138 00000000 		.4byte	.LFB37
 3086 013c 14000000 		.4byte	.LFE37-.LFB37
 3087 0140 00000000 		.4byte	.LFB38
 3088 0144 18000000 		.4byte	.LFE38-.LFB38
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 80


 3089 0148 00000000 		.4byte	.LFB39
 3090 014c 18000000 		.4byte	.LFE39-.LFB39
 3091 0150 00000000 		.4byte	0
 3092 0154 00000000 		.4byte	0
 3093              		.section	.debug_ranges,"",%progbits
 3094              	.Ldebug_ranges0:
 3095 0000 00000000 		.4byte	.LFB0
 3096 0004 5C000000 		.4byte	.LFE0
 3097 0008 00000000 		.4byte	.LFB1
 3098 000c 38000000 		.4byte	.LFE1
 3099 0010 00000000 		.4byte	.LFB2
 3100 0014 24000000 		.4byte	.LFE2
 3101 0018 00000000 		.4byte	.LFB3
 3102 001c 30000000 		.4byte	.LFE3
 3103 0020 00000000 		.4byte	.LFB4
 3104 0024 48000000 		.4byte	.LFE4
 3105 0028 00000000 		.4byte	.LFB5
 3106 002c 48000000 		.4byte	.LFE5
 3107 0030 00000000 		.4byte	.LFB6
 3108 0034 48000000 		.4byte	.LFE6
 3109 0038 00000000 		.4byte	.LFB7
 3110 003c 4C000000 		.4byte	.LFE7
 3111 0040 00000000 		.4byte	.LFB8
 3112 0044 1C000000 		.4byte	.LFE8
 3113 0048 00000000 		.4byte	.LFB9
 3114 004c 48000000 		.4byte	.LFE9
 3115 0050 00000000 		.4byte	.LFB10
 3116 0054 48000000 		.4byte	.LFE10
 3117 0058 00000000 		.4byte	.LFB11
 3118 005c 4C000000 		.4byte	.LFE11
 3119 0060 00000000 		.4byte	.LFB12
 3120 0064 48000000 		.4byte	.LFE12
 3121 0068 00000000 		.4byte	.LFB13
 3122 006c 1C000000 		.4byte	.LFE13
 3123 0070 00000000 		.4byte	.LFB14
 3124 0074 18000000 		.4byte	.LFE14
 3125 0078 00000000 		.4byte	.LFB15
 3126 007c 48000000 		.4byte	.LFE15
 3127 0080 00000000 		.4byte	.LFB16
 3128 0084 1C000000 		.4byte	.LFE16
 3129 0088 00000000 		.4byte	.LFB17
 3130 008c 18000000 		.4byte	.LFE17
 3131 0090 00000000 		.4byte	.LFB18
 3132 0094 48000000 		.4byte	.LFE18
 3133 0098 00000000 		.4byte	.LFB19
 3134 009c 1C000000 		.4byte	.LFE19
 3135 00a0 00000000 		.4byte	.LFB20
 3136 00a4 18000000 		.4byte	.LFE20
 3137 00a8 00000000 		.4byte	.LFB21
 3138 00ac 48000000 		.4byte	.LFE21
 3139 00b0 00000000 		.4byte	.LFB22
 3140 00b4 1C000000 		.4byte	.LFE22
 3141 00b8 00000000 		.4byte	.LFB23
 3142 00bc 18000000 		.4byte	.LFE23
 3143 00c0 00000000 		.4byte	.LFB24
 3144 00c4 1C000000 		.4byte	.LFE24
 3145 00c8 00000000 		.4byte	.LFB25
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 81


 3146 00cc 18000000 		.4byte	.LFE25
 3147 00d0 00000000 		.4byte	.LFB26
 3148 00d4 18000000 		.4byte	.LFE26
 3149 00d8 00000000 		.4byte	.LFB27
 3150 00dc 18000000 		.4byte	.LFE27
 3151 00e0 00000000 		.4byte	.LFB28
 3152 00e4 44000000 		.4byte	.LFE28
 3153 00e8 00000000 		.4byte	.LFB29
 3154 00ec 44000000 		.4byte	.LFE29
 3155 00f0 00000000 		.4byte	.LFB30
 3156 00f4 48000000 		.4byte	.LFE30
 3157 00f8 00000000 		.4byte	.LFB31
 3158 00fc 44000000 		.4byte	.LFE31
 3159 0100 00000000 		.4byte	.LFB32
 3160 0104 44000000 		.4byte	.LFE32
 3161 0108 00000000 		.4byte	.LFB33
 3162 010c 38000000 		.4byte	.LFE33
 3163 0110 00000000 		.4byte	.LFB34
 3164 0114 20000000 		.4byte	.LFE34
 3165 0118 00000000 		.4byte	.LFB35
 3166 011c 18000000 		.4byte	.LFE35
 3167 0120 00000000 		.4byte	.LFB36
 3168 0124 14000000 		.4byte	.LFE36
 3169 0128 00000000 		.4byte	.LFB37
 3170 012c 14000000 		.4byte	.LFE37
 3171 0130 00000000 		.4byte	.LFB38
 3172 0134 18000000 		.4byte	.LFE38
 3173 0138 00000000 		.4byte	.LFB39
 3174 013c 18000000 		.4byte	.LFE39
 3175 0140 00000000 		.4byte	0
 3176 0144 00000000 		.4byte	0
 3177              		.section	.debug_line,"",%progbits
 3178              	.Ldebug_line0:
 3179 0000 6F030000 		.section	.debug_str,"MS",%progbits,1
 3179      02004200 
 3179      00000201 
 3179      FB0E0D00 
 3179      01010101 
 3180              	.LASF40:
 3181 0000 636F756E 		.ascii	"count\000"
 3181      7400
 3182              	.LASF47:
 3183 0006 50574D5F 		.ascii	"PWM_2_SetCompareSwap\000"
 3183      325F5365 
 3183      74436F6D 
 3183      70617265 
 3183      53776170 
 3184              	.LASF79:
 3185 001b 50574D5F 		.ascii	"PWM_2_initVar\000"
 3185      325F696E 
 3185      69745661 
 3185      7200
 3186              	.LASF30:
 3187 0029 6D6F6465 		.ascii	"modeMask\000"
 3187      4D61736B 
 3187      00
 3188              	.LASF44:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 82


 3189 0032 70657269 		.ascii	"period\000"
 3189      6F6400
 3190              	.LASF7:
 3191 0039 6C6F6E67 		.ascii	"long long unsigned int\000"
 3191      206C6F6E 
 3191      6720756E 
 3191      7369676E 
 3191      65642069 
 3192              	.LASF51:
 3193 0050 50574D5F 		.ascii	"PWM_2_ReadPeriodBuf\000"
 3193      325F5265 
 3193      61645065 
 3193      72696F64 
 3193      42756600 
 3194              	.LASF66:
 3195 0064 50574D5F 		.ascii	"PWM_2_SetCountMode\000"
 3195      325F5365 
 3195      74436F75 
 3195      6E744D6F 
 3195      646500
 3196              	.LASF24:
 3197 0077 71644D6F 		.ascii	"qdMode\000"
 3197      646500
 3198              	.LASF31:
 3199 007e 50574D5F 		.ascii	"PWM_2_SetPWMSyncKill\000"
 3199      325F5365 
 3199      7450574D 
 3199      53796E63 
 3199      4B696C6C 
 3200              	.LASF43:
 3201 0093 50574D5F 		.ascii	"PWM_2_WritePeriod\000"
 3201      325F5772 
 3201      69746550 
 3201      6572696F 
 3201      6400
 3202              	.LASF6:
 3203 00a5 6C6F6E67 		.ascii	"long long int\000"
 3203      206C6F6E 
 3203      6720696E 
 3203      7400
 3204              	.LASF0:
 3205 00b3 7369676E 		.ascii	"signed char\000"
 3205      65642063 
 3205      68617200 
 3206              	.LASF19:
 3207 00bf 50574D5F 		.ascii	"PWM_2_Stop\000"
 3207      325F5374 
 3207      6F7000
 3208              	.LASF52:
 3209 00ca 50574D5F 		.ascii	"PWM_2_SetPeriodSwap\000"
 3209      325F5365 
 3209      74506572 
 3209      696F6453 
 3209      77617000 
 3210              	.LASF58:
 3211 00de 50574D5F 		.ascii	"PWM_2_ReadCompareBuf\000"
 3211      325F5265 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 83


 3211      6164436F 
 3211      6D706172 
 3211      65427566 
 3212              	.LASF4:
 3213 00f3 6C6F6E67 		.ascii	"long int\000"
 3213      20696E74 
 3213      00
 3214              	.LASF53:
 3215 00fc 50574D5F 		.ascii	"PWM_2_WriteCompare\000"
 3215      325F5772 
 3215      69746543 
 3215      6F6D7061 
 3215      726500
 3216              	.LASF9:
 3217 010f 75696E74 		.ascii	"uint8\000"
 3217      3800
 3218              	.LASF12:
 3219 0115 646F7562 		.ascii	"double\000"
 3219      6C6500
 3220              	.LASF67:
 3221 011c 50574D5F 		.ascii	"PWM_2_TriggerCommand\000"
 3221      325F5472 
 3221      69676765 
 3221      72436F6D 
 3221      6D616E64 
 3222              	.LASF74:
 3223 0131 50574D5F 		.ascii	"PWM_2_ClearInterrupt\000"
 3223      325F436C 
 3223      65617249 
 3223      6E746572 
 3223      72757074 
 3224              	.LASF10:
 3225 0146 75696E74 		.ascii	"uint32\000"
 3225      333200
 3226              	.LASF62:
 3227 014d 74726967 		.ascii	"triggerMode\000"
 3227      6765724D 
 3227      6F646500 
 3228              	.LASF38:
 3229 0159 6D61736B 		.ascii	"mask\000"
 3229      00
 3230              	.LASF59:
 3231 015e 50574D5F 		.ascii	"PWM_2_ReadCapture\000"
 3231      325F5265 
 3231      61644361 
 3231      70747572 
 3231      6500
 3232              	.LASF36:
 3233 0170 64656164 		.ascii	"deadTime\000"
 3233      54696D65 
 3233      00
 3234              	.LASF8:
 3235 0179 756E7369 		.ascii	"unsigned int\000"
 3235      676E6564 
 3235      20696E74 
 3235      00
 3236              	.LASF39:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 84


 3237 0186 50574D5F 		.ascii	"PWM_2_WriteCounter\000"
 3237      325F5772 
 3237      69746543 
 3237      6F756E74 
 3237      657200
 3238              	.LASF68:
 3239 0199 636F6D6D 		.ascii	"command\000"
 3239      616E6400 
 3240              	.LASF63:
 3241 01a1 50574D5F 		.ascii	"PWM_2_SetReloadMode\000"
 3241      325F5365 
 3241      7452656C 
 3241      6F61644D 
 3241      6F646500 
 3242              	.LASF5:
 3243 01b5 6C6F6E67 		.ascii	"long unsigned int\000"
 3243      20756E73 
 3243      69676E65 
 3243      6420696E 
 3243      7400
 3244              	.LASF17:
 3245 01c7 50574D5F 		.ascii	"PWM_2_Start\000"
 3245      325F5374 
 3245      61727400 
 3246              	.LASF3:
 3247 01d3 73686F72 		.ascii	"short unsigned int\000"
 3247      7420756E 
 3247      7369676E 
 3247      65642069 
 3247      6E7400
 3248              	.LASF35:
 3249 01e6 50574D5F 		.ascii	"PWM_2_SetPWMDeadTime\000"
 3249      325F5365 
 3249      7450574D 
 3249      44656164 
 3249      54696D65 
 3250              	.LASF28:
 3251 01fb 6F6E6553 		.ascii	"oneShotEnable\000"
 3251      686F7445 
 3251      6E61626C 
 3251      6500
 3252              	.LASF56:
 3253 0209 50574D5F 		.ascii	"PWM_2_WriteCompareBuf\000"
 3253      325F5772 
 3253      69746543 
 3253      6F6D7061 
 3253      72654275 
 3254              	.LASF46:
 3255 021f 50574D5F 		.ascii	"PWM_2_ReadPeriod\000"
 3255      325F5265 
 3255      61645065 
 3255      72696F64 
 3255      00
 3256              	.LASF18:
 3257 0230 50574D5F 		.ascii	"PWM_2_Enable\000"
 3257      325F456E 
 3257      61626C65 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 85


 3257      00
 3258              	.LASF37:
 3259 023d 50574D5F 		.ascii	"PWM_2_SetPWMInvert\000"
 3259      325F5365 
 3259      7450574D 
 3259      496E7665 
 3259      727400
 3260              	.LASF14:
 3261 0250 72656733 		.ascii	"reg32\000"
 3261      3200
 3262              	.LASF64:
 3263 0256 50574D5F 		.ascii	"PWM_2_SetStartMode\000"
 3263      325F5365 
 3263      74537461 
 3263      72744D6F 
 3263      646500
 3264              	.LASF21:
 3265 0269 50574D5F 		.ascii	"PWM_2_SetMode\000"
 3265      325F5365 
 3265      744D6F64 
 3265      6500
 3266              	.LASF27:
 3267 0277 50574D5F 		.ascii	"PWM_2_SetOneShot\000"
 3267      325F5365 
 3267      744F6E65 
 3267      53686F74 
 3267      00
 3268              	.LASF15:
 3269 0288 73697A65 		.ascii	"sizetype\000"
 3269      74797065 
 3269      00
 3270              	.LASF32:
 3271 0291 73796E63 		.ascii	"syncKillEnable\000"
 3271      4B696C6C 
 3271      456E6162 
 3271      6C6500
 3272              	.LASF49:
 3273 02a0 50574D5F 		.ascii	"PWM_2_WritePeriodBuf\000"
 3273      325F5772 
 3273      69746550 
 3273      6572696F 
 3273      64427566 
 3274              	.LASF54:
 3275 02b5 636F6D70 		.ascii	"compare\000"
 3275      61726500 
 3276              	.LASF16:
 3277 02bd 50574D5F 		.ascii	"PWM_2_Init\000"
 3277      325F496E 
 3277      697400
 3278              	.LASF11:
 3279 02c8 666C6F61 		.ascii	"float\000"
 3279      7400
 3280              	.LASF26:
 3281 02ce 70726573 		.ascii	"prescaler\000"
 3281      63616C65 
 3281      7200
 3282              	.LASF29:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 86


 3283 02d8 50574D5F 		.ascii	"PWM_2_SetPWMMode\000"
 3283      325F5365 
 3283      7450574D 
 3283      4D6F6465 
 3283      00
 3284              	.LASF25:
 3285 02e9 50574D5F 		.ascii	"PWM_2_SetPrescaler\000"
 3285      325F5365 
 3285      74507265 
 3285      7363616C 
 3285      657200
 3286              	.LASF60:
 3287 02fc 50574D5F 		.ascii	"PWM_2_ReadCaptureBuf\000"
 3287      325F5265 
 3287      61644361 
 3287      70747572 
 3287      65427566 
 3288              	.LASF1:
 3289 0311 756E7369 		.ascii	"unsigned char\000"
 3289      676E6564 
 3289      20636861 
 3289      7200
 3290              	.LASF33:
 3291 031f 50574D5F 		.ascii	"PWM_2_SetPWMStopOnKill\000"
 3291      325F5365 
 3291      7450574D 
 3291      53746F70 
 3291      4F6E4B69 
 3292              	.LASF34:
 3293 0336 73746F70 		.ascii	"stopOnKillEnable\000"
 3293      4F6E4B69 
 3293      6C6C456E 
 3293      61626C65 
 3293      00
 3294              	.LASF2:
 3295 0347 73686F72 		.ascii	"short int\000"
 3295      7420696E 
 3295      7400
 3296              	.LASF22:
 3297 0351 50574D5F 		.ascii	"PWM_2_SetQDMode\000"
 3297      325F5365 
 3297      7451444D 
 3297      6F646500 
 3298              	.LASF55:
 3299 0361 50574D5F 		.ascii	"PWM_2_ReadCompare\000"
 3299      325F5265 
 3299      6164436F 
 3299      6D706172 
 3299      6500
 3300              	.LASF71:
 3301 0373 696E7465 		.ascii	"interruptMask\000"
 3301      72727570 
 3301      744D6173 
 3301      6B00
 3302              	.LASF75:
 3303 0381 50574D5F 		.ascii	"PWM_2_SetInterrupt\000"
 3303      325F5365 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 87


 3303      74496E74 
 3303      65727275 
 3303      707400
 3304              	.LASF13:
 3305 0394 63686172 		.ascii	"char\000"
 3305      00
 3306              	.LASF23:
 3307 0399 6D6F6465 		.ascii	"mode\000"
 3307      00
 3308              	.LASF41:
 3309 039e 50574D5F 		.ascii	"PWM_2_SetCounterMode\000"
 3309      325F5365 
 3309      74436F75 
 3309      6E746572 
 3309      4D6F6465 
 3310              	.LASF42:
 3311 03b3 636F756E 		.ascii	"counterMode\000"
 3311      7465724D 
 3311      6F646500 
 3312              	.LASF48:
 3313 03bf 73776170 		.ascii	"swapEnable\000"
 3313      456E6162 
 3313      6C6500
 3314              	.LASF45:
 3315 03ca 50574D5F 		.ascii	"PWM_2_ReadCounter\000"
 3315      325F5265 
 3315      6164436F 
 3315      756E7465 
 3315      7200
 3316              	.LASF57:
 3317 03dc 636F6D70 		.ascii	"compareBuf\000"
 3317      61726542 
 3317      756600
 3318              	.LASF69:
 3319 03e7 50574D5F 		.ascii	"PWM_2_ReadStatus\000"
 3319      325F5265 
 3319      61645374 
 3319      61747573 
 3319      00
 3320              	.LASF20:
 3321 03f8 656E6162 		.ascii	"enableInterrupts\000"
 3321      6C65496E 
 3321      74657272 
 3321      75707473 
 3321      00
 3322              	.LASF70:
 3323 0409 50574D5F 		.ascii	"PWM_2_SetInterruptMode\000"
 3323      325F5365 
 3323      74496E74 
 3323      65727275 
 3323      70744D6F 
 3324              	.LASF77:
 3325 0420 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_2.c\000"
 3325      72617465 
 3325      645F536F 
 3325      75726365 
 3325      5C50536F 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 88


 3326              	.LASF61:
 3327 043f 50574D5F 		.ascii	"PWM_2_SetCaptureMode\000"
 3327      325F5365 
 3327      74436170 
 3327      74757265 
 3327      4D6F6465 
 3328              	.LASF72:
 3329 0454 50574D5F 		.ascii	"PWM_2_GetInterruptSourceMasked\000"
 3329      325F4765 
 3329      74496E74 
 3329      65727275 
 3329      7074536F 
 3330              	.LASF76:
 3331 0473 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3331      4320342E 
 3331      392E3320 
 3331      32303135 
 3331      30333033 
 3332 04a6 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3332      20726576 
 3332      6973696F 
 3332      6E203232 
 3332      31323230 
 3333 04d9 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3333      66756E63 
 3333      74696F6E 
 3333      2D736563 
 3333      74696F6E 
 3334              	.LASF78:
 3335 0501 433A5C55 		.ascii	"C:\\Users\\Shahil Zhangada\\OneDrive\\Spring 2017\\"
 3335      73657273 
 3335      5C536861 
 3335      68696C20 
 3335      5A68616E 
 3336 052f 4D656368 		.ascii	"Mech Eng 135\\KIT042_Accelerometer_LightPaint.cydsn"
 3336      20456E67 
 3336      20313335 
 3336      5C4B4954 
 3336      3034325F 
 3337 0561 00       		.ascii	"\000"
 3338              	.LASF73:
 3339 0562 50574D5F 		.ascii	"PWM_2_GetInterruptSource\000"
 3339      325F4765 
 3339      74496E74 
 3339      65727275 
 3339      7074536F 
 3340              	.LASF50:
 3341 057b 70657269 		.ascii	"periodBuf\000"
 3341      6F644275 
 3341      6600
 3342              	.LASF65:
 3343 0585 50574D5F 		.ascii	"PWM_2_SetStopMode\000"
 3343      325F5365 
 3343      7453746F 
 3343      704D6F64 
 3343      6500
 3344              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccTPhW0S.s 			page 89


