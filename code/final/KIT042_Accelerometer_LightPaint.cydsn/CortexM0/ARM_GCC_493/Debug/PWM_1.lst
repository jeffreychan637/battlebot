ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"PWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	PWM_1_initVar
  18              		.bss
  19              		.type	PWM_1_initVar, %object
  20              		.size	PWM_1_initVar, 1
  21              	PWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.PWM_1_Start,"ax",%progbits
  24              		.align	2
  25              		.global	PWM_1_Start
  26              		.code	16
  27              		.thumb_func
  28              		.type	PWM_1_Start, %function
  29              	PWM_1_Start:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC4\\PWM_1.c"
   1:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/PWM_1.c **** * File Name: PWM_1.c
   3:Generated_Source\PSoC4/PWM_1.c **** * Version 3.30
   4:Generated_Source\PSoC4/PWM_1.c **** *
   5:Generated_Source\PSoC4/PWM_1.c **** * Description:
   6:Generated_Source\PSoC4/PWM_1.c **** *  The PWM User Module consist of an 8 or 16-bit counter with two 8 or 16-bit
   7:Generated_Source\PSoC4/PWM_1.c **** *  comparitors. Each instance of this user module is capable of generating
   8:Generated_Source\PSoC4/PWM_1.c **** *  two PWM outputs with the same period. The pulse width is selectable between
   9:Generated_Source\PSoC4/PWM_1.c **** *  1 and 255/65535. The period is selectable between 2 and 255/65536 clocks.
  10:Generated_Source\PSoC4/PWM_1.c **** *  The compare value output may be configured to be active when the present
  11:Generated_Source\PSoC4/PWM_1.c **** *  counter is less than or less than/equal to the compare value.
  12:Generated_Source\PSoC4/PWM_1.c **** *  A terminal count output is also provided. It generates a pulse one clock
  13:Generated_Source\PSoC4/PWM_1.c **** *  width wide when the counter is equal to zero.
  14:Generated_Source\PSoC4/PWM_1.c **** *
  15:Generated_Source\PSoC4/PWM_1.c **** * Note:
  16:Generated_Source\PSoC4/PWM_1.c **** *
  17:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************
  18:Generated_Source\PSoC4/PWM_1.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC4/PWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC4/PWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC4/PWM_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC4/PWM_1.c **** 
  24:Generated_Source\PSoC4/PWM_1.c **** #include "PWM_1.h"
  25:Generated_Source\PSoC4/PWM_1.c **** 
  26:Generated_Source\PSoC4/PWM_1.c **** /* Error message for removed <resource> through optimization */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 2


  27:Generated_Source\PSoC4/PWM_1.c **** #ifdef PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED
  28:Generated_Source\PSoC4/PWM_1.c ****     #error PWM_v3_30 detected with a constant 0 for the enable or \
  29:Generated_Source\PSoC4/PWM_1.c ****          constant 1 for reset. This will prevent the component from operating.
  30:Generated_Source\PSoC4/PWM_1.c **** #endif /* PWM_1_PWMUDB_genblk1_ctrlreg__REMOVED */
  31:Generated_Source\PSoC4/PWM_1.c **** 
  32:Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_initVar = 0u;
  33:Generated_Source\PSoC4/PWM_1.c **** 
  34:Generated_Source\PSoC4/PWM_1.c **** 
  35:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  36:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Start
  37:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  38:Generated_Source\PSoC4/PWM_1.c **** *
  39:Generated_Source\PSoC4/PWM_1.c **** * Summary:
  40:Generated_Source\PSoC4/PWM_1.c **** *  The start function initializes the pwm with the default values, the
  41:Generated_Source\PSoC4/PWM_1.c **** *  enables the counter to begin counting.  It does not enable interrupts,
  42:Generated_Source\PSoC4/PWM_1.c **** *  the EnableInt command should be called if interrupt generation is required.
  43:Generated_Source\PSoC4/PWM_1.c **** *
  44:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  45:Generated_Source\PSoC4/PWM_1.c **** *  None
  46:Generated_Source\PSoC4/PWM_1.c **** *
  47:Generated_Source\PSoC4/PWM_1.c **** * Return:
  48:Generated_Source\PSoC4/PWM_1.c **** *  None
  49:Generated_Source\PSoC4/PWM_1.c **** *
  50:Generated_Source\PSoC4/PWM_1.c **** * Global variables:
  51:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_initVar: Is modified when this function is called for the
  52:Generated_Source\PSoC4/PWM_1.c **** *   first time. Is used to ensure that initialization happens only once.
  53:Generated_Source\PSoC4/PWM_1.c **** *
  54:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  55:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Start(void) 
  56:Generated_Source\PSoC4/PWM_1.c **** {
  32              		.loc 1 56 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  57:Generated_Source\PSoC4/PWM_1.c ****     /* If not Initialized then initialize all required hardware and software */
  58:Generated_Source\PSoC4/PWM_1.c ****     if(PWM_1_initVar == 0u)
  40              		.loc 1 58 0
  41 0004 064B     		ldr	r3, .L3
  42 0006 1B78     		ldrb	r3, [r3]
  43 0008 002B     		cmp	r3, #0
  44 000a 04D1     		bne	.L2
  59:Generated_Source\PSoC4/PWM_1.c ****     {
  60:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_Init();
  45              		.loc 1 60 0
  46 000c FFF7FEFF 		bl	PWM_1_Init
  61:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_initVar = 1u;
  47              		.loc 1 61 0
  48 0010 034B     		ldr	r3, .L3
  49 0012 0122     		mov	r2, #1
  50 0014 1A70     		strb	r2, [r3]
  51              	.L2:
  62:Generated_Source\PSoC4/PWM_1.c ****     }
  63:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_Enable();
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 3


  52              		.loc 1 63 0
  53 0016 FFF7FEFF 		bl	PWM_1_Enable
  64:Generated_Source\PSoC4/PWM_1.c **** 
  65:Generated_Source\PSoC4/PWM_1.c **** }
  54              		.loc 1 65 0
  55 001a BD46     		mov	sp, r7
  56              		@ sp needed
  57 001c 80BD     		pop	{r7, pc}
  58              	.L4:
  59 001e C046     		.align	2
  60              	.L3:
  61 0020 00000000 		.word	PWM_1_initVar
  62              		.cfi_endproc
  63              	.LFE0:
  64              		.size	PWM_1_Start, .-PWM_1_Start
  65              		.section	.text.PWM_1_Init,"ax",%progbits
  66              		.align	2
  67              		.global	PWM_1_Init
  68              		.code	16
  69              		.thumb_func
  70              		.type	PWM_1_Init, %function
  71              	PWM_1_Init:
  72              	.LFB1:
  66:Generated_Source\PSoC4/PWM_1.c **** 
  67:Generated_Source\PSoC4/PWM_1.c **** 
  68:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
  69:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Init
  70:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
  71:Generated_Source\PSoC4/PWM_1.c **** *
  72:Generated_Source\PSoC4/PWM_1.c **** * Summary:
  73:Generated_Source\PSoC4/PWM_1.c **** *  Initialize component's parameters to the parameters set by user in the
  74:Generated_Source\PSoC4/PWM_1.c **** *  customizer of the component placed onto schematic. Usually called in
  75:Generated_Source\PSoC4/PWM_1.c **** *  PWM_1_Start().
  76:Generated_Source\PSoC4/PWM_1.c **** *
  77:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
  78:Generated_Source\PSoC4/PWM_1.c **** *  None
  79:Generated_Source\PSoC4/PWM_1.c **** *
  80:Generated_Source\PSoC4/PWM_1.c **** * Return:
  81:Generated_Source\PSoC4/PWM_1.c **** *  None
  82:Generated_Source\PSoC4/PWM_1.c **** *
  83:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
  84:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Init(void) 
  85:Generated_Source\PSoC4/PWM_1.c **** {
  73              		.loc 1 85 0
  74              		.cfi_startproc
  75 0000 90B5     		push	{r4, r7, lr}
  76              		.cfi_def_cfa_offset 12
  77              		.cfi_offset 4, -12
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 83B0     		sub	sp, sp, #12
  81              		.cfi_def_cfa_offset 24
  82 0004 00AF     		add	r7, sp, #0
  83              		.cfi_def_cfa_register 7
  86:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction || PWM_1_UseControl)
  87:Generated_Source\PSoC4/PWM_1.c ****         uint8 ctrl;
  88:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction || PWM_1_UseControl) */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 4


  89:Generated_Source\PSoC4/PWM_1.c **** 
  90:Generated_Source\PSoC4/PWM_1.c ****     #if(!PWM_1_UsingFixedFunction)
  91:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
  92:Generated_Source\PSoC4/PWM_1.c ****             /* Interrupt State Backup for Critical Region*/
  93:Generated_Source\PSoC4/PWM_1.c ****             uint8 PWM_1_interruptState;
  94:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
  95:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
  96:Generated_Source\PSoC4/PWM_1.c **** 
  97:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
  98:Generated_Source\PSoC4/PWM_1.c ****         /* You are allowed to write the compare value (FF only) */
  99:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CFG0_MODE;
 100:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBand2_4)
 101:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= PWM_1_CFG0_DB;
 102:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBand2_4) */
 103:Generated_Source\PSoC4/PWM_1.c **** 
 104:Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL3 & ((uint8 )(~PWM_1_CTRL_CMPMODE1_MASK));
 105:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL3 = ctrl | PWM_1_DEFAULT_COMPARE1_MODE;
 106:Generated_Source\PSoC4/PWM_1.c **** 
 107:Generated_Source\PSoC4/PWM_1.c ****          /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 108:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_RT1_MASK));
 109:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNC;
 110:Generated_Source\PSoC4/PWM_1.c **** 
 111:Generated_Source\PSoC4/PWM_1.c ****         /*Enable DSI Sync all all inputs of the PWM*/
 112:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 &= ((uint8)(~PWM_1_SYNCDSI_MASK));
 113:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_RT1 |= PWM_1_SYNCDSI_EN;
 114:Generated_Source\PSoC4/PWM_1.c **** 
 115:Generated_Source\PSoC4/PWM_1.c ****     #elif (PWM_1_UseControl)
 116:Generated_Source\PSoC4/PWM_1.c ****         /* Set the default compare mode defined in the parameter */
 117:Generated_Source\PSoC4/PWM_1.c ****         ctrl = PWM_1_CONTROL & ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)) &
  84              		.loc 1 117 0
  85 0006 1E4B     		ldr	r3, .L6
  86 0008 1B78     		ldrb	r3, [r3]
  87 000a DAB2     		uxtb	r2, r3
  88 000c FB1D     		add	r3, r7, #7
  89 000e 3F21     		mov	r1, #63
  90 0010 8A43     		bic	r2, r1
  91 0012 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC4/PWM_1.c ****                 ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK));
 119:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL = ctrl | PWM_1_DEFAULT_COMPARE2_MODE |
  92              		.loc 1 119 0
  93 0014 1A4A     		ldr	r2, .L6
  94 0016 FB1D     		add	r3, r7, #7
  95 0018 1B78     		ldrb	r3, [r3]
  96 001a 0921     		mov	r1, #9
  97 001c 0B43     		orr	r3, r1
  98 001e DBB2     		uxtb	r3, r3
  99 0020 1370     		strb	r3, [r2]
 120:Generated_Source\PSoC4/PWM_1.c ****                                    PWM_1_DEFAULT_COMPARE1_MODE;
 121:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 122:Generated_Source\PSoC4/PWM_1.c **** 
 123:Generated_Source\PSoC4/PWM_1.c ****     #if (!PWM_1_UsingFixedFunction)
 124:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_Resolution == 8)
 125:Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period*/
 126:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 100              		.loc 1 126 0
 101 0022 184A     		ldr	r2, .L6+4
 102 0024 174B     		ldr	r3, .L6+4
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 5


 103 0026 1B78     		ldrb	r3, [r3]
 104 0028 DBB2     		uxtb	r3, r3
 105 002a 0121     		mov	r1, #1
 106 002c 0B43     		orr	r3, r1
 107 002e DBB2     		uxtb	r3, r3
 108 0030 1370     		strb	r3, [r2]
 127:Generated_Source\PSoC4/PWM_1.c ****         #else /* (PWM_1_Resolution == 16)*/
 128:Generated_Source\PSoC4/PWM_1.c ****             /* Set FIFO 0 to 1 byte register for period */
 129:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP0 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 130:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_AUX_CONTROLDP1 |= (PWM_1_AUX_CTRL_FIFO0_CLR);
 131:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_Resolution == 8) */
 132:Generated_Source\PSoC4/PWM_1.c **** 
 133:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_WriteCounter(PWM_1_INIT_PERIOD_VALUE);
 109              		.loc 1 133 0
 110 0032 FF20     		mov	r0, #255
 111 0034 FFF7FEFF 		bl	PWM_1_WriteCounter
 134:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (!PWM_1_UsingFixedFunction) */
 135:Generated_Source\PSoC4/PWM_1.c **** 
 136:Generated_Source\PSoC4/PWM_1.c ****     PWM_1_WritePeriod(PWM_1_INIT_PERIOD_VALUE);
 112              		.loc 1 136 0
 113 0038 FF20     		mov	r0, #255
 114 003a FFF7FEFF 		bl	PWM_1_WritePeriod
 137:Generated_Source\PSoC4/PWM_1.c **** 
 138:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseOneCompareMode)
 139:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare(PWM_1_INIT_COMPARE_VALUE1);
 140:Generated_Source\PSoC4/PWM_1.c ****         #else
 141:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare1(PWM_1_INIT_COMPARE_VALUE1);
 115              		.loc 1 141 0
 116 003e 7F20     		mov	r0, #127
 117 0040 FFF7FEFF 		bl	PWM_1_WriteCompare1
 142:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteCompare2(PWM_1_INIT_COMPARE_VALUE2);
 118              		.loc 1 142 0
 119 0044 3F20     		mov	r0, #63
 120 0046 FFF7FEFF 		bl	PWM_1_WriteCompare2
 143:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseOneCompareMode) */
 144:Generated_Source\PSoC4/PWM_1.c **** 
 145:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_KillModeMinTime)
 146:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteKillTime(PWM_1_MinimumKillTime);
 147:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_KillModeMinTime) */
 148:Generated_Source\PSoC4/PWM_1.c **** 
 149:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_DeadBandUsed)
 150:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_WriteDeadTime(PWM_1_INIT_DEAD_TIME);
 151:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_DeadBandUsed) */
 152:Generated_Source\PSoC4/PWM_1.c **** 
 153:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 154:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_SetInterruptMode(PWM_1_INIT_INTERRUPTS_MODE);
 121              		.loc 1 154 0
 122 004a 0020     		mov	r0, #0
 123 004c FFF7FEFF 		bl	PWM_1_SetInterruptMode
 155:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 156:Generated_Source\PSoC4/PWM_1.c **** 
 157:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 158:Generated_Source\PSoC4/PWM_1.c ****         /* Globally Enable the Fixed Function Block chosen */
 159:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 160:Generated_Source\PSoC4/PWM_1.c ****         /* Set the Interrupt source to come from the status register */
 161:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL2 |= PWM_1_CTRL2_IRQ_SEL;
 162:Generated_Source\PSoC4/PWM_1.c ****     #else
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 6


 163:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UseStatus)
 164:Generated_Source\PSoC4/PWM_1.c **** 
 165:Generated_Source\PSoC4/PWM_1.c ****             /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region cri
 166:Generated_Source\PSoC4/PWM_1.c ****             /* Enter Critical Region*/
 167:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_interruptState = CyEnterCriticalSection();
 124              		.loc 1 167 0
 125 0050 BC1D     		add	r4, r7, #6
 126 0052 FFF7FEFF 		bl	CyEnterCriticalSection
 127 0056 031C     		mov	r3, r0
 128 0058 2370     		strb	r3, [r4]
 168:Generated_Source\PSoC4/PWM_1.c ****             /* Use the interrupt output of the status register for IRQ output */
 169:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_STATUS_AUX_CTRL |= PWM_1_STATUS_ACTL_INT_EN_MASK;
 129              		.loc 1 169 0
 130 005a 0A4A     		ldr	r2, .L6+4
 131 005c 094B     		ldr	r3, .L6+4
 132 005e 1B78     		ldrb	r3, [r3]
 133 0060 DBB2     		uxtb	r3, r3
 134 0062 1021     		mov	r1, #16
 135 0064 0B43     		orr	r3, r1
 136 0066 DBB2     		uxtb	r3, r3
 137 0068 1370     		strb	r3, [r2]
 170:Generated_Source\PSoC4/PWM_1.c **** 
 171:Generated_Source\PSoC4/PWM_1.c ****              /* Exit Critical Region*/
 172:Generated_Source\PSoC4/PWM_1.c ****             CyExitCriticalSection(PWM_1_interruptState);
 138              		.loc 1 172 0
 139 006a BB1D     		add	r3, r7, #6
 140 006c 1B78     		ldrb	r3, [r3]
 141 006e 181C     		mov	r0, r3
 142 0070 FFF7FEFF 		bl	CyExitCriticalSection
 173:Generated_Source\PSoC4/PWM_1.c **** 
 174:Generated_Source\PSoC4/PWM_1.c ****             /* Clear the FIFO to enable the PWM_1_STATUS_FIFOFULL
 175:Generated_Source\PSoC4/PWM_1.c ****                    bit to be set on FIFO full. */
 176:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_ClearFIFO();
 143              		.loc 1 176 0
 144 0074 FFF7FEFF 		bl	PWM_1_ClearFIFO
 177:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseStatus) */
 178:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 179:Generated_Source\PSoC4/PWM_1.c **** }
 145              		.loc 1 179 0
 146 0078 BD46     		mov	sp, r7
 147 007a 03B0     		add	sp, sp, #12
 148              		@ sp needed
 149 007c 90BD     		pop	{r4, r7, pc}
 150              	.L7:
 151 007e C046     		.align	2
 152              	.L6:
 153 0080 71000F40 		.word	1074724977
 154 0084 91000F40 		.word	1074725009
 155              		.cfi_endproc
 156              	.LFE1:
 157              		.size	PWM_1_Init, .-PWM_1_Init
 158              		.section	.text.PWM_1_Enable,"ax",%progbits
 159              		.align	2
 160              		.global	PWM_1_Enable
 161              		.code	16
 162              		.thumb_func
 163              		.type	PWM_1_Enable, %function
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 7


 164              	PWM_1_Enable:
 165              	.LFB2:
 180:Generated_Source\PSoC4/PWM_1.c **** 
 181:Generated_Source\PSoC4/PWM_1.c **** 
 182:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 183:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Enable
 184:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 185:Generated_Source\PSoC4/PWM_1.c **** *
 186:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 187:Generated_Source\PSoC4/PWM_1.c **** *  Enables the PWM block operation
 188:Generated_Source\PSoC4/PWM_1.c **** *
 189:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 190:Generated_Source\PSoC4/PWM_1.c **** *  None
 191:Generated_Source\PSoC4/PWM_1.c **** *
 192:Generated_Source\PSoC4/PWM_1.c **** * Return:
 193:Generated_Source\PSoC4/PWM_1.c **** *  None
 194:Generated_Source\PSoC4/PWM_1.c **** *
 195:Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 196:Generated_Source\PSoC4/PWM_1.c **** *  This works only if software enable mode is chosen
 197:Generated_Source\PSoC4/PWM_1.c **** *
 198:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 199:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Enable(void) 
 200:Generated_Source\PSoC4/PWM_1.c **** {
 166              		.loc 1 200 0
 167              		.cfi_startproc
 168 0000 80B5     		push	{r7, lr}
 169              		.cfi_def_cfa_offset 8
 170              		.cfi_offset 7, -8
 171              		.cfi_offset 14, -4
 172 0002 00AF     		add	r7, sp, #0
 173              		.cfi_def_cfa_register 7
 201:Generated_Source\PSoC4/PWM_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 202:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 203:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE |= PWM_1_BLOCK_EN_MASK;
 204:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE |= PWM_1_BLOCK_STBY_EN_MASK;
 205:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 206:Generated_Source\PSoC4/PWM_1.c **** 
 207:Generated_Source\PSoC4/PWM_1.c ****     /* Enable the PWM from the control register  */
 208:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 209:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL |= PWM_1_CTRL_ENABLE;
 174              		.loc 1 209 0
 175 0004 0549     		ldr	r1, .L9
 176 0006 054B     		ldr	r3, .L9
 177 0008 1B78     		ldrb	r3, [r3]
 178 000a DBB2     		uxtb	r3, r3
 179 000c 8022     		mov	r2, #128
 180 000e 5242     		neg	r2, r2
 181 0010 1343     		orr	r3, r2
 182 0012 DBB2     		uxtb	r3, r3
 183 0014 0B70     		strb	r3, [r1]
 210:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
 211:Generated_Source\PSoC4/PWM_1.c **** }
 184              		.loc 1 211 0
 185 0016 BD46     		mov	sp, r7
 186              		@ sp needed
 187 0018 80BD     		pop	{r7, pc}
 188              	.L10:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 8


 189 001a C046     		.align	2
 190              	.L9:
 191 001c 71000F40 		.word	1074724977
 192              		.cfi_endproc
 193              	.LFE2:
 194              		.size	PWM_1_Enable, .-PWM_1_Enable
 195              		.section	.text.PWM_1_Stop,"ax",%progbits
 196              		.align	2
 197              		.global	PWM_1_Stop
 198              		.code	16
 199              		.thumb_func
 200              		.type	PWM_1_Stop, %function
 201              	PWM_1_Stop:
 202              	.LFB3:
 212:Generated_Source\PSoC4/PWM_1.c **** 
 213:Generated_Source\PSoC4/PWM_1.c **** 
 214:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 215:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_Stop
 216:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 217:Generated_Source\PSoC4/PWM_1.c **** *
 218:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 219:Generated_Source\PSoC4/PWM_1.c **** *  The stop function halts the PWM, but does not change any modes or disable
 220:Generated_Source\PSoC4/PWM_1.c **** *  interrupts.
 221:Generated_Source\PSoC4/PWM_1.c **** *
 222:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 223:Generated_Source\PSoC4/PWM_1.c **** *  None
 224:Generated_Source\PSoC4/PWM_1.c **** *
 225:Generated_Source\PSoC4/PWM_1.c **** * Return:
 226:Generated_Source\PSoC4/PWM_1.c **** *  None
 227:Generated_Source\PSoC4/PWM_1.c **** *
 228:Generated_Source\PSoC4/PWM_1.c **** * Side Effects:
 229:Generated_Source\PSoC4/PWM_1.c **** *  If the Enable mode is set to Hardware only then this function
 230:Generated_Source\PSoC4/PWM_1.c **** *  has no effect on the operation of the PWM
 231:Generated_Source\PSoC4/PWM_1.c **** *
 232:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_Stop(void) 
 234:Generated_Source\PSoC4/PWM_1.c **** {
 203              		.loc 1 234 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 00AF     		add	r7, sp, #0
 210              		.cfi_def_cfa_register 7
 235:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseControl || PWM_1_UsingFixedFunction)
 236:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_ENABLE));
 211              		.loc 1 236 0
 212 0004 044A     		ldr	r2, .L12
 213 0006 044B     		ldr	r3, .L12
 214 0008 1B78     		ldrb	r3, [r3]
 215 000a DBB2     		uxtb	r3, r3
 216 000c 7F21     		mov	r1, #127
 217 000e 0B40     		and	r3, r1
 218 0010 DBB2     		uxtb	r3, r3
 219 0012 1370     		strb	r3, [r2]
 237:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UseControl || PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 9


 238:Generated_Source\PSoC4/PWM_1.c **** 
 239:Generated_Source\PSoC4/PWM_1.c ****     /* Globally disable the Fixed Function Block chosen */
 240:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UsingFixedFunction)
 241:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_ENABLE &= ((uint8)(~PWM_1_BLOCK_EN_MASK));
 242:Generated_Source\PSoC4/PWM_1.c ****         PWM_1_GLOBAL_STBY_ENABLE &= ((uint8)(~PWM_1_BLOCK_STBY_EN_MASK));
 243:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 244:Generated_Source\PSoC4/PWM_1.c **** }
 220              		.loc 1 244 0
 221 0014 BD46     		mov	sp, r7
 222              		@ sp needed
 223 0016 80BD     		pop	{r7, pc}
 224              	.L13:
 225              		.align	2
 226              	.L12:
 227 0018 71000F40 		.word	1074724977
 228              		.cfi_endproc
 229              	.LFE3:
 230              		.size	PWM_1_Stop, .-PWM_1_Stop
 231              		.section	.text.PWM_1_WriteCounter,"ax",%progbits
 232              		.align	2
 233              		.global	PWM_1_WriteCounter
 234              		.code	16
 235              		.thumb_func
 236              		.type	PWM_1_WriteCounter, %function
 237              	PWM_1_WriteCounter:
 238              	.LFB4:
 245:Generated_Source\PSoC4/PWM_1.c **** 
 246:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 247:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 248:Generated_Source\PSoC4/PWM_1.c **** 
 249:Generated_Source\PSoC4/PWM_1.c **** 
 250:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 251:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode
 252:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 253:Generated_Source\PSoC4/PWM_1.c ****         *
 254:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 255:Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm output when in Dither mode,
 256:Generated_Source\PSoC4/PWM_1.c ****         *  Center Align Mode or One Output Mode.
 257:Generated_Source\PSoC4/PWM_1.c ****         *
 258:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 259:Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 260:Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 261:Generated_Source\PSoC4/PWM_1.c ****         *
 262:Generated_Source\PSoC4/PWM_1.c ****         * Return:
 263:Generated_Source\PSoC4/PWM_1.c ****         *  None
 264:Generated_Source\PSoC4/PWM_1.c ****         *
 265:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 266:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode(uint8 comparemode) 
 267:Generated_Source\PSoC4/PWM_1.c ****         {
 268:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 269:Generated_Source\PSoC4/PWM_1.c **** 
 270:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 271:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SH
 272:Generated_Source\PSoC4/PWM_1.c ****                 #else
 273:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemodemasked = comparemode;
 274:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 275:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 10


 276:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear Existing Data */
 277:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL3 |= comparemodemasked;
 278:Generated_Source\PSoC4/PWM_1.c **** 
 279:Generated_Source\PSoC4/PWM_1.c ****             #elif (PWM_1_UseControl)
 280:Generated_Source\PSoC4/PWM_1.c **** 
 281:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 282:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_S
 283:Generated_Source\PSoC4/PWM_1.c ****                                                 PWM_1_CTRL_CMPMODE1_MASK;
 284:Generated_Source\PSoC4/PWM_1.c ****                 #else
 285:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode1masked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
 286:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 287:Generated_Source\PSoC4/PWM_1.c **** 
 288:Generated_Source\PSoC4/PWM_1.c ****                 #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 289:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_S
 290:Generated_Source\PSoC4/PWM_1.c ****                                                PWM_1_CTRL_CMPMODE2_MASK;
 291:Generated_Source\PSoC4/PWM_1.c ****                 #else
 292:Generated_Source\PSoC4/PWM_1.c ****                     uint8 comparemode2masked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 293:Generated_Source\PSoC4/PWM_1.c ****                 #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 294:Generated_Source\PSoC4/PWM_1.c **** 
 295:Generated_Source\PSoC4/PWM_1.c ****                 /*Clear existing mode */
 296:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~(PWM_1_CTRL_CMPMODE1_MASK |
 297:Generated_Source\PSoC4/PWM_1.c ****                                             PWM_1_CTRL_CMPMODE2_MASK)));
 298:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= (comparemode1masked | comparemode2masked);
 299:Generated_Source\PSoC4/PWM_1.c **** 
 300:Generated_Source\PSoC4/PWM_1.c ****             #else
 301:Generated_Source\PSoC4/PWM_1.c ****                 uint8 temp = comparemode;
 302:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 303:Generated_Source\PSoC4/PWM_1.c ****         }
 304:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 305:Generated_Source\PSoC4/PWM_1.c **** 
 306:Generated_Source\PSoC4/PWM_1.c **** #else /* UseOneCompareMode */
 307:Generated_Source\PSoC4/PWM_1.c **** 
 308:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_CompareMode1SW)
 309:Generated_Source\PSoC4/PWM_1.c **** 
 310:Generated_Source\PSoC4/PWM_1.c **** 
 311:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 312:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_SetCompareMode1
 313:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 314:Generated_Source\PSoC4/PWM_1.c ****         *
 315:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 316:Generated_Source\PSoC4/PWM_1.c ****         *  This function writes the Compare Mode for the pwm or pwm1 output
 317:Generated_Source\PSoC4/PWM_1.c ****         *
 318:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 319:Generated_Source\PSoC4/PWM_1.c ****         *  comparemode:  The new compare mode for the PWM output. Use the compare types
 320:Generated_Source\PSoC4/PWM_1.c ****         *                defined in the H file as input arguments.
 321:Generated_Source\PSoC4/PWM_1.c ****         *
 322:Generated_Source\PSoC4/PWM_1.c ****         * Return:
 323:Generated_Source\PSoC4/PWM_1.c ****         *  None
 324:Generated_Source\PSoC4/PWM_1.c ****         *
 325:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 326:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_SetCompareMode1(uint8 comparemode) 
 327:Generated_Source\PSoC4/PWM_1.c ****         {
 328:Generated_Source\PSoC4/PWM_1.c ****             #if(0 != PWM_1_CTRL_CMPMODE1_SHIFT)
 329:Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE1_SHIFT)
 330:Generated_Source\PSoC4/PWM_1.c ****                                            PWM_1_CTRL_CMPMODE1_MASK;
 331:Generated_Source\PSoC4/PWM_1.c ****             #else
 332:Generated_Source\PSoC4/PWM_1.c ****                 uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE1_MASK;
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 11


 333:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (0 != PWM_1_CTRL_CMPMODE1_SHIFT) */
 334:Generated_Source\PSoC4/PWM_1.c **** 
 335:Generated_Source\PSoC4/PWM_1.c ****             #if (PWM_1_UseControl)
 336:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE1_MASK)); /*Clear existing mode */
 337:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_CONTROL |= comparemodemasked;
 338:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UseControl) */
 339:Generated_Source\PSoC4/PWM_1.c ****         }
 340:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_CompareMode1SW */
 341:Generated_Source\PSoC4/PWM_1.c **** 
 342:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_CompareMode2SW)
 343:Generated_Source\PSoC4/PWM_1.c **** 
 344:Generated_Source\PSoC4/PWM_1.c **** 
 345:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 346:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetCompareMode2
 347:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 348:Generated_Source\PSoC4/PWM_1.c ****     *
 349:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 350:Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the Compare Mode for the pwm or pwm2 output
 351:Generated_Source\PSoC4/PWM_1.c ****     *
 352:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 353:Generated_Source\PSoC4/PWM_1.c ****     *  comparemode:  The new compare mode for the PWM output. Use the compare types
 354:Generated_Source\PSoC4/PWM_1.c ****     *                defined in the H file as input arguments.
 355:Generated_Source\PSoC4/PWM_1.c ****     *
 356:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 357:Generated_Source\PSoC4/PWM_1.c ****     *  None
 358:Generated_Source\PSoC4/PWM_1.c ****     *
 359:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 360:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetCompareMode2(uint8 comparemode) 
 361:Generated_Source\PSoC4/PWM_1.c ****     {
 362:Generated_Source\PSoC4/PWM_1.c **** 
 363:Generated_Source\PSoC4/PWM_1.c ****         #if(0 != PWM_1_CTRL_CMPMODE2_SHIFT)
 364:Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = ((uint8)((uint8)comparemode << PWM_1_CTRL_CMPMODE2_SHIFT)) &
 365:Generated_Source\PSoC4/PWM_1.c ****                                                  PWM_1_CTRL_CMPMODE2_MASK;
 366:Generated_Source\PSoC4/PWM_1.c ****         #else
 367:Generated_Source\PSoC4/PWM_1.c ****             uint8 comparemodemasked = comparemode & PWM_1_CTRL_CMPMODE2_MASK;
 368:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (0 != PWM_1_CTRL_CMPMODE2_SHIFT) */
 369:Generated_Source\PSoC4/PWM_1.c **** 
 370:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_UseControl)
 371:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL &= ((uint8)(~PWM_1_CTRL_CMPMODE2_MASK)); /*Clear existing mode */
 372:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_CONTROL |= comparemodemasked;
 373:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UseControl) */
 374:Generated_Source\PSoC4/PWM_1.c ****     }
 375:Generated_Source\PSoC4/PWM_1.c ****     #endif /*PWM_1_CompareMode2SW */
 376:Generated_Source\PSoC4/PWM_1.c **** 
 377:Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 378:Generated_Source\PSoC4/PWM_1.c **** 
 379:Generated_Source\PSoC4/PWM_1.c **** 
 380:Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 381:Generated_Source\PSoC4/PWM_1.c **** 
 382:Generated_Source\PSoC4/PWM_1.c **** 
 383:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 384:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCounter
 385:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 386:Generated_Source\PSoC4/PWM_1.c ****     *
 387:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 388:Generated_Source\PSoC4/PWM_1.c ****     *  Writes a new counter value directly to the counter register. This will be
 389:Generated_Source\PSoC4/PWM_1.c ****     *  implemented for that currently running period and only that period. This API
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 12


 390:Generated_Source\PSoC4/PWM_1.c ****     *  is valid only for UDB implementation and not available for fixed function
 391:Generated_Source\PSoC4/PWM_1.c ****     *  PWM implementation.
 392:Generated_Source\PSoC4/PWM_1.c ****     *
 393:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 394:Generated_Source\PSoC4/PWM_1.c ****     *  counter:  The period new period counter value.
 395:Generated_Source\PSoC4/PWM_1.c ****     *
 396:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 397:Generated_Source\PSoC4/PWM_1.c ****     *  None
 398:Generated_Source\PSoC4/PWM_1.c ****     *
 399:Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 400:Generated_Source\PSoC4/PWM_1.c ****     *  The PWM Period will be reloaded when a counter value will be a zero
 401:Generated_Source\PSoC4/PWM_1.c ****     *
 402:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 403:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCounter(uint8 counter) \
 404:Generated_Source\PSoC4/PWM_1.c ****                                        
 405:Generated_Source\PSoC4/PWM_1.c ****     {
 239              		.loc 1 405 0
 240              		.cfi_startproc
 241 0000 80B5     		push	{r7, lr}
 242              		.cfi_def_cfa_offset 8
 243              		.cfi_offset 7, -8
 244              		.cfi_offset 14, -4
 245 0002 82B0     		sub	sp, sp, #8
 246              		.cfi_def_cfa_offset 16
 247 0004 00AF     		add	r7, sp, #0
 248              		.cfi_def_cfa_register 7
 249 0006 021C     		mov	r2, r0
 250 0008 FB1D     		add	r3, r7, #7
 251 000a 1A70     		strb	r2, [r3]
 406:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_COUNTER_LSB_PTR, counter);
 252              		.loc 1 406 0
 253 000c 034A     		ldr	r2, .L15
 254 000e FB1D     		add	r3, r7, #7
 255 0010 1B78     		ldrb	r3, [r3]
 256 0012 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC4/PWM_1.c ****     }
 257              		.loc 1 407 0
 258 0014 BD46     		mov	sp, r7
 259 0016 02B0     		add	sp, sp, #8
 260              		@ sp needed
 261 0018 80BD     		pop	{r7, pc}
 262              	.L16:
 263 001a C046     		.align	2
 264              	.L15:
 265 001c 01000F40 		.word	1074724865
 266              		.cfi_endproc
 267              	.LFE4:
 268              		.size	PWM_1_WriteCounter, .-PWM_1_WriteCounter
 269              		.section	.text.PWM_1_ReadCounter,"ax",%progbits
 270              		.align	2
 271              		.global	PWM_1_ReadCounter
 272              		.code	16
 273              		.thumb_func
 274              		.type	PWM_1_ReadCounter, %function
 275              	PWM_1_ReadCounter:
 276              	.LFB5:
 408:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 13


 409:Generated_Source\PSoC4/PWM_1.c **** 
 410:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 411:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCounter
 412:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 413:Generated_Source\PSoC4/PWM_1.c ****     *
 414:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 415:Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current value of the counter.  It doesn't matter
 416:Generated_Source\PSoC4/PWM_1.c ****     *  if the counter is enabled or running.
 417:Generated_Source\PSoC4/PWM_1.c ****     *
 418:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 419:Generated_Source\PSoC4/PWM_1.c ****     *  None
 420:Generated_Source\PSoC4/PWM_1.c ****     *
 421:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 422:Generated_Source\PSoC4/PWM_1.c ****     *  The current value of the counter.
 423:Generated_Source\PSoC4/PWM_1.c ****     *
 424:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 425:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCounter(void) 
 426:Generated_Source\PSoC4/PWM_1.c ****     {
 277              		.loc 1 426 0
 278              		.cfi_startproc
 279 0000 80B5     		push	{r7, lr}
 280              		.cfi_def_cfa_offset 8
 281              		.cfi_offset 7, -8
 282              		.cfi_offset 14, -4
 283 0002 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 427:Generated_Source\PSoC4/PWM_1.c ****         /* Force capture by reading Accumulator */
 428:Generated_Source\PSoC4/PWM_1.c ****         /* Must first do a software capture to be able to read the counter */
 429:Generated_Source\PSoC4/PWM_1.c ****         /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 430:Generated_Source\PSoC4/PWM_1.c ****           (void)CY_GET_REG8(PWM_1_COUNTERCAP_LSB_PTR_8BIT);
 285              		.loc 1 430 0
 286 0004 034B     		ldr	r3, .L19
 287 0006 1B78     		ldrb	r3, [r3]
 431:Generated_Source\PSoC4/PWM_1.c **** 
 432:Generated_Source\PSoC4/PWM_1.c ****         /* Read the data from the FIFO */
 433:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 288              		.loc 1 433 0
 289 0008 034B     		ldr	r3, .L19+4
 290 000a 1B78     		ldrb	r3, [r3]
 291 000c DBB2     		uxtb	r3, r3
 434:Generated_Source\PSoC4/PWM_1.c ****     }
 292              		.loc 1 434 0
 293 000e 181C     		mov	r0, r3
 294 0010 BD46     		mov	sp, r7
 295              		@ sp needed
 296 0012 80BD     		pop	{r7, pc}
 297              	.L20:
 298              		.align	2
 299              	.L19:
 300 0014 11000F40 		.word	1074724881
 301 0018 51000F40 		.word	1074724945
 302              		.cfi_endproc
 303              	.LFE5:
 304              		.size	PWM_1_ReadCounter, .-PWM_1_ReadCounter
 305              		.section	.text.PWM_1_ClearFIFO,"ax",%progbits
 306              		.align	2
 307              		.global	PWM_1_ClearFIFO
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 14


 308              		.code	16
 309              		.thumb_func
 310              		.type	PWM_1_ClearFIFO, %function
 311              	PWM_1_ClearFIFO:
 312              	.LFB6:
 435:Generated_Source\PSoC4/PWM_1.c **** 
 436:Generated_Source\PSoC4/PWM_1.c ****     #if (PWM_1_UseStatus)
 437:Generated_Source\PSoC4/PWM_1.c **** 
 438:Generated_Source\PSoC4/PWM_1.c **** 
 439:Generated_Source\PSoC4/PWM_1.c ****         /*******************************************************************************
 440:Generated_Source\PSoC4/PWM_1.c ****         * Function Name: PWM_1_ClearFIFO
 441:Generated_Source\PSoC4/PWM_1.c ****         ********************************************************************************
 442:Generated_Source\PSoC4/PWM_1.c ****         *
 443:Generated_Source\PSoC4/PWM_1.c ****         * Summary:
 444:Generated_Source\PSoC4/PWM_1.c ****         *  This function clears all capture data from the capture FIFO
 445:Generated_Source\PSoC4/PWM_1.c ****         *
 446:Generated_Source\PSoC4/PWM_1.c ****         * Parameters:
 447:Generated_Source\PSoC4/PWM_1.c ****         *  None
 448:Generated_Source\PSoC4/PWM_1.c ****         *
 449:Generated_Source\PSoC4/PWM_1.c ****         * Return:
 450:Generated_Source\PSoC4/PWM_1.c ****         *  None
 451:Generated_Source\PSoC4/PWM_1.c ****         *
 452:Generated_Source\PSoC4/PWM_1.c ****         *******************************************************************************/
 453:Generated_Source\PSoC4/PWM_1.c ****         void PWM_1_ClearFIFO(void) 
 454:Generated_Source\PSoC4/PWM_1.c ****         {
 313              		.loc 1 454 0
 314              		.cfi_startproc
 315 0000 80B5     		push	{r7, lr}
 316              		.cfi_def_cfa_offset 8
 317              		.cfi_offset 7, -8
 318              		.cfi_offset 14, -4
 319 0002 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
 455:Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 321              		.loc 1 455 0
 322 0004 01E0     		b	.L22
 323              	.L23:
 456:Generated_Source\PSoC4/PWM_1.c ****             {
 457:Generated_Source\PSoC4/PWM_1.c ****                 (void)PWM_1_ReadCapture();
 324              		.loc 1 457 0
 325 0006 FFF7FEFF 		bl	PWM_1_ReadCapture
 326              	.L22:
 455:Generated_Source\PSoC4/PWM_1.c ****             while(0u != (PWM_1_ReadStatusRegister() & PWM_1_STATUS_FIFONEMPTY))
 327              		.loc 1 455 0
 328 000a FFF7FEFF 		bl	PWM_1_ReadStatusRegister
 329 000e 031C     		mov	r3, r0
 330 0010 1A1C     		mov	r2, r3
 331 0012 1023     		mov	r3, #16
 332 0014 1340     		and	r3, r2
 333 0016 F6D1     		bne	.L23
 458:Generated_Source\PSoC4/PWM_1.c ****             }
 459:Generated_Source\PSoC4/PWM_1.c ****         }
 334              		.loc 1 459 0
 335 0018 BD46     		mov	sp, r7
 336              		@ sp needed
 337 001a 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 15


 339              	.LFE6:
 340              		.size	PWM_1_ClearFIFO, .-PWM_1_ClearFIFO
 341              		.section	.text.PWM_1_WritePeriod,"ax",%progbits
 342              		.align	2
 343              		.global	PWM_1_WritePeriod
 344              		.code	16
 345              		.thumb_func
 346              		.type	PWM_1_WritePeriod, %function
 347              	PWM_1_WritePeriod:
 348              	.LFB7:
 460:Generated_Source\PSoC4/PWM_1.c **** 
 461:Generated_Source\PSoC4/PWM_1.c ****     #endif /* PWM_1_UseStatus */
 462:Generated_Source\PSoC4/PWM_1.c **** 
 463:Generated_Source\PSoC4/PWM_1.c **** #endif /* !PWM_1_UsingFixedFunction */
 464:Generated_Source\PSoC4/PWM_1.c **** 
 465:Generated_Source\PSoC4/PWM_1.c **** 
 466:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_WritePeriod
 468:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 469:Generated_Source\PSoC4/PWM_1.c **** *
 470:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 471:Generated_Source\PSoC4/PWM_1.c **** *  This function is used to change the period of the counter.  The new period
 472:Generated_Source\PSoC4/PWM_1.c **** *  will be loaded the next time terminal count is detected.
 473:Generated_Source\PSoC4/PWM_1.c **** *
 474:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 475:Generated_Source\PSoC4/PWM_1.c **** *  period:  Period value. May be between 1 and (2^Resolution)-1.  A value of 0
 476:Generated_Source\PSoC4/PWM_1.c **** *           will result in the counter remaining at zero.
 477:Generated_Source\PSoC4/PWM_1.c **** *
 478:Generated_Source\PSoC4/PWM_1.c **** * Return:
 479:Generated_Source\PSoC4/PWM_1.c **** *  None
 480:Generated_Source\PSoC4/PWM_1.c **** *
 481:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 482:Generated_Source\PSoC4/PWM_1.c **** void PWM_1_WritePeriod(uint8 period) 
 483:Generated_Source\PSoC4/PWM_1.c **** {
 349              		.loc 1 483 0
 350              		.cfi_startproc
 351 0000 80B5     		push	{r7, lr}
 352              		.cfi_def_cfa_offset 8
 353              		.cfi_offset 7, -8
 354              		.cfi_offset 14, -4
 355 0002 82B0     		sub	sp, sp, #8
 356              		.cfi_def_cfa_offset 16
 357 0004 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 359 0006 021C     		mov	r2, r0
 360 0008 FB1D     		add	r3, r7, #7
 361 000a 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 485:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG16(PWM_1_PERIOD_LSB_PTR, (uint16)period);
 486:Generated_Source\PSoC4/PWM_1.c ****     #else
 487:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_PERIOD_LSB_PTR, period);
 362              		.loc 1 487 0
 363 000c 034A     		ldr	r2, .L25
 364 000e FB1D     		add	r3, r7, #7
 365 0010 1B78     		ldrb	r3, [r3]
 366 0012 1370     		strb	r3, [r2]
 488:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 16


 489:Generated_Source\PSoC4/PWM_1.c **** }
 367              		.loc 1 489 0
 368 0014 BD46     		mov	sp, r7
 369 0016 02B0     		add	sp, sp, #8
 370              		@ sp needed
 371 0018 80BD     		pop	{r7, pc}
 372              	.L26:
 373 001a C046     		.align	2
 374              	.L25:
 375 001c 41000F40 		.word	1074724929
 376              		.cfi_endproc
 377              	.LFE7:
 378              		.size	PWM_1_WritePeriod, .-PWM_1_WritePeriod
 379              		.section	.text.PWM_1_WriteCompare1,"ax",%progbits
 380              		.align	2
 381              		.global	PWM_1_WriteCompare1
 382              		.code	16
 383              		.thumb_func
 384              		.type	PWM_1_WriteCompare1, %function
 385              	PWM_1_WriteCompare1:
 386              	.LFB8:
 490:Generated_Source\PSoC4/PWM_1.c **** 
 491:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 492:Generated_Source\PSoC4/PWM_1.c **** 
 493:Generated_Source\PSoC4/PWM_1.c **** 
 494:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 495:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare
 496:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 497:Generated_Source\PSoC4/PWM_1.c ****     *
 498:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 499:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value when the PWM is in Dither
 500:Generated_Source\PSoC4/PWM_1.c ****     *  mode. The compare output will reflect the new value on the next UDB clock.
 501:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 502:Generated_Source\PSoC4/PWM_1.c ****     *  compared to the compare value based on the compare mode defined in
 503:Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode.
 504:Generated_Source\PSoC4/PWM_1.c ****     *
 505:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 506:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 507:Generated_Source\PSoC4/PWM_1.c ****     *
 508:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 509:Generated_Source\PSoC4/PWM_1.c ****     *  None
 510:Generated_Source\PSoC4/PWM_1.c ****     *
 511:Generated_Source\PSoC4/PWM_1.c ****     * Side Effects:
 512:Generated_Source\PSoC4/PWM_1.c ****     *  This function is only available if the PWM mode parameter is set to
 513:Generated_Source\PSoC4/PWM_1.c ****     *  Dither Mode, Center Aligned Mode or One Output Mode
 514:Generated_Source\PSoC4/PWM_1.c ****     *
 515:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 516:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare(uint8 compare) \
 517:Generated_Source\PSoC4/PWM_1.c ****                                        
 518:Generated_Source\PSoC4/PWM_1.c ****     {
 519:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 520:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 521:Generated_Source\PSoC4/PWM_1.c ****         #else
 522:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 523:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 524:Generated_Source\PSoC4/PWM_1.c **** 
 525:Generated_Source\PSoC4/PWM_1.c ****         #if (PWM_1_PWMMode == PWM_1__B_PWM__DITHER)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 17


 526:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_UsingFixedFunction)
 527:Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, (uint16)(compare + 1u));
 528:Generated_Source\PSoC4/PWM_1.c ****             #else
 529:Generated_Source\PSoC4/PWM_1.c ****                 CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, (compare + 1u));
 530:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_UsingFixedFunction) */
 531:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_PWMMode == PWM_1__B_PWM__DITHER) */
 532:Generated_Source\PSoC4/PWM_1.c ****     }
 533:Generated_Source\PSoC4/PWM_1.c **** 
 534:Generated_Source\PSoC4/PWM_1.c **** 
 535:Generated_Source\PSoC4/PWM_1.c **** #else
 536:Generated_Source\PSoC4/PWM_1.c **** 
 537:Generated_Source\PSoC4/PWM_1.c **** 
 538:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 539:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare1
 540:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 541:Generated_Source\PSoC4/PWM_1.c ****     *
 542:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 543:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare1 value.  The compare output will
 544:Generated_Source\PSoC4/PWM_1.c ****     *  reflect the new value on the next UDB clock.  The compare output will be
 545:Generated_Source\PSoC4/PWM_1.c ****     *  driven high when the present counter value is less than or less than or
 546:Generated_Source\PSoC4/PWM_1.c ****     *  equal to the compare register, depending on the mode.
 547:Generated_Source\PSoC4/PWM_1.c ****     *
 548:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 549:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 550:Generated_Source\PSoC4/PWM_1.c ****     *
 551:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 552:Generated_Source\PSoC4/PWM_1.c ****     *  None
 553:Generated_Source\PSoC4/PWM_1.c ****     *
 554:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 555:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare1(uint8 compare) \
 556:Generated_Source\PSoC4/PWM_1.c ****                                         
 557:Generated_Source\PSoC4/PWM_1.c ****     {
 387              		.loc 1 557 0
 388              		.cfi_startproc
 389 0000 80B5     		push	{r7, lr}
 390              		.cfi_def_cfa_offset 8
 391              		.cfi_offset 7, -8
 392              		.cfi_offset 14, -4
 393 0002 82B0     		sub	sp, sp, #8
 394              		.cfi_def_cfa_offset 16
 395 0004 00AF     		add	r7, sp, #0
 396              		.cfi_def_cfa_register 7
 397 0006 021C     		mov	r2, r0
 398 0008 FB1D     		add	r3, r7, #7
 399 000a 1A70     		strb	r2, [r3]
 558:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 559:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE1_LSB_PTR, (uint16)compare);
 560:Generated_Source\PSoC4/PWM_1.c ****         #else
 561:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE1_LSB_PTR, compare);
 400              		.loc 1 561 0
 401 000c 034A     		ldr	r2, .L28
 402 000e FB1D     		add	r3, r7, #7
 403 0010 1B78     		ldrb	r3, [r3]
 404 0012 1370     		strb	r3, [r2]
 562:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 563:Generated_Source\PSoC4/PWM_1.c ****     }
 405              		.loc 1 563 0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 18


 406 0014 BD46     		mov	sp, r7
 407 0016 02B0     		add	sp, sp, #8
 408              		@ sp needed
 409 0018 80BD     		pop	{r7, pc}
 410              	.L29:
 411 001a C046     		.align	2
 412              	.L28:
 413 001c 21000F40 		.word	1074724897
 414              		.cfi_endproc
 415              	.LFE8:
 416              		.size	PWM_1_WriteCompare1, .-PWM_1_WriteCompare1
 417              		.section	.text.PWM_1_WriteCompare2,"ax",%progbits
 418              		.align	2
 419              		.global	PWM_1_WriteCompare2
 420              		.code	16
 421              		.thumb_func
 422              		.type	PWM_1_WriteCompare2, %function
 423              	PWM_1_WriteCompare2:
 424              	.LFB9:
 564:Generated_Source\PSoC4/PWM_1.c **** 
 565:Generated_Source\PSoC4/PWM_1.c **** 
 566:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 567:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteCompare2
 568:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 569:Generated_Source\PSoC4/PWM_1.c ****     *
 570:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 571:Generated_Source\PSoC4/PWM_1.c ****     *  This funtion is used to change the compare value, for compare1 output.
 572:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will reflect the new value on the next UDB clock.
 573:Generated_Source\PSoC4/PWM_1.c ****     *  The compare output will be driven high when the present counter value is
 574:Generated_Source\PSoC4/PWM_1.c ****     *  less than or less than or equal to the compare register, depending on the
 575:Generated_Source\PSoC4/PWM_1.c ****     *  mode.
 576:Generated_Source\PSoC4/PWM_1.c ****     *
 577:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 578:Generated_Source\PSoC4/PWM_1.c ****     *  compare:  New compare value.
 579:Generated_Source\PSoC4/PWM_1.c ****     *
 580:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 581:Generated_Source\PSoC4/PWM_1.c ****     *  None
 582:Generated_Source\PSoC4/PWM_1.c ****     *
 583:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 584:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteCompare2(uint8 compare) \
 585:Generated_Source\PSoC4/PWM_1.c ****                                         
 586:Generated_Source\PSoC4/PWM_1.c ****     {
 425              		.loc 1 586 0
 426              		.cfi_startproc
 427 0000 80B5     		push	{r7, lr}
 428              		.cfi_def_cfa_offset 8
 429              		.cfi_offset 7, -8
 430              		.cfi_offset 14, -4
 431 0002 82B0     		sub	sp, sp, #8
 432              		.cfi_def_cfa_offset 16
 433 0004 00AF     		add	r7, sp, #0
 434              		.cfi_def_cfa_register 7
 435 0006 021C     		mov	r2, r0
 436 0008 FB1D     		add	r3, r7, #7
 437 000a 1A70     		strb	r2, [r3]
 587:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 588:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG16(PWM_1_COMPARE2_LSB_PTR, compare);
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 19


 589:Generated_Source\PSoC4/PWM_1.c ****         #else
 590:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_COMPARE2_LSB_PTR, compare);
 438              		.loc 1 590 0
 439 000c 034A     		ldr	r2, .L31
 440 000e FB1D     		add	r3, r7, #7
 441 0010 1B78     		ldrb	r3, [r3]
 442 0012 1370     		strb	r3, [r2]
 591:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 592:Generated_Source\PSoC4/PWM_1.c ****     }
 443              		.loc 1 592 0
 444 0014 BD46     		mov	sp, r7
 445 0016 02B0     		add	sp, sp, #8
 446              		@ sp needed
 447 0018 80BD     		pop	{r7, pc}
 448              	.L32:
 449 001a C046     		.align	2
 450              	.L31:
 451 001c 31000F40 		.word	1074724913
 452              		.cfi_endproc
 453              	.LFE9:
 454              		.size	PWM_1_WriteCompare2, .-PWM_1_WriteCompare2
 455              		.section	.text.PWM_1_SetInterruptMode,"ax",%progbits
 456              		.align	2
 457              		.global	PWM_1_SetInterruptMode
 458              		.code	16
 459              		.thumb_func
 460              		.type	PWM_1_SetInterruptMode, %function
 461              	PWM_1_SetInterruptMode:
 462              	.LFB10:
 593:Generated_Source\PSoC4/PWM_1.c **** #endif /* UseOneCompareMode */
 594:Generated_Source\PSoC4/PWM_1.c **** 
 595:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_DeadBandUsed)
 596:Generated_Source\PSoC4/PWM_1.c **** 
 597:Generated_Source\PSoC4/PWM_1.c **** 
 598:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 599:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteDeadTime
 600:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 601:Generated_Source\PSoC4/PWM_1.c ****     *
 602:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 603:Generated_Source\PSoC4/PWM_1.c ****     *  This function writes the dead-band counts to the corresponding register
 604:Generated_Source\PSoC4/PWM_1.c ****     *
 605:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 606:Generated_Source\PSoC4/PWM_1.c ****     *  deadtime:  Number of counts for dead time
 607:Generated_Source\PSoC4/PWM_1.c ****     *
 608:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 609:Generated_Source\PSoC4/PWM_1.c ****     *  None
 610:Generated_Source\PSoC4/PWM_1.c ****     *
 611:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 612:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteDeadTime(uint8 deadtime) 
 613:Generated_Source\PSoC4/PWM_1.c ****     {
 614:Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just write the register */
 615:Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 616:Generated_Source\PSoC4/PWM_1.c ****             CY_SET_REG8(PWM_1_DEADBAND_COUNT_PTR, deadtime);
 617:Generated_Source\PSoC4/PWM_1.c ****         #else
 618:Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 619:Generated_Source\PSoC4/PWM_1.c ****             /* Clear existing data */
 620:Generated_Source\PSoC4/PWM_1.c ****             PWM_1_DEADBAND_COUNT &= ((uint8)(~PWM_1_DEADBAND_COUNT_MASK));
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 20


 621:Generated_Source\PSoC4/PWM_1.c **** 
 622:Generated_Source\PSoC4/PWM_1.c ****             /* Set new dead time */
 623:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 624:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= ((uint8)((uint8)deadtime << PWM_1_DEADBAND_COUNT_SHIFT)) &
 625:Generated_Source\PSoC4/PWM_1.c ****                                                     PWM_1_DEADBAND_COUNT_MASK;
 626:Generated_Source\PSoC4/PWM_1.c ****             #else
 627:Generated_Source\PSoC4/PWM_1.c ****                 PWM_1_DEADBAND_COUNT |= deadtime & PWM_1_DEADBAND_COUNT_MASK;
 628:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 629:Generated_Source\PSoC4/PWM_1.c **** 
 630:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 631:Generated_Source\PSoC4/PWM_1.c ****     }
 632:Generated_Source\PSoC4/PWM_1.c **** 
 633:Generated_Source\PSoC4/PWM_1.c **** 
 634:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 635:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadDeadTime
 636:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 637:Generated_Source\PSoC4/PWM_1.c ****     *
 638:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 639:Generated_Source\PSoC4/PWM_1.c ****     *  This function reads the dead-band counts from the corresponding register
 640:Generated_Source\PSoC4/PWM_1.c ****     *
 641:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 642:Generated_Source\PSoC4/PWM_1.c ****     *  None
 643:Generated_Source\PSoC4/PWM_1.c ****     *
 644:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 645:Generated_Source\PSoC4/PWM_1.c ****     *  Dead Band Counts
 646:Generated_Source\PSoC4/PWM_1.c ****     *
 647:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 648:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadDeadTime(void) 
 649:Generated_Source\PSoC4/PWM_1.c ****     {
 650:Generated_Source\PSoC4/PWM_1.c ****         /* If using the Dead Band 1-255 mode then just read the register */
 651:Generated_Source\PSoC4/PWM_1.c ****         #if(!PWM_1_DeadBand2_4)
 652:Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_DEADBAND_COUNT_PTR));
 653:Generated_Source\PSoC4/PWM_1.c ****         #else
 654:Generated_Source\PSoC4/PWM_1.c **** 
 655:Generated_Source\PSoC4/PWM_1.c ****             /* Otherwise the data has to be masked and offset */
 656:Generated_Source\PSoC4/PWM_1.c ****             #if(PWM_1_DEADBAND_COUNT_SHIFT)
 657:Generated_Source\PSoC4/PWM_1.c ****                 return ((uint8)(((uint8)(PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK)) >>
 658:Generated_Source\PSoC4/PWM_1.c ****                                                                            PWM_1_DEADBAND_COUNT_SHI
 659:Generated_Source\PSoC4/PWM_1.c ****             #else
 660:Generated_Source\PSoC4/PWM_1.c ****                 return (PWM_1_DEADBAND_COUNT & PWM_1_DEADBAND_COUNT_MASK);
 661:Generated_Source\PSoC4/PWM_1.c ****             #endif /* (PWM_1_DEADBAND_COUNT_SHIFT) */
 662:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (!PWM_1_DeadBand2_4) */
 663:Generated_Source\PSoC4/PWM_1.c ****     }
 664:Generated_Source\PSoC4/PWM_1.c **** #endif /* DeadBandUsed */
 665:Generated_Source\PSoC4/PWM_1.c **** 
 666:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseStatus || PWM_1_UsingFixedFunction)
 667:Generated_Source\PSoC4/PWM_1.c **** 
 668:Generated_Source\PSoC4/PWM_1.c **** 
 669:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 670:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_SetInterruptMode
 671:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 672:Generated_Source\PSoC4/PWM_1.c ****     *
 673:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 674:Generated_Source\PSoC4/PWM_1.c ****     *  This function configures the interrupts mask control of theinterrupt
 675:Generated_Source\PSoC4/PWM_1.c ****     *  source status register.
 676:Generated_Source\PSoC4/PWM_1.c ****     *
 677:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 21


 678:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 interruptMode: Bit field containing the interrupt sources enabled
 679:Generated_Source\PSoC4/PWM_1.c ****     *
 680:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 681:Generated_Source\PSoC4/PWM_1.c ****     *  None
 682:Generated_Source\PSoC4/PWM_1.c ****     *
 683:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 684:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_SetInterruptMode(uint8 interruptMode) 
 685:Generated_Source\PSoC4/PWM_1.c ****     {
 463              		.loc 1 685 0
 464              		.cfi_startproc
 465 0000 80B5     		push	{r7, lr}
 466              		.cfi_def_cfa_offset 8
 467              		.cfi_offset 7, -8
 468              		.cfi_offset 14, -4
 469 0002 82B0     		sub	sp, sp, #8
 470              		.cfi_def_cfa_offset 16
 471 0004 00AF     		add	r7, sp, #0
 472              		.cfi_def_cfa_register 7
 473 0006 021C     		mov	r2, r0
 474 0008 FB1D     		add	r3, r7, #7
 475 000a 1A70     		strb	r2, [r3]
 686:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_STATUS_MASK_PTR, interruptMode);
 476              		.loc 1 686 0
 477 000c 034A     		ldr	r2, .L34
 478 000e FB1D     		add	r3, r7, #7
 479 0010 1B78     		ldrb	r3, [r3]
 480 0012 1370     		strb	r3, [r2]
 687:Generated_Source\PSoC4/PWM_1.c ****     }
 481              		.loc 1 687 0
 482 0014 BD46     		mov	sp, r7
 483 0016 02B0     		add	sp, sp, #8
 484              		@ sp needed
 485 0018 80BD     		pop	{r7, pc}
 486              	.L35:
 487 001a C046     		.align	2
 488              	.L34:
 489 001c 81000F40 		.word	1074724993
 490              		.cfi_endproc
 491              	.LFE10:
 492              		.size	PWM_1_SetInterruptMode, .-PWM_1_SetInterruptMode
 493              		.section	.text.PWM_1_ReadStatusRegister,"ax",%progbits
 494              		.align	2
 495              		.global	PWM_1_ReadStatusRegister
 496              		.code	16
 497              		.thumb_func
 498              		.type	PWM_1_ReadStatusRegister, %function
 499              	PWM_1_ReadStatusRegister:
 500              	.LFB11:
 688:Generated_Source\PSoC4/PWM_1.c **** 
 689:Generated_Source\PSoC4/PWM_1.c **** 
 690:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 691:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadStatusRegister
 692:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 693:Generated_Source\PSoC4/PWM_1.c ****     *
 694:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 695:Generated_Source\PSoC4/PWM_1.c ****     *  This function returns the current state of the status register.
 696:Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 22


 697:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 698:Generated_Source\PSoC4/PWM_1.c ****     *  None
 699:Generated_Source\PSoC4/PWM_1.c ****     *
 700:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 701:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current status register value. The status register bits are:
 702:Generated_Source\PSoC4/PWM_1.c ****     *  [7:6] : Unused(0)
 703:Generated_Source\PSoC4/PWM_1.c ****     *  [5]   : Kill event output
 704:Generated_Source\PSoC4/PWM_1.c ****     *  [4]   : FIFO not empty
 705:Generated_Source\PSoC4/PWM_1.c ****     *  [3]   : FIFO full
 706:Generated_Source\PSoC4/PWM_1.c ****     *  [2]   : Terminal count
 707:Generated_Source\PSoC4/PWM_1.c ****     *  [1]   : Compare output 2
 708:Generated_Source\PSoC4/PWM_1.c ****     *  [0]   : Compare output 1
 709:Generated_Source\PSoC4/PWM_1.c ****     *
 710:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 711:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadStatusRegister(void) 
 712:Generated_Source\PSoC4/PWM_1.c ****     {
 501              		.loc 1 712 0
 502              		.cfi_startproc
 503 0000 80B5     		push	{r7, lr}
 504              		.cfi_def_cfa_offset 8
 505              		.cfi_offset 7, -8
 506              		.cfi_offset 14, -4
 507 0002 00AF     		add	r7, sp, #0
 508              		.cfi_def_cfa_register 7
 713:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_STATUS_PTR));
 509              		.loc 1 713 0
 510 0004 024B     		ldr	r3, .L38
 511 0006 1B78     		ldrb	r3, [r3]
 512 0008 DBB2     		uxtb	r3, r3
 714:Generated_Source\PSoC4/PWM_1.c ****     }
 513              		.loc 1 714 0
 514 000a 181C     		mov	r0, r3
 515 000c BD46     		mov	sp, r7
 516              		@ sp needed
 517 000e 80BD     		pop	{r7, pc}
 518              	.L39:
 519              		.align	2
 520              	.L38:
 521 0010 61000F40 		.word	1074724961
 522              		.cfi_endproc
 523              	.LFE11:
 524              		.size	PWM_1_ReadStatusRegister, .-PWM_1_ReadStatusRegister
 525              		.section	.text.PWM_1_ReadControlRegister,"ax",%progbits
 526              		.align	2
 527              		.global	PWM_1_ReadControlRegister
 528              		.code	16
 529              		.thumb_func
 530              		.type	PWM_1_ReadControlRegister, %function
 531              	PWM_1_ReadControlRegister:
 532              	.LFB12:
 715:Generated_Source\PSoC4/PWM_1.c **** 
 716:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseStatus || PWM_1_UsingFixedFunction) */
 717:Generated_Source\PSoC4/PWM_1.c **** 
 718:Generated_Source\PSoC4/PWM_1.c **** 
 719:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseControl)
 720:Generated_Source\PSoC4/PWM_1.c **** 
 721:Generated_Source\PSoC4/PWM_1.c **** 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 23


 722:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 723:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadControlRegister
 724:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 725:Generated_Source\PSoC4/PWM_1.c ****     *
 726:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 727:Generated_Source\PSoC4/PWM_1.c ****     *  Returns the current state of the control register. This API is available
 728:Generated_Source\PSoC4/PWM_1.c ****     *  only if the control register is not removed.
 729:Generated_Source\PSoC4/PWM_1.c ****     *
 730:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 731:Generated_Source\PSoC4/PWM_1.c ****     *  None
 732:Generated_Source\PSoC4/PWM_1.c ****     *
 733:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 734:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 : Current control register value
 735:Generated_Source\PSoC4/PWM_1.c ****     *
 736:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 737:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadControlRegister(void) 
 738:Generated_Source\PSoC4/PWM_1.c ****     {
 533              		.loc 1 738 0
 534              		.cfi_startproc
 535 0000 80B5     		push	{r7, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 82B0     		sub	sp, sp, #8
 540              		.cfi_def_cfa_offset 16
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 739:Generated_Source\PSoC4/PWM_1.c ****         uint8 result;
 740:Generated_Source\PSoC4/PWM_1.c **** 
 741:Generated_Source\PSoC4/PWM_1.c ****         result = CY_GET_REG8(PWM_1_CONTROL_PTR);
 543              		.loc 1 741 0
 544 0006 054A     		ldr	r2, .L42
 545 0008 FB1D     		add	r3, r7, #7
 546 000a 1278     		ldrb	r2, [r2]
 547 000c 1A70     		strb	r2, [r3]
 742:Generated_Source\PSoC4/PWM_1.c ****         return (result);
 548              		.loc 1 742 0
 549 000e FB1D     		add	r3, r7, #7
 550 0010 1B78     		ldrb	r3, [r3]
 743:Generated_Source\PSoC4/PWM_1.c ****     }
 551              		.loc 1 743 0
 552 0012 181C     		mov	r0, r3
 553 0014 BD46     		mov	sp, r7
 554 0016 02B0     		add	sp, sp, #8
 555              		@ sp needed
 556 0018 80BD     		pop	{r7, pc}
 557              	.L43:
 558 001a C046     		.align	2
 559              	.L42:
 560 001c 71000F40 		.word	1074724977
 561              		.cfi_endproc
 562              	.LFE12:
 563              		.size	PWM_1_ReadControlRegister, .-PWM_1_ReadControlRegister
 564              		.section	.text.PWM_1_WriteControlRegister,"ax",%progbits
 565              		.align	2
 566              		.global	PWM_1_WriteControlRegister
 567              		.code	16
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 24


 568              		.thumb_func
 569              		.type	PWM_1_WriteControlRegister, %function
 570              	PWM_1_WriteControlRegister:
 571              	.LFB13:
 744:Generated_Source\PSoC4/PWM_1.c **** 
 745:Generated_Source\PSoC4/PWM_1.c **** 
 746:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 747:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_WriteControlRegister
 748:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 749:Generated_Source\PSoC4/PWM_1.c ****     *
 750:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 751:Generated_Source\PSoC4/PWM_1.c ****     *  Sets the bit field of the control register. This API is available only if
 752:Generated_Source\PSoC4/PWM_1.c ****     *  the control register is not removed.
 753:Generated_Source\PSoC4/PWM_1.c ****     *
 754:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 755:Generated_Source\PSoC4/PWM_1.c ****     *  uint8 control: Control register bit field, The status register bits are:
 756:Generated_Source\PSoC4/PWM_1.c ****     *  [7]   : PWM Enable
 757:Generated_Source\PSoC4/PWM_1.c ****     *  [6]   : Reset
 758:Generated_Source\PSoC4/PWM_1.c ****     *  [5:3] : Compare Mode2
 759:Generated_Source\PSoC4/PWM_1.c ****     *  [2:0] : Compare Mode2
 760:Generated_Source\PSoC4/PWM_1.c ****     *
 761:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 762:Generated_Source\PSoC4/PWM_1.c ****     *  None
 763:Generated_Source\PSoC4/PWM_1.c ****     *
 764:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 765:Generated_Source\PSoC4/PWM_1.c ****     void PWM_1_WriteControlRegister(uint8 control) 
 766:Generated_Source\PSoC4/PWM_1.c ****     {
 572              		.loc 1 766 0
 573              		.cfi_startproc
 574 0000 80B5     		push	{r7, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 82B0     		sub	sp, sp, #8
 579              		.cfi_def_cfa_offset 16
 580 0004 00AF     		add	r7, sp, #0
 581              		.cfi_def_cfa_register 7
 582 0006 021C     		mov	r2, r0
 583 0008 FB1D     		add	r3, r7, #7
 584 000a 1A70     		strb	r2, [r3]
 767:Generated_Source\PSoC4/PWM_1.c ****         CY_SET_REG8(PWM_1_CONTROL_PTR, control);
 585              		.loc 1 767 0
 586 000c 034A     		ldr	r2, .L45
 587 000e FB1D     		add	r3, r7, #7
 588 0010 1B78     		ldrb	r3, [r3]
 589 0012 1370     		strb	r3, [r2]
 768:Generated_Source\PSoC4/PWM_1.c ****     }
 590              		.loc 1 768 0
 591 0014 BD46     		mov	sp, r7
 592 0016 02B0     		add	sp, sp, #8
 593              		@ sp needed
 594 0018 80BD     		pop	{r7, pc}
 595              	.L46:
 596 001a C046     		.align	2
 597              	.L45:
 598 001c 71000F40 		.word	1074724977
 599              		.cfi_endproc
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 25


 600              	.LFE13:
 601              		.size	PWM_1_WriteControlRegister, .-PWM_1_WriteControlRegister
 602              		.section	.text.PWM_1_ReadCapture,"ax",%progbits
 603              		.align	2
 604              		.global	PWM_1_ReadCapture
 605              		.code	16
 606              		.thumb_func
 607              		.type	PWM_1_ReadCapture, %function
 608              	PWM_1_ReadCapture:
 609              	.LFB14:
 769:Generated_Source\PSoC4/PWM_1.c **** 
 770:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseControl) */
 771:Generated_Source\PSoC4/PWM_1.c **** 
 772:Generated_Source\PSoC4/PWM_1.c **** 
 773:Generated_Source\PSoC4/PWM_1.c **** #if (!PWM_1_UsingFixedFunction)
 774:Generated_Source\PSoC4/PWM_1.c **** 
 775:Generated_Source\PSoC4/PWM_1.c **** 
 776:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 777:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCapture
 778:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 779:Generated_Source\PSoC4/PWM_1.c ****     *
 780:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 781:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the capture value from the capture FIFO.
 782:Generated_Source\PSoC4/PWM_1.c ****     *
 783:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 784:Generated_Source\PSoC4/PWM_1.c ****     *  None
 785:Generated_Source\PSoC4/PWM_1.c ****     *
 786:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 787:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: The current capture value
 788:Generated_Source\PSoC4/PWM_1.c ****     *
 789:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 790:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCapture(void) 
 791:Generated_Source\PSoC4/PWM_1.c ****     {
 610              		.loc 1 791 0
 611              		.cfi_startproc
 612 0000 80B5     		push	{r7, lr}
 613              		.cfi_def_cfa_offset 8
 614              		.cfi_offset 7, -8
 615              		.cfi_offset 14, -4
 616 0002 00AF     		add	r7, sp, #0
 617              		.cfi_def_cfa_register 7
 792:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_CAPTURE_LSB_PTR));
 618              		.loc 1 792 0
 619 0004 024B     		ldr	r3, .L49
 620 0006 1B78     		ldrb	r3, [r3]
 621 0008 DBB2     		uxtb	r3, r3
 793:Generated_Source\PSoC4/PWM_1.c ****     }
 622              		.loc 1 793 0
 623 000a 181C     		mov	r0, r3
 624 000c BD46     		mov	sp, r7
 625              		@ sp needed
 626 000e 80BD     		pop	{r7, pc}
 627              	.L50:
 628              		.align	2
 629              	.L49:
 630 0010 51000F40 		.word	1074724945
 631              		.cfi_endproc
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 26


 632              	.LFE14:
 633              		.size	PWM_1_ReadCapture, .-PWM_1_ReadCapture
 634              		.section	.text.PWM_1_ReadCompare1,"ax",%progbits
 635              		.align	2
 636              		.global	PWM_1_ReadCompare1
 637              		.code	16
 638              		.thumb_func
 639              		.type	PWM_1_ReadCompare1, %function
 640              	PWM_1_ReadCompare1:
 641              	.LFB15:
 794:Generated_Source\PSoC4/PWM_1.c **** 
 795:Generated_Source\PSoC4/PWM_1.c **** #endif /* (!PWM_1_UsingFixedFunction) */
 796:Generated_Source\PSoC4/PWM_1.c **** 
 797:Generated_Source\PSoC4/PWM_1.c **** 
 798:Generated_Source\PSoC4/PWM_1.c **** #if (PWM_1_UseOneCompareMode)
 799:Generated_Source\PSoC4/PWM_1.c **** 
 800:Generated_Source\PSoC4/PWM_1.c **** 
 801:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 802:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare
 803:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 804:Generated_Source\PSoC4/PWM_1.c ****     *
 805:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 806:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare output when the PWM Mode parameter is
 807:Generated_Source\PSoC4/PWM_1.c ****     *  set to Dither mode, Center Aligned mode, or One Output mode.
 808:Generated_Source\PSoC4/PWM_1.c ****     *
 809:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 810:Generated_Source\PSoC4/PWM_1.c ****     *  None
 811:Generated_Source\PSoC4/PWM_1.c ****     *
 812:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 813:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value
 814:Generated_Source\PSoC4/PWM_1.c ****     *
 815:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 816:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare(void) 
 817:Generated_Source\PSoC4/PWM_1.c ****     {
 818:Generated_Source\PSoC4/PWM_1.c ****         #if(PWM_1_UsingFixedFunction)
 819:Generated_Source\PSoC4/PWM_1.c ****             return ((uint8)CY_GET_REG16(PWM_1_COMPARE1_LSB_PTR));
 820:Generated_Source\PSoC4/PWM_1.c ****         #else
 821:Generated_Source\PSoC4/PWM_1.c ****             return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 822:Generated_Source\PSoC4/PWM_1.c ****         #endif /* (PWM_1_UsingFixedFunction) */
 823:Generated_Source\PSoC4/PWM_1.c ****     }
 824:Generated_Source\PSoC4/PWM_1.c **** 
 825:Generated_Source\PSoC4/PWM_1.c **** #else
 826:Generated_Source\PSoC4/PWM_1.c **** 
 827:Generated_Source\PSoC4/PWM_1.c **** 
 828:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 829:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare1
 830:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 831:Generated_Source\PSoC4/PWM_1.c ****     *
 832:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 833:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare1 output.
 834:Generated_Source\PSoC4/PWM_1.c ****     *
 835:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 836:Generated_Source\PSoC4/PWM_1.c ****     *  None
 837:Generated_Source\PSoC4/PWM_1.c ****     *
 838:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 839:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 840:Generated_Source\PSoC4/PWM_1.c ****     *
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 27


 841:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 842:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare1(void) 
 843:Generated_Source\PSoC4/PWM_1.c ****     {
 642              		.loc 1 843 0
 643              		.cfi_startproc
 644 0000 80B5     		push	{r7, lr}
 645              		.cfi_def_cfa_offset 8
 646              		.cfi_offset 7, -8
 647              		.cfi_offset 14, -4
 648 0002 00AF     		add	r7, sp, #0
 649              		.cfi_def_cfa_register 7
 844:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE1_LSB_PTR));
 650              		.loc 1 844 0
 651 0004 024B     		ldr	r3, .L53
 652 0006 1B78     		ldrb	r3, [r3]
 653 0008 DBB2     		uxtb	r3, r3
 845:Generated_Source\PSoC4/PWM_1.c ****     }
 654              		.loc 1 845 0
 655 000a 181C     		mov	r0, r3
 656 000c BD46     		mov	sp, r7
 657              		@ sp needed
 658 000e 80BD     		pop	{r7, pc}
 659              	.L54:
 660              		.align	2
 661              	.L53:
 662 0010 21000F40 		.word	1074724897
 663              		.cfi_endproc
 664              	.LFE15:
 665              		.size	PWM_1_ReadCompare1, .-PWM_1_ReadCompare1
 666              		.section	.text.PWM_1_ReadCompare2,"ax",%progbits
 667              		.align	2
 668              		.global	PWM_1_ReadCompare2
 669              		.code	16
 670              		.thumb_func
 671              		.type	PWM_1_ReadCompare2, %function
 672              	PWM_1_ReadCompare2:
 673              	.LFB16:
 846:Generated_Source\PSoC4/PWM_1.c **** 
 847:Generated_Source\PSoC4/PWM_1.c **** 
 848:Generated_Source\PSoC4/PWM_1.c ****     /*******************************************************************************
 849:Generated_Source\PSoC4/PWM_1.c ****     * Function Name: PWM_1_ReadCompare2
 850:Generated_Source\PSoC4/PWM_1.c ****     ********************************************************************************
 851:Generated_Source\PSoC4/PWM_1.c ****     *
 852:Generated_Source\PSoC4/PWM_1.c ****     * Summary:
 853:Generated_Source\PSoC4/PWM_1.c ****     *  Reads the compare value for the compare2 output.
 854:Generated_Source\PSoC4/PWM_1.c ****     *
 855:Generated_Source\PSoC4/PWM_1.c ****     * Parameters:
 856:Generated_Source\PSoC4/PWM_1.c ****     *  None
 857:Generated_Source\PSoC4/PWM_1.c ****     *
 858:Generated_Source\PSoC4/PWM_1.c ****     * Return:
 859:Generated_Source\PSoC4/PWM_1.c ****     *  uint8/uint16: Current compare value.
 860:Generated_Source\PSoC4/PWM_1.c ****     *
 861:Generated_Source\PSoC4/PWM_1.c ****     *******************************************************************************/
 862:Generated_Source\PSoC4/PWM_1.c ****     uint8 PWM_1_ReadCompare2(void) 
 863:Generated_Source\PSoC4/PWM_1.c ****     {
 674              		.loc 1 863 0
 675              		.cfi_startproc
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 28


 676 0000 80B5     		push	{r7, lr}
 677              		.cfi_def_cfa_offset 8
 678              		.cfi_offset 7, -8
 679              		.cfi_offset 14, -4
 680 0002 00AF     		add	r7, sp, #0
 681              		.cfi_def_cfa_register 7
 864:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_COMPARE2_LSB_PTR));
 682              		.loc 1 864 0
 683 0004 024B     		ldr	r3, .L57
 684 0006 1B78     		ldrb	r3, [r3]
 685 0008 DBB2     		uxtb	r3, r3
 865:Generated_Source\PSoC4/PWM_1.c ****     }
 686              		.loc 1 865 0
 687 000a 181C     		mov	r0, r3
 688 000c BD46     		mov	sp, r7
 689              		@ sp needed
 690 000e 80BD     		pop	{r7, pc}
 691              	.L58:
 692              		.align	2
 693              	.L57:
 694 0010 31000F40 		.word	1074724913
 695              		.cfi_endproc
 696              	.LFE16:
 697              		.size	PWM_1_ReadCompare2, .-PWM_1_ReadCompare2
 698              		.section	.text.PWM_1_ReadPeriod,"ax",%progbits
 699              		.align	2
 700              		.global	PWM_1_ReadPeriod
 701              		.code	16
 702              		.thumb_func
 703              		.type	PWM_1_ReadPeriod, %function
 704              	PWM_1_ReadPeriod:
 705              	.LFB17:
 866:Generated_Source\PSoC4/PWM_1.c **** 
 867:Generated_Source\PSoC4/PWM_1.c **** #endif /* (PWM_1_UseOneCompareMode) */
 868:Generated_Source\PSoC4/PWM_1.c **** 
 869:Generated_Source\PSoC4/PWM_1.c **** 
 870:Generated_Source\PSoC4/PWM_1.c **** /*******************************************************************************
 871:Generated_Source\PSoC4/PWM_1.c **** * Function Name: PWM_1_ReadPeriod
 872:Generated_Source\PSoC4/PWM_1.c **** ********************************************************************************
 873:Generated_Source\PSoC4/PWM_1.c **** *
 874:Generated_Source\PSoC4/PWM_1.c **** * Summary:
 875:Generated_Source\PSoC4/PWM_1.c **** *  Reads the period value used by the PWM hardware.
 876:Generated_Source\PSoC4/PWM_1.c **** *
 877:Generated_Source\PSoC4/PWM_1.c **** * Parameters:
 878:Generated_Source\PSoC4/PWM_1.c **** *  None
 879:Generated_Source\PSoC4/PWM_1.c **** *
 880:Generated_Source\PSoC4/PWM_1.c **** * Return:
 881:Generated_Source\PSoC4/PWM_1.c **** *  uint8/16: Period value
 882:Generated_Source\PSoC4/PWM_1.c **** *
 883:Generated_Source\PSoC4/PWM_1.c **** *******************************************************************************/
 884:Generated_Source\PSoC4/PWM_1.c **** uint8 PWM_1_ReadPeriod(void) 
 885:Generated_Source\PSoC4/PWM_1.c **** {
 706              		.loc 1 885 0
 707              		.cfi_startproc
 708 0000 80B5     		push	{r7, lr}
 709              		.cfi_def_cfa_offset 8
 710              		.cfi_offset 7, -8
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 29


 711              		.cfi_offset 14, -4
 712 0002 00AF     		add	r7, sp, #0
 713              		.cfi_def_cfa_register 7
 886:Generated_Source\PSoC4/PWM_1.c ****     #if(PWM_1_UsingFixedFunction)
 887:Generated_Source\PSoC4/PWM_1.c ****         return ((uint8)CY_GET_REG16(PWM_1_PERIOD_LSB_PTR));
 888:Generated_Source\PSoC4/PWM_1.c ****     #else
 889:Generated_Source\PSoC4/PWM_1.c ****         return (CY_GET_REG8(PWM_1_PERIOD_LSB_PTR));
 714              		.loc 1 889 0
 715 0004 024B     		ldr	r3, .L61
 716 0006 1B78     		ldrb	r3, [r3]
 717 0008 DBB2     		uxtb	r3, r3
 890:Generated_Source\PSoC4/PWM_1.c ****     #endif /* (PWM_1_UsingFixedFunction) */
 891:Generated_Source\PSoC4/PWM_1.c **** }
 718              		.loc 1 891 0
 719 000a 181C     		mov	r0, r3
 720 000c BD46     		mov	sp, r7
 721              		@ sp needed
 722 000e 80BD     		pop	{r7, pc}
 723              	.L62:
 724              		.align	2
 725              	.L61:
 726 0010 41000F40 		.word	1074724929
 727              		.cfi_endproc
 728              	.LFE17:
 729              		.size	PWM_1_ReadPeriod, .-PWM_1_ReadPeriod
 730              		.text
 731              	.Letext0:
 732              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 733              		.section	.debug_info,"",%progbits
 734              	.Ldebug_info0:
 735 0000 BB020000 		.4byte	0x2bb
 736 0004 0400     		.2byte	0x4
 737 0006 00000000 		.4byte	.Ldebug_abbrev0
 738 000a 04       		.byte	0x4
 739 000b 01       		.uleb128 0x1
 740 000c 0D000000 		.4byte	.LASF40
 741 0010 01       		.byte	0x1
 742 0011 26010000 		.4byte	.LASF41
 743 0015 57020000 		.4byte	.LASF42
 744 0019 00000000 		.4byte	.Ldebug_ranges0+0
 745 001d 00000000 		.4byte	0
 746 0021 00000000 		.4byte	.Ldebug_line0
 747 0025 02       		.uleb128 0x2
 748 0026 01       		.byte	0x1
 749 0027 06       		.byte	0x6
 750 0028 39030000 		.4byte	.LASF0
 751 002c 02       		.uleb128 0x2
 752 002d 01       		.byte	0x1
 753 002e 08       		.byte	0x8
 754 002f 53010000 		.4byte	.LASF1
 755 0033 02       		.uleb128 0x2
 756 0034 02       		.byte	0x2
 757 0035 05       		.byte	0x5
 758 0036 F1010000 		.4byte	.LASF2
 759 003a 02       		.uleb128 0x2
 760 003b 02       		.byte	0x2
 761 003c 07       		.byte	0x7
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 30


 762 003d EB000000 		.4byte	.LASF3
 763 0041 02       		.uleb128 0x2
 764 0042 04       		.byte	0x4
 765 0043 05       		.byte	0x5
 766 0044 2B030000 		.4byte	.LASF4
 767 0048 02       		.uleb128 0x2
 768 0049 04       		.byte	0x4
 769 004a 07       		.byte	0x7
 770 004b 77010000 		.4byte	.LASF5
 771 004f 02       		.uleb128 0x2
 772 0050 08       		.byte	0x8
 773 0051 05       		.byte	0x5
 774 0052 C6020000 		.4byte	.LASF6
 775 0056 02       		.uleb128 0x2
 776 0057 08       		.byte	0x8
 777 0058 07       		.byte	0x7
 778 0059 40020000 		.4byte	.LASF7
 779 005d 03       		.uleb128 0x3
 780 005e 04       		.byte	0x4
 781 005f 05       		.byte	0x5
 782 0060 696E7400 		.ascii	"int\000"
 783 0064 02       		.uleb128 0x2
 784 0065 04       		.byte	0x4
 785 0066 07       		.byte	0x7
 786 0067 33020000 		.4byte	.LASF8
 787 006b 04       		.uleb128 0x4
 788 006c 89010000 		.4byte	.LASF12
 789 0070 02       		.byte	0x2
 790 0071 B901     		.2byte	0x1b9
 791 0073 2C000000 		.4byte	0x2c
 792 0077 02       		.uleb128 0x2
 793 0078 04       		.byte	0x4
 794 0079 04       		.byte	0x4
 795 007a 45010000 		.4byte	.LASF9
 796 007e 02       		.uleb128 0x2
 797 007f 08       		.byte	0x8
 798 0080 04       		.byte	0x4
 799 0081 C7010000 		.4byte	.LASF10
 800 0085 02       		.uleb128 0x2
 801 0086 01       		.byte	0x1
 802 0087 08       		.byte	0x8
 803 0088 34030000 		.4byte	.LASF11
 804 008c 04       		.uleb128 0x4
 805 008d 61010000 		.4byte	.LASF13
 806 0091 02       		.byte	0x2
 807 0092 6302     		.2byte	0x263
 808 0094 98000000 		.4byte	0x98
 809 0098 05       		.uleb128 0x5
 810 0099 6B000000 		.4byte	0x6b
 811 009d 02       		.uleb128 0x2
 812 009e 04       		.byte	0x4
 813 009f 07       		.byte	0x7
 814 00a0 BD020000 		.4byte	.LASF14
 815 00a4 06       		.uleb128 0x6
 816 00a5 4D030000 		.4byte	.LASF17
 817 00a9 01       		.byte	0x1
 818 00aa 37       		.byte	0x37
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 31


 819 00ab 00000000 		.4byte	.LFB0
 820 00af 24000000 		.4byte	.LFE0-.LFB0
 821 00b3 01       		.uleb128 0x1
 822 00b4 9C       		.byte	0x9c
 823 00b5 07       		.uleb128 0x7
 824 00b6 28020000 		.4byte	.LASF20
 825 00ba 01       		.byte	0x1
 826 00bb 54       		.byte	0x54
 827 00bc 00000000 		.4byte	.LFB1
 828 00c0 88000000 		.4byte	.LFE1-.LFB1
 829 00c4 01       		.uleb128 0x1
 830 00c5 9C       		.byte	0x9c
 831 00c6 E7000000 		.4byte	0xe7
 832 00ca 08       		.uleb128 0x8
 833 00cb B8020000 		.4byte	.LASF15
 834 00cf 01       		.byte	0x1
 835 00d0 57       		.byte	0x57
 836 00d1 6B000000 		.4byte	0x6b
 837 00d5 02       		.uleb128 0x2
 838 00d6 91       		.byte	0x91
 839 00d7 6F       		.sleb128 -17
 840 00d8 08       		.uleb128 0x8
 841 00d9 CE010000 		.4byte	.LASF16
 842 00dd 01       		.byte	0x1
 843 00de 5D       		.byte	0x5d
 844 00df 6B000000 		.4byte	0x6b
 845 00e3 02       		.uleb128 0x2
 846 00e4 91       		.byte	0x91
 847 00e5 6E       		.sleb128 -18
 848 00e6 00       		.byte	0
 849 00e7 09       		.uleb128 0x9
 850 00e8 00000000 		.4byte	.LASF18
 851 00ec 01       		.byte	0x1
 852 00ed C7       		.byte	0xc7
 853 00ee 00000000 		.4byte	.LFB2
 854 00f2 20000000 		.4byte	.LFE2-.LFB2
 855 00f6 01       		.uleb128 0x1
 856 00f7 9C       		.byte	0x9c
 857 00f8 09       		.uleb128 0x9
 858 00f9 20030000 		.4byte	.LASF19
 859 00fd 01       		.byte	0x1
 860 00fe E9       		.byte	0xe9
 861 00ff 00000000 		.4byte	.LFB3
 862 0103 1C000000 		.4byte	.LFE3-.LFB3
 863 0107 01       		.uleb128 0x1
 864 0108 9C       		.byte	0x9c
 865 0109 0A       		.uleb128 0xa
 866 010a 9B000000 		.4byte	.LASF21
 867 010e 01       		.byte	0x1
 868 010f 9301     		.2byte	0x193
 869 0111 00000000 		.4byte	.LFB4
 870 0115 20000000 		.4byte	.LFE4-.LFB4
 871 0119 01       		.uleb128 0x1
 872 011a 9C       		.byte	0x9c
 873 011b 2F010000 		.4byte	0x12f
 874 011f 0B       		.uleb128 0xb
 875 0120 4B010000 		.4byte	.LASF24
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 32


 876 0124 01       		.byte	0x1
 877 0125 9301     		.2byte	0x193
 878 0127 6B000000 		.4byte	0x6b
 879 012b 02       		.uleb128 0x2
 880 012c 91       		.byte	0x91
 881 012d 77       		.sleb128 -9
 882 012e 00       		.byte	0
 883 012f 0C       		.uleb128 0xc
 884 0130 0E030000 		.4byte	.LASF31
 885 0134 01       		.byte	0x1
 886 0135 A901     		.2byte	0x1a9
 887 0137 6B000000 		.4byte	0x6b
 888 013b 00000000 		.4byte	.LFB5
 889 013f 1C000000 		.4byte	.LFE5-.LFB5
 890 0143 01       		.uleb128 0x1
 891 0144 9C       		.byte	0x9c
 892 0145 0D       		.uleb128 0xd
 893 0146 AE000000 		.4byte	.LASF22
 894 014a 01       		.byte	0x1
 895 014b C501     		.2byte	0x1c5
 896 014d 00000000 		.4byte	.LFB6
 897 0151 1C000000 		.4byte	.LFE6-.LFB6
 898 0155 01       		.uleb128 0x1
 899 0156 9C       		.byte	0x9c
 900 0157 0A       		.uleb128 0xa
 901 0158 FC020000 		.4byte	.LASF23
 902 015c 01       		.byte	0x1
 903 015d E201     		.2byte	0x1e2
 904 015f 00000000 		.4byte	.LFB7
 905 0163 20000000 		.4byte	.LFE7-.LFB7
 906 0167 01       		.uleb128 0x1
 907 0168 9C       		.byte	0x9c
 908 0169 7D010000 		.4byte	0x17d
 909 016d 0B       		.uleb128 0xb
 910 016e BE000000 		.4byte	.LASF25
 911 0172 01       		.byte	0x1
 912 0173 E201     		.2byte	0x1e2
 913 0175 6B000000 		.4byte	0x6b
 914 0179 02       		.uleb128 0x2
 915 017a 91       		.byte	0x91
 916 017b 77       		.sleb128 -9
 917 017c 00       		.byte	0
 918 017d 0A       		.uleb128 0xa
 919 017e FE000000 		.4byte	.LASF26
 920 0182 01       		.byte	0x1
 921 0183 2B02     		.2byte	0x22b
 922 0185 00000000 		.4byte	.LFB8
 923 0189 20000000 		.4byte	.LFE8-.LFB8
 924 018d 01       		.uleb128 0x1
 925 018e 9C       		.byte	0x9c
 926 018f A3010000 		.4byte	0x1a3
 927 0193 0B       		.uleb128 0xb
 928 0194 45030000 		.4byte	.LASF27
 929 0198 01       		.byte	0x1
 930 0199 2B02     		.2byte	0x22b
 931 019b 6B000000 		.4byte	0x6b
 932 019f 02       		.uleb128 0x2
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 33


 933 01a0 91       		.byte	0x91
 934 01a1 77       		.sleb128 -9
 935 01a2 00       		.byte	0
 936 01a3 0A       		.uleb128 0xa
 937 01a4 12010000 		.4byte	.LASF28
 938 01a8 01       		.byte	0x1
 939 01a9 4802     		.2byte	0x248
 940 01ab 00000000 		.4byte	.LFB9
 941 01af 20000000 		.4byte	.LFE9-.LFB9
 942 01b3 01       		.uleb128 0x1
 943 01b4 9C       		.byte	0x9c
 944 01b5 C9010000 		.4byte	0x1c9
 945 01b9 0B       		.uleb128 0xb
 946 01ba 45030000 		.4byte	.LASF27
 947 01be 01       		.byte	0x1
 948 01bf 4802     		.2byte	0x248
 949 01c1 6B000000 		.4byte	0x6b
 950 01c5 02       		.uleb128 0x2
 951 01c6 91       		.byte	0x91
 952 01c7 77       		.sleb128 -9
 953 01c8 00       		.byte	0
 954 01c9 0A       		.uleb128 0xa
 955 01ca 97010000 		.4byte	.LASF29
 956 01ce 01       		.byte	0x1
 957 01cf AC02     		.2byte	0x2ac
 958 01d1 00000000 		.4byte	.LFB10
 959 01d5 20000000 		.4byte	.LFE10-.LFB10
 960 01d9 01       		.uleb128 0x1
 961 01da 9C       		.byte	0x9c
 962 01db EF010000 		.4byte	0x1ef
 963 01df 0B       		.uleb128 0xb
 964 01e0 EE020000 		.4byte	.LASF30
 965 01e4 01       		.byte	0x1
 966 01e5 AC02     		.2byte	0x2ac
 967 01e7 6B000000 		.4byte	0x6b
 968 01eb 02       		.uleb128 0x2
 969 01ec 91       		.byte	0x91
 970 01ed 77       		.sleb128 -9
 971 01ee 00       		.byte	0
 972 01ef 0C       		.uleb128 0xc
 973 01f0 AE010000 		.4byte	.LASF32
 974 01f4 01       		.byte	0x1
 975 01f5 C702     		.2byte	0x2c7
 976 01f7 6B000000 		.4byte	0x6b
 977 01fb 00000000 		.4byte	.LFB11
 978 01ff 14000000 		.4byte	.LFE11-.LFB11
 979 0203 01       		.uleb128 0x1
 980 0204 9C       		.byte	0x9c
 981 0205 0E       		.uleb128 0xe
 982 0206 D4020000 		.4byte	.LASF43
 983 020a 01       		.byte	0x1
 984 020b E102     		.2byte	0x2e1
 985 020d 6B000000 		.4byte	0x6b
 986 0211 00000000 		.4byte	.LFB12
 987 0215 20000000 		.4byte	.LFE12-.LFB12
 988 0219 01       		.uleb128 0x1
 989 021a 9C       		.byte	0x9c
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 34


 990 021b 2F020000 		.4byte	0x22f
 991 021f 0F       		.uleb128 0xf
 992 0220 B1020000 		.4byte	.LASF33
 993 0224 01       		.byte	0x1
 994 0225 E302     		.2byte	0x2e3
 995 0227 6B000000 		.4byte	0x6b
 996 022b 02       		.uleb128 0x2
 997 022c 91       		.byte	0x91
 998 022d 77       		.sleb128 -9
 999 022e 00       		.byte	0
 1000 022f 0A       		.uleb128 0xa
 1001 0230 0D020000 		.4byte	.LASF34
 1002 0234 01       		.byte	0x1
 1003 0235 FD02     		.2byte	0x2fd
 1004 0237 00000000 		.4byte	.LFB13
 1005 023b 20000000 		.4byte	.LFE13-.LFB13
 1006 023f 01       		.uleb128 0x1
 1007 0240 9C       		.byte	0x9c
 1008 0241 55020000 		.4byte	0x255
 1009 0245 0B       		.uleb128 0xb
 1010 0246 8F010000 		.4byte	.LASF35
 1011 024a 01       		.byte	0x1
 1012 024b FD02     		.2byte	0x2fd
 1013 024d 6B000000 		.4byte	0x6b
 1014 0251 02       		.uleb128 0x2
 1015 0252 91       		.byte	0x91
 1016 0253 77       		.sleb128 -9
 1017 0254 00       		.byte	0
 1018 0255 0C       		.uleb128 0xc
 1019 0256 FB010000 		.4byte	.LASF36
 1020 025a 01       		.byte	0x1
 1021 025b 1603     		.2byte	0x316
 1022 025d 6B000000 		.4byte	0x6b
 1023 0261 00000000 		.4byte	.LFB14
 1024 0265 14000000 		.4byte	.LFE14-.LFB14
 1025 0269 01       		.uleb128 0x1
 1026 026a 9C       		.byte	0x9c
 1027 026b 0C       		.uleb128 0xc
 1028 026c C5000000 		.4byte	.LASF37
 1029 0270 01       		.byte	0x1
 1030 0271 4A03     		.2byte	0x34a
 1031 0273 6B000000 		.4byte	0x6b
 1032 0277 00000000 		.4byte	.LFB15
 1033 027b 14000000 		.4byte	.LFE15-.LFB15
 1034 027f 01       		.uleb128 0x1
 1035 0280 9C       		.byte	0x9c
 1036 0281 0C       		.uleb128 0xc
 1037 0282 D8000000 		.4byte	.LASF38
 1038 0286 01       		.byte	0x1
 1039 0287 5E03     		.2byte	0x35e
 1040 0289 6B000000 		.4byte	0x6b
 1041 028d 00000000 		.4byte	.LFB16
 1042 0291 14000000 		.4byte	.LFE16-.LFB16
 1043 0295 01       		.uleb128 0x1
 1044 0296 9C       		.byte	0x9c
 1045 0297 0C       		.uleb128 0xc
 1046 0298 66010000 		.4byte	.LASF39
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 35


 1047 029c 01       		.byte	0x1
 1048 029d 7403     		.2byte	0x374
 1049 029f 6B000000 		.4byte	0x6b
 1050 02a3 00000000 		.4byte	.LFB17
 1051 02a7 14000000 		.4byte	.LFE17-.LFB17
 1052 02ab 01       		.uleb128 0x1
 1053 02ac 9C       		.byte	0x9c
 1054 02ad 10       		.uleb128 0x10
 1055 02ae E3010000 		.4byte	.LASF44
 1056 02b2 01       		.byte	0x1
 1057 02b3 20       		.byte	0x20
 1058 02b4 6B000000 		.4byte	0x6b
 1059 02b8 05       		.uleb128 0x5
 1060 02b9 03       		.byte	0x3
 1061 02ba 00000000 		.4byte	PWM_1_initVar
 1062 02be 00       		.byte	0
 1063              		.section	.debug_abbrev,"",%progbits
 1064              	.Ldebug_abbrev0:
 1065 0000 01       		.uleb128 0x1
 1066 0001 11       		.uleb128 0x11
 1067 0002 01       		.byte	0x1
 1068 0003 25       		.uleb128 0x25
 1069 0004 0E       		.uleb128 0xe
 1070 0005 13       		.uleb128 0x13
 1071 0006 0B       		.uleb128 0xb
 1072 0007 03       		.uleb128 0x3
 1073 0008 0E       		.uleb128 0xe
 1074 0009 1B       		.uleb128 0x1b
 1075 000a 0E       		.uleb128 0xe
 1076 000b 55       		.uleb128 0x55
 1077 000c 17       		.uleb128 0x17
 1078 000d 11       		.uleb128 0x11
 1079 000e 01       		.uleb128 0x1
 1080 000f 10       		.uleb128 0x10
 1081 0010 17       		.uleb128 0x17
 1082 0011 00       		.byte	0
 1083 0012 00       		.byte	0
 1084 0013 02       		.uleb128 0x2
 1085 0014 24       		.uleb128 0x24
 1086 0015 00       		.byte	0
 1087 0016 0B       		.uleb128 0xb
 1088 0017 0B       		.uleb128 0xb
 1089 0018 3E       		.uleb128 0x3e
 1090 0019 0B       		.uleb128 0xb
 1091 001a 03       		.uleb128 0x3
 1092 001b 0E       		.uleb128 0xe
 1093 001c 00       		.byte	0
 1094 001d 00       		.byte	0
 1095 001e 03       		.uleb128 0x3
 1096 001f 24       		.uleb128 0x24
 1097 0020 00       		.byte	0
 1098 0021 0B       		.uleb128 0xb
 1099 0022 0B       		.uleb128 0xb
 1100 0023 3E       		.uleb128 0x3e
 1101 0024 0B       		.uleb128 0xb
 1102 0025 03       		.uleb128 0x3
 1103 0026 08       		.uleb128 0x8
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 36


 1104 0027 00       		.byte	0
 1105 0028 00       		.byte	0
 1106 0029 04       		.uleb128 0x4
 1107 002a 16       		.uleb128 0x16
 1108 002b 00       		.byte	0
 1109 002c 03       		.uleb128 0x3
 1110 002d 0E       		.uleb128 0xe
 1111 002e 3A       		.uleb128 0x3a
 1112 002f 0B       		.uleb128 0xb
 1113 0030 3B       		.uleb128 0x3b
 1114 0031 05       		.uleb128 0x5
 1115 0032 49       		.uleb128 0x49
 1116 0033 13       		.uleb128 0x13
 1117 0034 00       		.byte	0
 1118 0035 00       		.byte	0
 1119 0036 05       		.uleb128 0x5
 1120 0037 35       		.uleb128 0x35
 1121 0038 00       		.byte	0
 1122 0039 49       		.uleb128 0x49
 1123 003a 13       		.uleb128 0x13
 1124 003b 00       		.byte	0
 1125 003c 00       		.byte	0
 1126 003d 06       		.uleb128 0x6
 1127 003e 2E       		.uleb128 0x2e
 1128 003f 00       		.byte	0
 1129 0040 3F       		.uleb128 0x3f
 1130 0041 19       		.uleb128 0x19
 1131 0042 03       		.uleb128 0x3
 1132 0043 0E       		.uleb128 0xe
 1133 0044 3A       		.uleb128 0x3a
 1134 0045 0B       		.uleb128 0xb
 1135 0046 3B       		.uleb128 0x3b
 1136 0047 0B       		.uleb128 0xb
 1137 0048 27       		.uleb128 0x27
 1138 0049 19       		.uleb128 0x19
 1139 004a 11       		.uleb128 0x11
 1140 004b 01       		.uleb128 0x1
 1141 004c 12       		.uleb128 0x12
 1142 004d 06       		.uleb128 0x6
 1143 004e 40       		.uleb128 0x40
 1144 004f 18       		.uleb128 0x18
 1145 0050 9642     		.uleb128 0x2116
 1146 0052 19       		.uleb128 0x19
 1147 0053 00       		.byte	0
 1148 0054 00       		.byte	0
 1149 0055 07       		.uleb128 0x7
 1150 0056 2E       		.uleb128 0x2e
 1151 0057 01       		.byte	0x1
 1152 0058 3F       		.uleb128 0x3f
 1153 0059 19       		.uleb128 0x19
 1154 005a 03       		.uleb128 0x3
 1155 005b 0E       		.uleb128 0xe
 1156 005c 3A       		.uleb128 0x3a
 1157 005d 0B       		.uleb128 0xb
 1158 005e 3B       		.uleb128 0x3b
 1159 005f 0B       		.uleb128 0xb
 1160 0060 27       		.uleb128 0x27
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 37


 1161 0061 19       		.uleb128 0x19
 1162 0062 11       		.uleb128 0x11
 1163 0063 01       		.uleb128 0x1
 1164 0064 12       		.uleb128 0x12
 1165 0065 06       		.uleb128 0x6
 1166 0066 40       		.uleb128 0x40
 1167 0067 18       		.uleb128 0x18
 1168 0068 9642     		.uleb128 0x2116
 1169 006a 19       		.uleb128 0x19
 1170 006b 01       		.uleb128 0x1
 1171 006c 13       		.uleb128 0x13
 1172 006d 00       		.byte	0
 1173 006e 00       		.byte	0
 1174 006f 08       		.uleb128 0x8
 1175 0070 34       		.uleb128 0x34
 1176 0071 00       		.byte	0
 1177 0072 03       		.uleb128 0x3
 1178 0073 0E       		.uleb128 0xe
 1179 0074 3A       		.uleb128 0x3a
 1180 0075 0B       		.uleb128 0xb
 1181 0076 3B       		.uleb128 0x3b
 1182 0077 0B       		.uleb128 0xb
 1183 0078 49       		.uleb128 0x49
 1184 0079 13       		.uleb128 0x13
 1185 007a 02       		.uleb128 0x2
 1186 007b 18       		.uleb128 0x18
 1187 007c 00       		.byte	0
 1188 007d 00       		.byte	0
 1189 007e 09       		.uleb128 0x9
 1190 007f 2E       		.uleb128 0x2e
 1191 0080 00       		.byte	0
 1192 0081 3F       		.uleb128 0x3f
 1193 0082 19       		.uleb128 0x19
 1194 0083 03       		.uleb128 0x3
 1195 0084 0E       		.uleb128 0xe
 1196 0085 3A       		.uleb128 0x3a
 1197 0086 0B       		.uleb128 0xb
 1198 0087 3B       		.uleb128 0x3b
 1199 0088 0B       		.uleb128 0xb
 1200 0089 27       		.uleb128 0x27
 1201 008a 19       		.uleb128 0x19
 1202 008b 11       		.uleb128 0x11
 1203 008c 01       		.uleb128 0x1
 1204 008d 12       		.uleb128 0x12
 1205 008e 06       		.uleb128 0x6
 1206 008f 40       		.uleb128 0x40
 1207 0090 18       		.uleb128 0x18
 1208 0091 9742     		.uleb128 0x2117
 1209 0093 19       		.uleb128 0x19
 1210 0094 00       		.byte	0
 1211 0095 00       		.byte	0
 1212 0096 0A       		.uleb128 0xa
 1213 0097 2E       		.uleb128 0x2e
 1214 0098 01       		.byte	0x1
 1215 0099 3F       		.uleb128 0x3f
 1216 009a 19       		.uleb128 0x19
 1217 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 38


 1218 009c 0E       		.uleb128 0xe
 1219 009d 3A       		.uleb128 0x3a
 1220 009e 0B       		.uleb128 0xb
 1221 009f 3B       		.uleb128 0x3b
 1222 00a0 05       		.uleb128 0x5
 1223 00a1 27       		.uleb128 0x27
 1224 00a2 19       		.uleb128 0x19
 1225 00a3 11       		.uleb128 0x11
 1226 00a4 01       		.uleb128 0x1
 1227 00a5 12       		.uleb128 0x12
 1228 00a6 06       		.uleb128 0x6
 1229 00a7 40       		.uleb128 0x40
 1230 00a8 18       		.uleb128 0x18
 1231 00a9 9742     		.uleb128 0x2117
 1232 00ab 19       		.uleb128 0x19
 1233 00ac 01       		.uleb128 0x1
 1234 00ad 13       		.uleb128 0x13
 1235 00ae 00       		.byte	0
 1236 00af 00       		.byte	0
 1237 00b0 0B       		.uleb128 0xb
 1238 00b1 05       		.uleb128 0x5
 1239 00b2 00       		.byte	0
 1240 00b3 03       		.uleb128 0x3
 1241 00b4 0E       		.uleb128 0xe
 1242 00b5 3A       		.uleb128 0x3a
 1243 00b6 0B       		.uleb128 0xb
 1244 00b7 3B       		.uleb128 0x3b
 1245 00b8 05       		.uleb128 0x5
 1246 00b9 49       		.uleb128 0x49
 1247 00ba 13       		.uleb128 0x13
 1248 00bb 02       		.uleb128 0x2
 1249 00bc 18       		.uleb128 0x18
 1250 00bd 00       		.byte	0
 1251 00be 00       		.byte	0
 1252 00bf 0C       		.uleb128 0xc
 1253 00c0 2E       		.uleb128 0x2e
 1254 00c1 00       		.byte	0
 1255 00c2 3F       		.uleb128 0x3f
 1256 00c3 19       		.uleb128 0x19
 1257 00c4 03       		.uleb128 0x3
 1258 00c5 0E       		.uleb128 0xe
 1259 00c6 3A       		.uleb128 0x3a
 1260 00c7 0B       		.uleb128 0xb
 1261 00c8 3B       		.uleb128 0x3b
 1262 00c9 05       		.uleb128 0x5
 1263 00ca 27       		.uleb128 0x27
 1264 00cb 19       		.uleb128 0x19
 1265 00cc 49       		.uleb128 0x49
 1266 00cd 13       		.uleb128 0x13
 1267 00ce 11       		.uleb128 0x11
 1268 00cf 01       		.uleb128 0x1
 1269 00d0 12       		.uleb128 0x12
 1270 00d1 06       		.uleb128 0x6
 1271 00d2 40       		.uleb128 0x40
 1272 00d3 18       		.uleb128 0x18
 1273 00d4 9742     		.uleb128 0x2117
 1274 00d6 19       		.uleb128 0x19
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 39


 1275 00d7 00       		.byte	0
 1276 00d8 00       		.byte	0
 1277 00d9 0D       		.uleb128 0xd
 1278 00da 2E       		.uleb128 0x2e
 1279 00db 00       		.byte	0
 1280 00dc 3F       		.uleb128 0x3f
 1281 00dd 19       		.uleb128 0x19
 1282 00de 03       		.uleb128 0x3
 1283 00df 0E       		.uleb128 0xe
 1284 00e0 3A       		.uleb128 0x3a
 1285 00e1 0B       		.uleb128 0xb
 1286 00e2 3B       		.uleb128 0x3b
 1287 00e3 05       		.uleb128 0x5
 1288 00e4 27       		.uleb128 0x27
 1289 00e5 19       		.uleb128 0x19
 1290 00e6 11       		.uleb128 0x11
 1291 00e7 01       		.uleb128 0x1
 1292 00e8 12       		.uleb128 0x12
 1293 00e9 06       		.uleb128 0x6
 1294 00ea 40       		.uleb128 0x40
 1295 00eb 18       		.uleb128 0x18
 1296 00ec 9642     		.uleb128 0x2116
 1297 00ee 19       		.uleb128 0x19
 1298 00ef 00       		.byte	0
 1299 00f0 00       		.byte	0
 1300 00f1 0E       		.uleb128 0xe
 1301 00f2 2E       		.uleb128 0x2e
 1302 00f3 01       		.byte	0x1
 1303 00f4 3F       		.uleb128 0x3f
 1304 00f5 19       		.uleb128 0x19
 1305 00f6 03       		.uleb128 0x3
 1306 00f7 0E       		.uleb128 0xe
 1307 00f8 3A       		.uleb128 0x3a
 1308 00f9 0B       		.uleb128 0xb
 1309 00fa 3B       		.uleb128 0x3b
 1310 00fb 05       		.uleb128 0x5
 1311 00fc 27       		.uleb128 0x27
 1312 00fd 19       		.uleb128 0x19
 1313 00fe 49       		.uleb128 0x49
 1314 00ff 13       		.uleb128 0x13
 1315 0100 11       		.uleb128 0x11
 1316 0101 01       		.uleb128 0x1
 1317 0102 12       		.uleb128 0x12
 1318 0103 06       		.uleb128 0x6
 1319 0104 40       		.uleb128 0x40
 1320 0105 18       		.uleb128 0x18
 1321 0106 9742     		.uleb128 0x2117
 1322 0108 19       		.uleb128 0x19
 1323 0109 01       		.uleb128 0x1
 1324 010a 13       		.uleb128 0x13
 1325 010b 00       		.byte	0
 1326 010c 00       		.byte	0
 1327 010d 0F       		.uleb128 0xf
 1328 010e 34       		.uleb128 0x34
 1329 010f 00       		.byte	0
 1330 0110 03       		.uleb128 0x3
 1331 0111 0E       		.uleb128 0xe
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 40


 1332 0112 3A       		.uleb128 0x3a
 1333 0113 0B       		.uleb128 0xb
 1334 0114 3B       		.uleb128 0x3b
 1335 0115 05       		.uleb128 0x5
 1336 0116 49       		.uleb128 0x49
 1337 0117 13       		.uleb128 0x13
 1338 0118 02       		.uleb128 0x2
 1339 0119 18       		.uleb128 0x18
 1340 011a 00       		.byte	0
 1341 011b 00       		.byte	0
 1342 011c 10       		.uleb128 0x10
 1343 011d 34       		.uleb128 0x34
 1344 011e 00       		.byte	0
 1345 011f 03       		.uleb128 0x3
 1346 0120 0E       		.uleb128 0xe
 1347 0121 3A       		.uleb128 0x3a
 1348 0122 0B       		.uleb128 0xb
 1349 0123 3B       		.uleb128 0x3b
 1350 0124 0B       		.uleb128 0xb
 1351 0125 49       		.uleb128 0x49
 1352 0126 13       		.uleb128 0x13
 1353 0127 3F       		.uleb128 0x3f
 1354 0128 19       		.uleb128 0x19
 1355 0129 02       		.uleb128 0x2
 1356 012a 18       		.uleb128 0x18
 1357 012b 00       		.byte	0
 1358 012c 00       		.byte	0
 1359 012d 00       		.byte	0
 1360              		.section	.debug_aranges,"",%progbits
 1361 0000 A4000000 		.4byte	0xa4
 1362 0004 0200     		.2byte	0x2
 1363 0006 00000000 		.4byte	.Ldebug_info0
 1364 000a 04       		.byte	0x4
 1365 000b 00       		.byte	0
 1366 000c 0000     		.2byte	0
 1367 000e 0000     		.2byte	0
 1368 0010 00000000 		.4byte	.LFB0
 1369 0014 24000000 		.4byte	.LFE0-.LFB0
 1370 0018 00000000 		.4byte	.LFB1
 1371 001c 88000000 		.4byte	.LFE1-.LFB1
 1372 0020 00000000 		.4byte	.LFB2
 1373 0024 20000000 		.4byte	.LFE2-.LFB2
 1374 0028 00000000 		.4byte	.LFB3
 1375 002c 1C000000 		.4byte	.LFE3-.LFB3
 1376 0030 00000000 		.4byte	.LFB4
 1377 0034 20000000 		.4byte	.LFE4-.LFB4
 1378 0038 00000000 		.4byte	.LFB5
 1379 003c 1C000000 		.4byte	.LFE5-.LFB5
 1380 0040 00000000 		.4byte	.LFB6
 1381 0044 1C000000 		.4byte	.LFE6-.LFB6
 1382 0048 00000000 		.4byte	.LFB7
 1383 004c 20000000 		.4byte	.LFE7-.LFB7
 1384 0050 00000000 		.4byte	.LFB8
 1385 0054 20000000 		.4byte	.LFE8-.LFB8
 1386 0058 00000000 		.4byte	.LFB9
 1387 005c 20000000 		.4byte	.LFE9-.LFB9
 1388 0060 00000000 		.4byte	.LFB10
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 41


 1389 0064 20000000 		.4byte	.LFE10-.LFB10
 1390 0068 00000000 		.4byte	.LFB11
 1391 006c 14000000 		.4byte	.LFE11-.LFB11
 1392 0070 00000000 		.4byte	.LFB12
 1393 0074 20000000 		.4byte	.LFE12-.LFB12
 1394 0078 00000000 		.4byte	.LFB13
 1395 007c 20000000 		.4byte	.LFE13-.LFB13
 1396 0080 00000000 		.4byte	.LFB14
 1397 0084 14000000 		.4byte	.LFE14-.LFB14
 1398 0088 00000000 		.4byte	.LFB15
 1399 008c 14000000 		.4byte	.LFE15-.LFB15
 1400 0090 00000000 		.4byte	.LFB16
 1401 0094 14000000 		.4byte	.LFE16-.LFB16
 1402 0098 00000000 		.4byte	.LFB17
 1403 009c 14000000 		.4byte	.LFE17-.LFB17
 1404 00a0 00000000 		.4byte	0
 1405 00a4 00000000 		.4byte	0
 1406              		.section	.debug_ranges,"",%progbits
 1407              	.Ldebug_ranges0:
 1408 0000 00000000 		.4byte	.LFB0
 1409 0004 24000000 		.4byte	.LFE0
 1410 0008 00000000 		.4byte	.LFB1
 1411 000c 88000000 		.4byte	.LFE1
 1412 0010 00000000 		.4byte	.LFB2
 1413 0014 20000000 		.4byte	.LFE2
 1414 0018 00000000 		.4byte	.LFB3
 1415 001c 1C000000 		.4byte	.LFE3
 1416 0020 00000000 		.4byte	.LFB4
 1417 0024 20000000 		.4byte	.LFE4
 1418 0028 00000000 		.4byte	.LFB5
 1419 002c 1C000000 		.4byte	.LFE5
 1420 0030 00000000 		.4byte	.LFB6
 1421 0034 1C000000 		.4byte	.LFE6
 1422 0038 00000000 		.4byte	.LFB7
 1423 003c 20000000 		.4byte	.LFE7
 1424 0040 00000000 		.4byte	.LFB8
 1425 0044 20000000 		.4byte	.LFE8
 1426 0048 00000000 		.4byte	.LFB9
 1427 004c 20000000 		.4byte	.LFE9
 1428 0050 00000000 		.4byte	.LFB10
 1429 0054 20000000 		.4byte	.LFE10
 1430 0058 00000000 		.4byte	.LFB11
 1431 005c 14000000 		.4byte	.LFE11
 1432 0060 00000000 		.4byte	.LFB12
 1433 0064 20000000 		.4byte	.LFE12
 1434 0068 00000000 		.4byte	.LFB13
 1435 006c 20000000 		.4byte	.LFE13
 1436 0070 00000000 		.4byte	.LFB14
 1437 0074 14000000 		.4byte	.LFE14
 1438 0078 00000000 		.4byte	.LFB15
 1439 007c 14000000 		.4byte	.LFE15
 1440 0080 00000000 		.4byte	.LFB16
 1441 0084 14000000 		.4byte	.LFE16
 1442 0088 00000000 		.4byte	.LFB17
 1443 008c 14000000 		.4byte	.LFE17
 1444 0090 00000000 		.4byte	0
 1445 0094 00000000 		.4byte	0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 42


 1446              		.section	.debug_line,"",%progbits
 1447              	.Ldebug_line0:
 1448 0000 A5010000 		.section	.debug_str,"MS",%progbits,1
 1448      02004200 
 1448      00000201 
 1448      FB0E0D00 
 1448      01010101 
 1449              	.LASF18:
 1450 0000 50574D5F 		.ascii	"PWM_1_Enable\000"
 1450      315F456E 
 1450      61626C65 
 1450      00
 1451              	.LASF40:
 1452 000d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1452      4320342E 
 1452      392E3320 
 1452      32303135 
 1452      30333033 
 1453 0040 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1453      20726576 
 1453      6973696F 
 1453      6E203232 
 1453      31323230 
 1454 0073 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1454      66756E63 
 1454      74696F6E 
 1454      2D736563 
 1454      74696F6E 
 1455              	.LASF21:
 1456 009b 50574D5F 		.ascii	"PWM_1_WriteCounter\000"
 1456      315F5772 
 1456      69746543 
 1456      6F756E74 
 1456      657200
 1457              	.LASF22:
 1458 00ae 50574D5F 		.ascii	"PWM_1_ClearFIFO\000"
 1458      315F436C 
 1458      65617246 
 1458      49464F00 
 1459              	.LASF25:
 1460 00be 70657269 		.ascii	"period\000"
 1460      6F6400
 1461              	.LASF37:
 1462 00c5 50574D5F 		.ascii	"PWM_1_ReadCompare1\000"
 1462      315F5265 
 1462      6164436F 
 1462      6D706172 
 1462      653100
 1463              	.LASF38:
 1464 00d8 50574D5F 		.ascii	"PWM_1_ReadCompare2\000"
 1464      315F5265 
 1464      6164436F 
 1464      6D706172 
 1464      653200
 1465              	.LASF3:
 1466 00eb 73686F72 		.ascii	"short unsigned int\000"
 1466      7420756E 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 43


 1466      7369676E 
 1466      65642069 
 1466      6E7400
 1467              	.LASF26:
 1468 00fe 50574D5F 		.ascii	"PWM_1_WriteCompare1\000"
 1468      315F5772 
 1468      69746543 
 1468      6F6D7061 
 1468      72653100 
 1469              	.LASF28:
 1470 0112 50574D5F 		.ascii	"PWM_1_WriteCompare2\000"
 1470      315F5772 
 1470      69746543 
 1470      6F6D7061 
 1470      72653200 
 1471              	.LASF41:
 1472 0126 47656E65 		.ascii	"Generated_Source\\PSoC4\\PWM_1.c\000"
 1472      72617465 
 1472      645F536F 
 1472      75726365 
 1472      5C50536F 
 1473              	.LASF9:
 1474 0145 666C6F61 		.ascii	"float\000"
 1474      7400
 1475              	.LASF24:
 1476 014b 636F756E 		.ascii	"counter\000"
 1476      74657200 
 1477              	.LASF1:
 1478 0153 756E7369 		.ascii	"unsigned char\000"
 1478      676E6564 
 1478      20636861 
 1478      7200
 1479              	.LASF13:
 1480 0161 72656738 		.ascii	"reg8\000"
 1480      00
 1481              	.LASF39:
 1482 0166 50574D5F 		.ascii	"PWM_1_ReadPeriod\000"
 1482      315F5265 
 1482      61645065 
 1482      72696F64 
 1482      00
 1483              	.LASF5:
 1484 0177 6C6F6E67 		.ascii	"long unsigned int\000"
 1484      20756E73 
 1484      69676E65 
 1484      6420696E 
 1484      7400
 1485              	.LASF12:
 1486 0189 75696E74 		.ascii	"uint8\000"
 1486      3800
 1487              	.LASF35:
 1488 018f 636F6E74 		.ascii	"control\000"
 1488      726F6C00 
 1489              	.LASF29:
 1490 0197 50574D5F 		.ascii	"PWM_1_SetInterruptMode\000"
 1490      315F5365 
 1490      74496E74 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 44


 1490      65727275 
 1490      70744D6F 
 1491              	.LASF32:
 1492 01ae 50574D5F 		.ascii	"PWM_1_ReadStatusRegister\000"
 1492      315F5265 
 1492      61645374 
 1492      61747573 
 1492      52656769 
 1493              	.LASF10:
 1494 01c7 646F7562 		.ascii	"double\000"
 1494      6C6500
 1495              	.LASF16:
 1496 01ce 50574D5F 		.ascii	"PWM_1_interruptState\000"
 1496      315F696E 
 1496      74657272 
 1496      75707453 
 1496      74617465 
 1497              	.LASF44:
 1498 01e3 50574D5F 		.ascii	"PWM_1_initVar\000"
 1498      315F696E 
 1498      69745661 
 1498      7200
 1499              	.LASF2:
 1500 01f1 73686F72 		.ascii	"short int\000"
 1500      7420696E 
 1500      7400
 1501              	.LASF36:
 1502 01fb 50574D5F 		.ascii	"PWM_1_ReadCapture\000"
 1502      315F5265 
 1502      61644361 
 1502      70747572 
 1502      6500
 1503              	.LASF34:
 1504 020d 50574D5F 		.ascii	"PWM_1_WriteControlRegister\000"
 1504      315F5772 
 1504      69746543 
 1504      6F6E7472 
 1504      6F6C5265 
 1505              	.LASF20:
 1506 0228 50574D5F 		.ascii	"PWM_1_Init\000"
 1506      315F496E 
 1506      697400
 1507              	.LASF8:
 1508 0233 756E7369 		.ascii	"unsigned int\000"
 1508      676E6564 
 1508      20696E74 
 1508      00
 1509              	.LASF7:
 1510 0240 6C6F6E67 		.ascii	"long long unsigned int\000"
 1510      206C6F6E 
 1510      6720756E 
 1510      7369676E 
 1510      65642069 
 1511              	.LASF42:
 1512 0257 433A5C55 		.ascii	"C:\\Users\\edmun\\Desktop\\safe\\full_integration -"
 1512      73657273 
 1512      5C65646D 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 45


 1512      756E5C44 
 1512      65736B74 
 1513 0285 20436F70 		.ascii	" Copy\\KIT042_Accelerometer_LightPaint.cydsn\000"
 1513      795C4B49 
 1513      54303432 
 1513      5F416363 
 1513      656C6572 
 1514              	.LASF33:
 1515 02b1 72657375 		.ascii	"result\000"
 1515      6C7400
 1516              	.LASF15:
 1517 02b8 6374726C 		.ascii	"ctrl\000"
 1517      00
 1518              	.LASF14:
 1519 02bd 73697A65 		.ascii	"sizetype\000"
 1519      74797065 
 1519      00
 1520              	.LASF6:
 1521 02c6 6C6F6E67 		.ascii	"long long int\000"
 1521      206C6F6E 
 1521      6720696E 
 1521      7400
 1522              	.LASF43:
 1523 02d4 50574D5F 		.ascii	"PWM_1_ReadControlRegister\000"
 1523      315F5265 
 1523      6164436F 
 1523      6E74726F 
 1523      6C526567 
 1524              	.LASF30:
 1525 02ee 696E7465 		.ascii	"interruptMode\000"
 1525      72727570 
 1525      744D6F64 
 1525      6500
 1526              	.LASF23:
 1527 02fc 50574D5F 		.ascii	"PWM_1_WritePeriod\000"
 1527      315F5772 
 1527      69746550 
 1527      6572696F 
 1527      6400
 1528              	.LASF31:
 1529 030e 50574D5F 		.ascii	"PWM_1_ReadCounter\000"
 1529      315F5265 
 1529      6164436F 
 1529      756E7465 
 1529      7200
 1530              	.LASF19:
 1531 0320 50574D5F 		.ascii	"PWM_1_Stop\000"
 1531      315F5374 
 1531      6F7000
 1532              	.LASF4:
 1533 032b 6C6F6E67 		.ascii	"long int\000"
 1533      20696E74 
 1533      00
 1534              	.LASF11:
 1535 0334 63686172 		.ascii	"char\000"
 1535      00
 1536              	.LASF0:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccRyGFlc.s 			page 46


 1537 0339 7369676E 		.ascii	"signed char\000"
 1537      65642063 
 1537      68617200 
 1538              	.LASF27:
 1539 0345 636F6D70 		.ascii	"compare\000"
 1539      61726500 
 1540              	.LASF17:
 1541 034d 50574D5F 		.ascii	"PWM_1_Start\000"
 1541      315F5374 
 1541      61727400 
 1542              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
