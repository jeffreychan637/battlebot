ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"UART_Debug_SPI_UART.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.UART_Debug_SpiUartWriteTxData,"ax",%progbits
  18              		.align	2
  19              		.global	UART_Debug_SpiUartWriteTxData
  20              		.code	16
  21              		.thumb_func
  22              		.type	UART_Debug_SpiUartWriteTxData, %function
  23              	UART_Debug_SpiUartWriteTxData:
  24              	.LFB0:
  25              		.file 1 "Generated_Source\\PSoC4\\UART_Debug_SPI_UART.c"
   1:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * \file UART_Debug_SPI_UART.c
   3:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * \version 3.20
   4:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
   5:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * \brief
   6:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  This file provides the source code to the API for the SCB Component in
   7:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  SPI and UART modes.
   8:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
   9:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * Note:
  10:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
  11:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *******************************************************************************
  12:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * \copyright
  13:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  19:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #include "UART_Debug_PVT.h"
  20:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #include "UART_Debug_SPI_UART_PVT.h"
  21:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  22:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** /***************************************
  23:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *        SPI/UART Private Vars
  24:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** ***************************************/
  25:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  26:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_INTERNAL_RX_SW_BUFFER_CONST)
  27:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /* Start index to put data into the software receive buffer.*/
  28:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint32 UART_Debug_rxBufferHead;
  29:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /* Start index to get data from the software receive buffer.*/
  30:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint32 UART_Debug_rxBufferTail;
  31:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /**
  32:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \addtogroup group_globals
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 2


  33:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \{
  34:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     */
  35:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /** Sets when internal software receive buffer overflow
  36:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  was occurred.
  37:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     */
  38:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint8  UART_Debug_rxBufferOverflow;
  39:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /** \} globals */
  40:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_INTERNAL_RX_SW_BUFFER_CONST) */
  41:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  42:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_INTERNAL_TX_SW_BUFFER_CONST)
  43:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /* Start index to put data into the software transmit buffer.*/
  44:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint32 UART_Debug_txBufferHead;
  45:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /* Start index to get data from the software transmit buffer.*/
  46:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint32 UART_Debug_txBufferTail;
  47:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_INTERNAL_TX_SW_BUFFER_CONST) */
  48:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  49:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_INTERNAL_RX_SW_BUFFER)
  50:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /* Add one element to the buffer to receive full packet. One byte in receive buffer is always e
  51:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint8 UART_Debug_rxBufferInternal[UART_Debug_INTERNAL_RX_BUFFER_SIZE];
  52:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_INTERNAL_RX_SW_BUFFER) */
  53:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  54:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_INTERNAL_TX_SW_BUFFER)
  55:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     volatile uint8 UART_Debug_txBufferInternal[UART_Debug_TX_BUFFER_SIZE];
  56:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_INTERNAL_TX_SW_BUFFER) */
  57:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  58:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  59:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_RX_DIRECTION)
  60:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
  61:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartReadRxData
  62:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
  63:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
  64:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Retrieves the next data element from the receive buffer.
  65:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - RX software buffer is disabled: Returns data element retrieved from
  66:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     RX FIFO. Undefined data will be returned if the RX FIFO is empty.
  67:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - RX software buffer is enabled: Returns data element from the software
  68:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     receive buffer. Zero value is returned if the software receive buffer
  69:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     is empty.
  70:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
  71:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \return
  72:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Next data element from the receive buffer. 
  73:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  The amount of data bits to be received depends on RX data bits selection 
  74:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  (the data bit counting starts from LSB of return value).
  75:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
  76:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
  77:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferHead - the start index to put data into the 
  78:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
  79:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferTail - the start index to get data from the 
  80:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
  81:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
  82:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
  83:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     uint32 UART_Debug_SpiUartReadRxData(void)
  84:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
  85:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 rxData = 0u;
  86:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  87:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #if (UART_Debug_INTERNAL_RX_SW_BUFFER_CONST)
  88:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 locTail;
  89:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #endif /* (UART_Debug_INTERNAL_RX_SW_BUFFER_CONST) */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 3


  90:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  91:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_RX_SW_BUFFER)
  92:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
  93:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             if (UART_Debug_rxBufferHead != UART_Debug_rxBufferTail)
  94:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
  95:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* There is data in RX software buffer */
  96:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
  97:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Calculate index to read from */
  98:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 locTail = (UART_Debug_rxBufferTail + 1u);
  99:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 100:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 if (UART_Debug_INTERNAL_RX_BUFFER_SIZE == locTail)
 101:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 {
 102:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     locTail = 0u;
 103:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 }
 104:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 105:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Get data from RX software buffer */
 106:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 rxData = UART_Debug_GetWordFromRxBuffer(locTail);
 107:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 108:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Change index in the buffer */
 109:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_rxBufferTail = locTail;
 110:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 111:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 #if (UART_Debug_CHECK_UART_RTS_CONTROL_FLOW)
 112:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 {
 113:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     /* Check if RX Not Empty is disabled in the interrupt */
 114:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     if (0u == (UART_Debug_INTR_RX_MASK_REG & UART_Debug_INTR_RX_NOT_EMPTY))
 115:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     {
 116:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                         /* Enable RX Not Empty interrupt source to continue
 117:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                         * receiving data into software buffer.
 118:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                         */
 119:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                         UART_Debug_INTR_RX_MASK_REG |= UART_Debug_INTR_RX_NOT_EMPTY;
 120:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     }
 121:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 }
 122:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 #endif
 123:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 124:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 125:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 126:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
 127:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 128:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Read data from RX FIFO */
 129:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             rxData = UART_Debug_RX_FIFO_RD_REG;
 130:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 131:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 132:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 133:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         return (rxData);
 134:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 135:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 136:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 137:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 138:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartGetRxBufferSize
 139:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 140:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 141:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Returns the number of received data elements in the receive buffer.
 142:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - RX software buffer disabled: returns the number of used entries in
 143:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     RX FIFO.
 144:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - RX software buffer enabled: returns the number of elements which were
 145:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     placed in the receive buffer. This does not include the hardware RX FIFO.
 146:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 4


 147:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \return
 148:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Number of received data elements.
 149:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 150:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 151:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferHead - the start index to put data into the 
 152:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
 153:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferTail - the start index to get data from the 
 154:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
 155:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 156:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 157:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     uint32 UART_Debug_SpiUartGetRxBufferSize(void)
 158:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
 159:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 size;
 160:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #if (UART_Debug_INTERNAL_RX_SW_BUFFER_CONST)
 161:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 locHead;
 162:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #endif /* (UART_Debug_INTERNAL_RX_SW_BUFFER_CONST) */
 163:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 164:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_RX_SW_BUFFER)
 165:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 166:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             locHead = UART_Debug_rxBufferHead;
 167:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 168:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             if(locHead >= UART_Debug_rxBufferTail)
 169:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 170:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 size = (locHead - UART_Debug_rxBufferTail);
 171:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 172:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             else
 173:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 174:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 size = (locHead + (UART_Debug_INTERNAL_RX_BUFFER_SIZE - UART_Debug_rxBufferTail));
 175:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 176:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 177:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
 178:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 179:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             size = UART_Debug_GET_RX_FIFO_ENTRIES;
 180:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 181:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 182:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 183:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         return (size);
 184:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 185:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 186:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 187:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 188:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartClearRxBuffer
 189:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 190:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 191:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Clears the receive buffer and RX FIFO.
 192:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 193:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 194:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferHead - the start index to put data into the 
 195:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
 196:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_rxBufferTail - the start index to get data from the 
 197:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software receive buffer.
 198:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 199:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 200:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     void UART_Debug_SpiUartClearRxBuffer(void)
 201:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
 202:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_RX_SW_BUFFER)
 203:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 5


 204:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Lock from component interruption */
 205:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_DisableInt();
 206:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 207:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Flush RX software buffer */
 208:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_rxBufferHead = UART_Debug_rxBufferTail;
 209:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_rxBufferOverflow = 0u;
 210:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 211:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_CLEAR_RX_FIFO;
 212:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_ClearRxInterruptSource(UART_Debug_INTR_RX_ALL);
 213:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 214:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             #if (UART_Debug_CHECK_UART_RTS_CONTROL_FLOW)
 215:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 216:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Enable RX Not Empty interrupt source to continue receiving
 217:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 * data into software buffer.
 218:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 */
 219:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_INTR_RX_MASK_REG |= UART_Debug_INTR_RX_NOT_EMPTY;
 220:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 221:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             #endif
 222:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             
 223:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Release lock */
 224:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_EnableInt();
 225:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 226:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
 227:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 228:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_CLEAR_RX_FIFO;
 229:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 230:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 231:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 232:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 233:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_RX_DIRECTION) */
 234:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 235:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 236:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #if(UART_Debug_TX_DIRECTION)
 237:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 238:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartWriteTxData
 239:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 240:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 241:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Places a data entry into the transmit buffer to be sent at the next available
 242:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  bus time.
 243:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  This function is blocking and waits until there is space available to put the
 244:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  requested data in the transmit buffer.
 245:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 246:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  \param txDataByte: the data to be transmitted.
 247:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   The amount of data bits to be transmitted depends on TX data bits selection 
 248:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   (the data bit counting starts from LSB of txDataByte).
 249:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 250:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 251:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferHead - the start index to put data into the 
 252:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software transmit buffer.
 253:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferTail - start index to get data from the software
 254:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  transmit buffer.
 255:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 256:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 257:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     void UART_Debug_SpiUartWriteTxData(uint32 txData)
 258:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
  26              		.loc 1 258 0
  27              		.cfi_startproc
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 6


  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
 259:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #if (UART_Debug_INTERNAL_TX_SW_BUFFER_CONST)
 260:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 locHead;
 261:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #endif /* (UART_Debug_INTERNAL_TX_SW_BUFFER_CONST) */
 262:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 263:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_TX_SW_BUFFER)
 264:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 265:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Put data directly into the TX FIFO */
 266:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             if ((UART_Debug_txBufferHead == UART_Debug_txBufferTail) &&
 267:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 (UART_Debug_SPI_UART_FIFO_SIZE != UART_Debug_GET_TX_FIFO_ENTRIES))
 268:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 269:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* TX software buffer is empty: put data directly in TX FIFO */
 270:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_TX_FIFO_WR_REG = txData;
 271:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 272:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Put data into TX software buffer */
 273:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             else
 274:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 275:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Head index to put data */
 276:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 locHead = (UART_Debug_txBufferHead + 1u);
 277:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 278:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Adjust TX software buffer index */
 279:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 if (UART_Debug_TX_BUFFER_SIZE == locHead)
 280:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 {
 281:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     locHead = 0u;
 282:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 }
 283:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 284:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Wait for space in TX software buffer */
 285:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 while (locHead == UART_Debug_txBufferTail)
 286:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 {
 287:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 }
 288:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 289:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* TX software buffer has at least one room */
 290:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 291:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Clear old status of INTR_TX_NOT_FULL. It sets at the end of transfer when TX FIF
 292:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_ClearTxInterruptSource(UART_Debug_INTR_TX_NOT_FULL);
 293:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 294:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_PutWordInTxBuffer(locHead, txData);
 295:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 296:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 UART_Debug_txBufferHead = locHead;
 297:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 298:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 /* Check if TX Not Full is disabled in interrupt */
 299:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 if (0u == (UART_Debug_INTR_TX_MASK_REG & UART_Debug_INTR_TX_NOT_FULL))
 300:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 {
 301:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     /* Enable TX Not Full interrupt source to transmit from software buffer */
 302:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                     UART_Debug_INTR_TX_MASK_REG |= (uint32) UART_Debug_INTR_TX_NOT_FULL;
 303:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 }
 304:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 305:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 306:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 7


 307:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 308:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Wait until TX FIFO has space to put data element */
 309:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             while (UART_Debug_SPI_UART_FIFO_SIZE == UART_Debug_GET_TX_FIFO_ENTRIES)
  37              		.loc 1 309 0
  38 0008 C046     		mov	r8, r8
  39              	.L2:
  40              		.loc 1 309 0 is_stmt 0 discriminator 1
  41 000a 064B     		ldr	r3, .L3
  42 000c 1B68     		ldr	r3, [r3]
  43 000e 0F22     		mov	r2, #15
  44 0010 1340     		and	r3, r2
  45 0012 082B     		cmp	r3, #8
  46 0014 F9D0     		beq	.L2
 310:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 311:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 312:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 313:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_TX_FIFO_WR_REG = txData;
  47              		.loc 1 313 0 is_stmt 1
  48 0016 044B     		ldr	r3, .L3+4
  49 0018 7A68     		ldr	r2, [r7, #4]
  50 001a 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 315:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 316:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
  51              		.loc 1 316 0
  52 001c BD46     		mov	sp, r7
  53 001e 02B0     		add	sp, sp, #8
  54              		@ sp needed
  55 0020 80BD     		pop	{r7, pc}
  56              	.L4:
  57 0022 C046     		.align	2
  58              	.L3:
  59 0024 08020640 		.word	1074135560
  60 0028 40020640 		.word	1074135616
  61              		.cfi_endproc
  62              	.LFE0:
  63              		.size	UART_Debug_SpiUartWriteTxData, .-UART_Debug_SpiUartWriteTxData
  64              		.section	.text.UART_Debug_SpiUartPutArray,"ax",%progbits
  65              		.align	2
  66              		.global	UART_Debug_SpiUartPutArray
  67              		.code	16
  68              		.thumb_func
  69              		.type	UART_Debug_SpiUartPutArray, %function
  70              	UART_Debug_SpiUartPutArray:
  71              	.LFB1:
 317:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 318:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 319:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 320:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartPutArray
 321:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 322:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 323:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Places an array of data into the transmit buffer to be sent.
 324:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  This function is blocking and waits until there is a space available to put
 325:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  all the requested data in the transmit buffer. The array size can be greater
 326:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  than transmit buffer size.
 327:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 328:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \param wrBuf: pointer to an array of data to be placed in transmit buffer. 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 8


 329:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  The width of the data to be transmitted depends on TX data width selection 
 330:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  (the data bit counting starts from LSB for each array element).
 331:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \param count: number of data elements to be placed in the transmit buffer.
 332:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 333:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 334:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferHead - the start index to put data into the 
 335:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software transmit buffer.
 336:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferTail - start index to get data from the software
 337:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  transmit buffer.
 338:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 339:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 340:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     void UART_Debug_SpiUartPutArray(const uint8 wrBuf[], uint32 count)
 341:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
  72              		.loc 1 341 0
  73              		.cfi_startproc
  74 0000 80B5     		push	{r7, lr}
  75              		.cfi_def_cfa_offset 8
  76              		.cfi_offset 7, -8
  77              		.cfi_offset 14, -4
  78 0002 84B0     		sub	sp, sp, #16
  79              		.cfi_def_cfa_offset 24
  80 0004 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  82 0006 7860     		str	r0, [r7, #4]
  83 0008 3960     		str	r1, [r7]
 342:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 i;
 343:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 344:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         for (i=0u; i < count; i++)
  84              		.loc 1 344 0
  85 000a 0023     		mov	r3, #0
  86 000c FB60     		str	r3, [r7, #12]
  87 000e 09E0     		b	.L6
  88              	.L7:
 345:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 346:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_SpiUartWriteTxData((uint32) wrBuf[i]);
  89              		.loc 1 346 0 discriminator 3
  90 0010 7A68     		ldr	r2, [r7, #4]
  91 0012 FB68     		ldr	r3, [r7, #12]
  92 0014 D318     		add	r3, r2, r3
  93 0016 1B78     		ldrb	r3, [r3]
  94 0018 181C     		mov	r0, r3
  95 001a FFF7FEFF 		bl	UART_Debug_SpiUartWriteTxData
 344:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
  96              		.loc 1 344 0 discriminator 3
  97 001e FB68     		ldr	r3, [r7, #12]
  98 0020 0133     		add	r3, r3, #1
  99 0022 FB60     		str	r3, [r7, #12]
 100              	.L6:
 344:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 101              		.loc 1 344 0 is_stmt 0 discriminator 1
 102 0024 FA68     		ldr	r2, [r7, #12]
 103 0026 3B68     		ldr	r3, [r7]
 104 0028 9A42     		cmp	r2, r3
 105 002a F1D3     		bcc	.L7
 347:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 348:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 106              		.loc 1 348 0 is_stmt 1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 9


 107 002c BD46     		mov	sp, r7
 108 002e 04B0     		add	sp, sp, #16
 109              		@ sp needed
 110 0030 80BD     		pop	{r7, pc}
 111              		.cfi_endproc
 112              	.LFE1:
 113              		.size	UART_Debug_SpiUartPutArray, .-UART_Debug_SpiUartPutArray
 114 0032 C046     		.section	.text.UART_Debug_SpiUartGetTxBufferSize,"ax",%progbits
 115              		.align	2
 116              		.global	UART_Debug_SpiUartGetTxBufferSize
 117              		.code	16
 118              		.thumb_func
 119              		.type	UART_Debug_SpiUartGetTxBufferSize, %function
 120              	UART_Debug_SpiUartGetTxBufferSize:
 121              	.LFB2:
 349:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 350:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 351:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 352:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartGetTxBufferSize
 353:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 354:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 355:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Returns the number of elements currently in the transmit buffer.
 356:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - TX software buffer is disabled: returns the number of used entries in
 357:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     TX FIFO.
 358:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *   - TX software buffer is enabled: returns the number of elements currently
 359:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     used in the transmit buffer. This number does not include used entries in
 360:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     the TX FIFO. The transmit buffer size is zero until the TX FIFO is
 361:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *     not full.
 362:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 363:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \return
 364:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Number of data elements ready to transmit.
 365:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 366:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 367:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferHead - the start index to put data into the 
 368:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software transmit buffer.
 369:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferTail - start index to get data from the software
 370:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  transmit buffer.
 371:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 372:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 373:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     uint32 UART_Debug_SpiUartGetTxBufferSize(void)
 374:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
 122              		.loc 1 374 0
 123              		.cfi_startproc
 124 0000 80B5     		push	{r7, lr}
 125              		.cfi_def_cfa_offset 8
 126              		.cfi_offset 7, -8
 127              		.cfi_offset 14, -4
 128 0002 82B0     		sub	sp, sp, #8
 129              		.cfi_def_cfa_offset 16
 130 0004 00AF     		add	r7, sp, #0
 131              		.cfi_def_cfa_register 7
 375:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 size;
 376:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #if (UART_Debug_INTERNAL_TX_SW_BUFFER_CONST)
 377:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         uint32 locTail;
 378:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     #endif /* (UART_Debug_INTERNAL_TX_SW_BUFFER_CONST) */
 379:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 380:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_TX_SW_BUFFER)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 10


 381:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 382:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Get current Tail index */
 383:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             locTail = UART_Debug_txBufferTail;
 384:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 385:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             if (UART_Debug_txBufferHead >= locTail)
 386:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 387:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 size = (UART_Debug_txBufferHead - locTail);
 388:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 389:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             else
 390:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             {
 391:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****                 size = (UART_Debug_txBufferHead + (UART_Debug_TX_BUFFER_SIZE - locTail));
 392:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             }
 393:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 394:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
 395:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 396:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             size = UART_Debug_GET_TX_FIFO_ENTRIES;
 132              		.loc 1 396 0
 133 0006 054B     		ldr	r3, .L10
 134 0008 1B68     		ldr	r3, [r3]
 135 000a 0F22     		mov	r2, #15
 136 000c 1340     		and	r3, r2
 137 000e 7B60     		str	r3, [r7, #4]
 397:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 398:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 399:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 400:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         return (size);
 138              		.loc 1 400 0
 139 0010 7B68     		ldr	r3, [r7, #4]
 401:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 140              		.loc 1 401 0
 141 0012 181C     		mov	r0, r3
 142 0014 BD46     		mov	sp, r7
 143 0016 02B0     		add	sp, sp, #8
 144              		@ sp needed
 145 0018 80BD     		pop	{r7, pc}
 146              	.L11:
 147 001a C046     		.align	2
 148              	.L10:
 149 001c 08020640 		.word	1074135560
 150              		.cfi_endproc
 151              	.LFE2:
 152              		.size	UART_Debug_SpiUartGetTxBufferSize, .-UART_Debug_SpiUartGetTxBufferSize
 153              		.section	.text.UART_Debug_SpiUartClearTxBuffer,"ax",%progbits
 154              		.align	2
 155              		.global	UART_Debug_SpiUartClearTxBuffer
 156              		.code	16
 157              		.thumb_func
 158              		.type	UART_Debug_SpiUartClearTxBuffer, %function
 159              	UART_Debug_SpiUartClearTxBuffer:
 160              	.LFB3:
 402:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 403:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 404:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     /*******************************************************************************
 405:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * Function Name: UART_Debug_SpiUartClearTxBuffer
 406:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     ****************************************************************************//**
 407:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 408:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  Clears the transmit buffer and TX FIFO.
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 11


 409:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 410:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     * \globalvars
 411:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferHead - the start index to put data into the 
 412:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  software transmit buffer.
 413:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  UART_Debug_txBufferTail - start index to get data from the software
 414:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *  transmit buffer.
 415:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *
 416:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     *******************************************************************************/
 417:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     void UART_Debug_SpiUartClearTxBuffer(void)
 418:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     {
 161              		.loc 1 418 0
 162              		.cfi_startproc
 163 0000 80B5     		push	{r7, lr}
 164              		.cfi_def_cfa_offset 8
 165              		.cfi_offset 7, -8
 166              		.cfi_offset 14, -4
 167 0002 00AF     		add	r7, sp, #0
 168              		.cfi_def_cfa_register 7
 419:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #if (UART_Debug_CHECK_TX_SW_BUFFER)
 420:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 421:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Lock from component interruption */
 422:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_DisableInt();
 423:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 424:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Flush TX software buffer */
 425:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_txBufferHead = UART_Debug_txBufferTail;
 426:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 427:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_INTR_TX_MASK_REG &= (uint32) ~UART_Debug_INTR_TX_NOT_FULL;
 428:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_CLEAR_TX_FIFO;
 429:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_ClearTxInterruptSource(UART_Debug_INTR_TX_ALL);
 430:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 431:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             /* Release lock */
 432:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_EnableInt();
 433:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 434:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #else
 435:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         {
 436:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****             UART_Debug_CLEAR_TX_FIFO;
 169              		.loc 1 436 0
 170 0004 074B     		ldr	r3, .L13
 171 0006 074A     		ldr	r2, .L13
 172 0008 1268     		ldr	r2, [r2]
 173 000a 8021     		mov	r1, #128
 174 000c 4902     		lsl	r1, r1, #9
 175 000e 0A43     		orr	r2, r1
 176 0010 1A60     		str	r2, [r3]
 177 0012 044B     		ldr	r3, .L13
 178 0014 034A     		ldr	r2, .L13
 179 0016 1268     		ldr	r2, [r2]
 180 0018 0349     		ldr	r1, .L13+4
 181 001a 0A40     		and	r2, r1
 182 001c 1A60     		str	r2, [r3]
 437:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         }
 438:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****         #endif
 439:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     }
 183              		.loc 1 439 0
 184 001e BD46     		mov	sp, r7
 185              		@ sp needed
 186 0020 80BD     		pop	{r7, pc}
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 12


 187              	.L14:
 188 0022 C046     		.align	2
 189              	.L13:
 190 0024 04020640 		.word	1074135556
 191 0028 FFFFFEFF 		.word	-65537
 192              		.cfi_endproc
 193              	.LFE3:
 194              		.size	UART_Debug_SpiUartClearTxBuffer, .-UART_Debug_SpiUartClearTxBuffer
 195              		.section	.text.UART_Debug_SpiUartDisableIntRx,"ax",%progbits
 196              		.align	2
 197              		.global	UART_Debug_SpiUartDisableIntRx
 198              		.code	16
 199              		.thumb_func
 200              		.type	UART_Debug_SpiUartDisableIntRx, %function
 201              	UART_Debug_SpiUartDisableIntRx:
 202              	.LFB4:
 440:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 441:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** #endif /* (UART_Debug_TX_DIRECTION) */
 442:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 443:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 444:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** /*******************************************************************************
 445:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * Function Name: UART_Debug_SpiUartDisableIntRx
 446:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** ****************************************************************************//**
 447:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 448:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  Disables the RX interrupt sources.
 449:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 450:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  \return
 451:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *   Returns the RX interrupt sources enabled before the function call.
 452:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 453:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *******************************************************************************/
 454:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** uint32 UART_Debug_SpiUartDisableIntRx(void)
 455:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** {
 203              		.loc 1 455 0
 204              		.cfi_startproc
 205 0000 80B5     		push	{r7, lr}
 206              		.cfi_def_cfa_offset 8
 207              		.cfi_offset 7, -8
 208              		.cfi_offset 14, -4
 209 0002 82B0     		sub	sp, sp, #8
 210              		.cfi_def_cfa_offset 16
 211 0004 00AF     		add	r7, sp, #0
 212              		.cfi_def_cfa_register 7
 456:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     uint32 intSource;
 457:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 458:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     intSource = UART_Debug_GetRxInterruptMode();
 213              		.loc 1 458 0
 214 0006 054B     		ldr	r3, .L17
 215 0008 1B68     		ldr	r3, [r3]
 216 000a 7B60     		str	r3, [r7, #4]
 459:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 460:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     UART_Debug_SetRxInterruptMode(UART_Debug_NO_INTR_SOURCES);
 217              		.loc 1 460 0
 218 000c 034B     		ldr	r3, .L17
 219 000e 0022     		mov	r2, #0
 220 0010 1A60     		str	r2, [r3]
 461:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 462:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     return (intSource);
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 13


 221              		.loc 1 462 0
 222 0012 7B68     		ldr	r3, [r7, #4]
 463:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** }
 223              		.loc 1 463 0
 224 0014 181C     		mov	r0, r3
 225 0016 BD46     		mov	sp, r7
 226 0018 02B0     		add	sp, sp, #8
 227              		@ sp needed
 228 001a 80BD     		pop	{r7, pc}
 229              	.L18:
 230              		.align	2
 231              	.L17:
 232 001c C80F0640 		.word	1074139080
 233              		.cfi_endproc
 234              	.LFE4:
 235              		.size	UART_Debug_SpiUartDisableIntRx, .-UART_Debug_SpiUartDisableIntRx
 236              		.section	.text.UART_Debug_SpiUartDisableIntTx,"ax",%progbits
 237              		.align	2
 238              		.global	UART_Debug_SpiUartDisableIntTx
 239              		.code	16
 240              		.thumb_func
 241              		.type	UART_Debug_SpiUartDisableIntTx, %function
 242              	UART_Debug_SpiUartDisableIntTx:
 243              	.LFB5:
 464:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 465:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 466:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** /*******************************************************************************
 467:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** * Function Name: UART_Debug_SpiUartDisableIntTx
 468:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** ****************************************************************************//**
 469:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 470:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  Disables TX interrupt sources.
 471:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 472:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *  \return
 473:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *   Returns TX interrupt sources enabled before function call.
 474:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *
 475:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** *******************************************************************************/
 476:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** uint32 UART_Debug_SpiUartDisableIntTx(void)
 477:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** {
 244              		.loc 1 477 0
 245              		.cfi_startproc
 246 0000 80B5     		push	{r7, lr}
 247              		.cfi_def_cfa_offset 8
 248              		.cfi_offset 7, -8
 249              		.cfi_offset 14, -4
 250 0002 82B0     		sub	sp, sp, #8
 251              		.cfi_def_cfa_offset 16
 252 0004 00AF     		add	r7, sp, #0
 253              		.cfi_def_cfa_register 7
 478:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     uint32 intSourceMask;
 479:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 480:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     intSourceMask = UART_Debug_GetTxInterruptMode();
 254              		.loc 1 480 0
 255 0006 054B     		ldr	r3, .L21
 256 0008 1B68     		ldr	r3, [r3]
 257 000a 7B60     		str	r3, [r7, #4]
 481:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 482:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     UART_Debug_SetTxInterruptMode(UART_Debug_NO_INTR_SOURCES);
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 14


 258              		.loc 1 482 0
 259 000c 034B     		ldr	r3, .L21
 260 000e 0022     		mov	r2, #0
 261 0010 1A60     		str	r2, [r3]
 483:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** 
 484:Generated_Source\PSoC4/UART_Debug_SPI_UART.c ****     return (intSourceMask);
 262              		.loc 1 484 0
 263 0012 7B68     		ldr	r3, [r7, #4]
 485:Generated_Source\PSoC4/UART_Debug_SPI_UART.c **** }
 264              		.loc 1 485 0
 265 0014 181C     		mov	r0, r3
 266 0016 BD46     		mov	sp, r7
 267 0018 02B0     		add	sp, sp, #8
 268              		@ sp needed
 269 001a 80BD     		pop	{r7, pc}
 270              	.L22:
 271              		.align	2
 272              	.L21:
 273 001c 880F0640 		.word	1074139016
 274              		.cfi_endproc
 275              	.LFE5:
 276              		.size	UART_Debug_SpiUartDisableIntTx, .-UART_Debug_SpiUartDisableIntTx
 277              		.text
 278              	.Letext0:
 279              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 280              		.section	.debug_info,"",%progbits
 281              	.Ldebug_info0:
 282 0000 AC010000 		.4byte	0x1ac
 283 0004 0400     		.2byte	0x4
 284 0006 00000000 		.4byte	.Ldebug_abbrev0
 285 000a 04       		.byte	0x4
 286 000b 01       		.uleb128 0x1
 287 000c 56010000 		.4byte	.LASF27
 288 0010 01       		.byte	0x1
 289 0011 81000000 		.4byte	.LASF28
 290 0015 00000000 		.4byte	.LASF29
 291 0019 00000000 		.4byte	.Ldebug_ranges0+0
 292 001d 00000000 		.4byte	0
 293 0021 00000000 		.4byte	.Ldebug_line0
 294 0025 02       		.uleb128 0x2
 295 0026 01       		.byte	0x1
 296 0027 06       		.byte	0x6
 297 0028 67020000 		.4byte	.LASF0
 298 002c 02       		.uleb128 0x2
 299 002d 01       		.byte	0x1
 300 002e 08       		.byte	0x8
 301 002f 1F010000 		.4byte	.LASF1
 302 0033 02       		.uleb128 0x2
 303 0034 02       		.byte	0x2
 304 0035 05       		.byte	0x5
 305 0036 54020000 		.4byte	.LASF2
 306 003a 02       		.uleb128 0x2
 307 003b 02       		.byte	0x2
 308 003c 07       		.byte	0x7
 309 003d D6000000 		.4byte	.LASF3
 310 0041 02       		.uleb128 0x2
 311 0042 04       		.byte	0x4
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 15


 312 0043 05       		.byte	0x5
 313 0044 5E020000 		.4byte	.LASF4
 314 0048 02       		.uleb128 0x2
 315 0049 04       		.byte	0x4
 316 004a 07       		.byte	0x7
 317 004b 01010000 		.4byte	.LASF5
 318 004f 02       		.uleb128 0x2
 319 0050 08       		.byte	0x8
 320 0051 05       		.byte	0x5
 321 0052 41020000 		.4byte	.LASF6
 322 0056 02       		.uleb128 0x2
 323 0057 08       		.byte	0x8
 324 0058 07       		.byte	0x7
 325 0059 21020000 		.4byte	.LASF7
 326 005d 03       		.uleb128 0x3
 327 005e 04       		.byte	0x4
 328 005f 05       		.byte	0x5
 329 0060 696E7400 		.ascii	"int\000"
 330 0064 02       		.uleb128 0x2
 331 0065 04       		.byte	0x4
 332 0066 07       		.byte	0x7
 333 0067 E9000000 		.4byte	.LASF8
 334 006b 04       		.uleb128 0x4
 335 006c 13010000 		.4byte	.LASF9
 336 0070 02       		.byte	0x2
 337 0071 B901     		.2byte	0x1b9
 338 0073 2C000000 		.4byte	0x2c
 339 0077 04       		.uleb128 0x4
 340 0078 02020000 		.4byte	.LASF10
 341 007c 02       		.byte	0x2
 342 007d BB01     		.2byte	0x1bb
 343 007f 48000000 		.4byte	0x48
 344 0083 02       		.uleb128 0x2
 345 0084 04       		.byte	0x4
 346 0085 04       		.byte	0x4
 347 0086 F6000000 		.4byte	.LASF11
 348 008a 02       		.uleb128 0x2
 349 008b 08       		.byte	0x8
 350 008c 04       		.byte	0x4
 351 008d 4F010000 		.4byte	.LASF12
 352 0091 02       		.uleb128 0x2
 353 0092 01       		.byte	0x1
 354 0093 08       		.byte	0x8
 355 0094 4F020000 		.4byte	.LASF13
 356 0098 04       		.uleb128 0x4
 357 0099 5C000000 		.4byte	.LASF14
 358 009d 02       		.byte	0x2
 359 009e 6502     		.2byte	0x265
 360 00a0 A4000000 		.4byte	0xa4
 361 00a4 05       		.uleb128 0x5
 362 00a5 77000000 		.4byte	0x77
 363 00a9 02       		.uleb128 0x2
 364 00aa 04       		.byte	0x4
 365 00ab 07       		.byte	0x7
 366 00ac 38020000 		.4byte	.LASF15
 367 00b0 06       		.uleb128 0x6
 368 00b1 E4010000 		.4byte	.LASF16
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 16


 369 00b5 01       		.byte	0x1
 370 00b6 0101     		.2byte	0x101
 371 00b8 00000000 		.4byte	.LFB0
 372 00bc 2C000000 		.4byte	.LFE0-.LFB0
 373 00c0 01       		.uleb128 0x1
 374 00c1 9C       		.byte	0x9c
 375 00c2 D6000000 		.4byte	0xd6
 376 00c6 07       		.uleb128 0x7
 377 00c7 CF000000 		.4byte	.LASF18
 378 00cb 01       		.byte	0x1
 379 00cc 0101     		.2byte	0x101
 380 00ce 77000000 		.4byte	0x77
 381 00d2 02       		.uleb128 0x2
 382 00d3 91       		.byte	0x91
 383 00d4 74       		.sleb128 -12
 384 00d5 00       		.byte	0
 385 00d6 08       		.uleb128 0x8
 386 00d7 AE000000 		.4byte	.LASF17
 387 00db 01       		.byte	0x1
 388 00dc 5401     		.2byte	0x154
 389 00de 00000000 		.4byte	.LFB1
 390 00e2 32000000 		.4byte	.LFE1-.LFB1
 391 00e6 01       		.uleb128 0x1
 392 00e7 9C       		.byte	0x9c
 393 00e8 18010000 		.4byte	0x118
 394 00ec 07       		.uleb128 0x7
 395 00ed 19010000 		.4byte	.LASF19
 396 00f1 01       		.byte	0x1
 397 00f2 5401     		.2byte	0x154
 398 00f4 18010000 		.4byte	0x118
 399 00f8 02       		.uleb128 0x2
 400 00f9 91       		.byte	0x91
 401 00fa 6C       		.sleb128 -20
 402 00fb 07       		.uleb128 0x7
 403 00fc C9000000 		.4byte	.LASF20
 404 0100 01       		.byte	0x1
 405 0101 5401     		.2byte	0x154
 406 0103 77000000 		.4byte	0x77
 407 0107 02       		.uleb128 0x2
 408 0108 91       		.byte	0x91
 409 0109 68       		.sleb128 -24
 410 010a 09       		.uleb128 0x9
 411 010b 6900     		.ascii	"i\000"
 412 010d 01       		.byte	0x1
 413 010e 5601     		.2byte	0x156
 414 0110 77000000 		.4byte	0x77
 415 0114 02       		.uleb128 0x2
 416 0115 91       		.byte	0x91
 417 0116 74       		.sleb128 -12
 418 0117 00       		.byte	0
 419 0118 0A       		.uleb128 0xa
 420 0119 04       		.byte	0x4
 421 011a 1E010000 		.4byte	0x11e
 422 011e 0B       		.uleb128 0xb
 423 011f 6B000000 		.4byte	0x6b
 424 0123 0C       		.uleb128 0xc
 425 0124 2D010000 		.4byte	.LASF22
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 17


 426 0128 01       		.byte	0x1
 427 0129 7501     		.2byte	0x175
 428 012b 77000000 		.4byte	0x77
 429 012f 00000000 		.4byte	.LFB2
 430 0133 20000000 		.4byte	.LFE2-.LFB2
 431 0137 01       		.uleb128 0x1
 432 0138 9C       		.byte	0x9c
 433 0139 4D010000 		.4byte	0x14d
 434 013d 0D       		.uleb128 0xd
 435 013e FC000000 		.4byte	.LASF21
 436 0142 01       		.byte	0x1
 437 0143 7701     		.2byte	0x177
 438 0145 77000000 		.4byte	0x77
 439 0149 02       		.uleb128 0x2
 440 014a 91       		.byte	0x91
 441 014b 74       		.sleb128 -12
 442 014c 00       		.byte	0
 443 014d 0E       		.uleb128 0xe
 444 014e 73020000 		.4byte	.LASF30
 445 0152 01       		.byte	0x1
 446 0153 A101     		.2byte	0x1a1
 447 0155 00000000 		.4byte	.LFB3
 448 0159 2C000000 		.4byte	.LFE3-.LFB3
 449 015d 01       		.uleb128 0x1
 450 015e 9C       		.byte	0x9c
 451 015f 0C       		.uleb128 0xc
 452 0160 3D000000 		.4byte	.LASF23
 453 0164 01       		.byte	0x1
 454 0165 C601     		.2byte	0x1c6
 455 0167 77000000 		.4byte	0x77
 456 016b 00000000 		.4byte	.LFB4
 457 016f 20000000 		.4byte	.LFE4-.LFB4
 458 0173 01       		.uleb128 0x1
 459 0174 9C       		.byte	0x9c
 460 0175 89010000 		.4byte	0x189
 461 0179 0D       		.uleb128 0xd
 462 017a 17020000 		.4byte	.LASF24
 463 017e 01       		.byte	0x1
 464 017f C801     		.2byte	0x1c8
 465 0181 77000000 		.4byte	0x77
 466 0185 02       		.uleb128 0x2
 467 0186 91       		.byte	0x91
 468 0187 74       		.sleb128 -12
 469 0188 00       		.byte	0
 470 0189 0F       		.uleb128 0xf
 471 018a 62000000 		.4byte	.LASF25
 472 018e 01       		.byte	0x1
 473 018f DC01     		.2byte	0x1dc
 474 0191 77000000 		.4byte	0x77
 475 0195 00000000 		.4byte	.LFB5
 476 0199 20000000 		.4byte	.LFE5-.LFB5
 477 019d 01       		.uleb128 0x1
 478 019e 9C       		.byte	0x9c
 479 019f 0D       		.uleb128 0xd
 480 01a0 09020000 		.4byte	.LASF26
 481 01a4 01       		.byte	0x1
 482 01a5 DE01     		.2byte	0x1de
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 18


 483 01a7 77000000 		.4byte	0x77
 484 01ab 02       		.uleb128 0x2
 485 01ac 91       		.byte	0x91
 486 01ad 74       		.sleb128 -12
 487 01ae 00       		.byte	0
 488 01af 00       		.byte	0
 489              		.section	.debug_abbrev,"",%progbits
 490              	.Ldebug_abbrev0:
 491 0000 01       		.uleb128 0x1
 492 0001 11       		.uleb128 0x11
 493 0002 01       		.byte	0x1
 494 0003 25       		.uleb128 0x25
 495 0004 0E       		.uleb128 0xe
 496 0005 13       		.uleb128 0x13
 497 0006 0B       		.uleb128 0xb
 498 0007 03       		.uleb128 0x3
 499 0008 0E       		.uleb128 0xe
 500 0009 1B       		.uleb128 0x1b
 501 000a 0E       		.uleb128 0xe
 502 000b 55       		.uleb128 0x55
 503 000c 17       		.uleb128 0x17
 504 000d 11       		.uleb128 0x11
 505 000e 01       		.uleb128 0x1
 506 000f 10       		.uleb128 0x10
 507 0010 17       		.uleb128 0x17
 508 0011 00       		.byte	0
 509 0012 00       		.byte	0
 510 0013 02       		.uleb128 0x2
 511 0014 24       		.uleb128 0x24
 512 0015 00       		.byte	0
 513 0016 0B       		.uleb128 0xb
 514 0017 0B       		.uleb128 0xb
 515 0018 3E       		.uleb128 0x3e
 516 0019 0B       		.uleb128 0xb
 517 001a 03       		.uleb128 0x3
 518 001b 0E       		.uleb128 0xe
 519 001c 00       		.byte	0
 520 001d 00       		.byte	0
 521 001e 03       		.uleb128 0x3
 522 001f 24       		.uleb128 0x24
 523 0020 00       		.byte	0
 524 0021 0B       		.uleb128 0xb
 525 0022 0B       		.uleb128 0xb
 526 0023 3E       		.uleb128 0x3e
 527 0024 0B       		.uleb128 0xb
 528 0025 03       		.uleb128 0x3
 529 0026 08       		.uleb128 0x8
 530 0027 00       		.byte	0
 531 0028 00       		.byte	0
 532 0029 04       		.uleb128 0x4
 533 002a 16       		.uleb128 0x16
 534 002b 00       		.byte	0
 535 002c 03       		.uleb128 0x3
 536 002d 0E       		.uleb128 0xe
 537 002e 3A       		.uleb128 0x3a
 538 002f 0B       		.uleb128 0xb
 539 0030 3B       		.uleb128 0x3b
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 19


 540 0031 05       		.uleb128 0x5
 541 0032 49       		.uleb128 0x49
 542 0033 13       		.uleb128 0x13
 543 0034 00       		.byte	0
 544 0035 00       		.byte	0
 545 0036 05       		.uleb128 0x5
 546 0037 35       		.uleb128 0x35
 547 0038 00       		.byte	0
 548 0039 49       		.uleb128 0x49
 549 003a 13       		.uleb128 0x13
 550 003b 00       		.byte	0
 551 003c 00       		.byte	0
 552 003d 06       		.uleb128 0x6
 553 003e 2E       		.uleb128 0x2e
 554 003f 01       		.byte	0x1
 555 0040 3F       		.uleb128 0x3f
 556 0041 19       		.uleb128 0x19
 557 0042 03       		.uleb128 0x3
 558 0043 0E       		.uleb128 0xe
 559 0044 3A       		.uleb128 0x3a
 560 0045 0B       		.uleb128 0xb
 561 0046 3B       		.uleb128 0x3b
 562 0047 05       		.uleb128 0x5
 563 0048 27       		.uleb128 0x27
 564 0049 19       		.uleb128 0x19
 565 004a 11       		.uleb128 0x11
 566 004b 01       		.uleb128 0x1
 567 004c 12       		.uleb128 0x12
 568 004d 06       		.uleb128 0x6
 569 004e 40       		.uleb128 0x40
 570 004f 18       		.uleb128 0x18
 571 0050 9742     		.uleb128 0x2117
 572 0052 19       		.uleb128 0x19
 573 0053 01       		.uleb128 0x1
 574 0054 13       		.uleb128 0x13
 575 0055 00       		.byte	0
 576 0056 00       		.byte	0
 577 0057 07       		.uleb128 0x7
 578 0058 05       		.uleb128 0x5
 579 0059 00       		.byte	0
 580 005a 03       		.uleb128 0x3
 581 005b 0E       		.uleb128 0xe
 582 005c 3A       		.uleb128 0x3a
 583 005d 0B       		.uleb128 0xb
 584 005e 3B       		.uleb128 0x3b
 585 005f 05       		.uleb128 0x5
 586 0060 49       		.uleb128 0x49
 587 0061 13       		.uleb128 0x13
 588 0062 02       		.uleb128 0x2
 589 0063 18       		.uleb128 0x18
 590 0064 00       		.byte	0
 591 0065 00       		.byte	0
 592 0066 08       		.uleb128 0x8
 593 0067 2E       		.uleb128 0x2e
 594 0068 01       		.byte	0x1
 595 0069 3F       		.uleb128 0x3f
 596 006a 19       		.uleb128 0x19
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 20


 597 006b 03       		.uleb128 0x3
 598 006c 0E       		.uleb128 0xe
 599 006d 3A       		.uleb128 0x3a
 600 006e 0B       		.uleb128 0xb
 601 006f 3B       		.uleb128 0x3b
 602 0070 05       		.uleb128 0x5
 603 0071 27       		.uleb128 0x27
 604 0072 19       		.uleb128 0x19
 605 0073 11       		.uleb128 0x11
 606 0074 01       		.uleb128 0x1
 607 0075 12       		.uleb128 0x12
 608 0076 06       		.uleb128 0x6
 609 0077 40       		.uleb128 0x40
 610 0078 18       		.uleb128 0x18
 611 0079 9642     		.uleb128 0x2116
 612 007b 19       		.uleb128 0x19
 613 007c 01       		.uleb128 0x1
 614 007d 13       		.uleb128 0x13
 615 007e 00       		.byte	0
 616 007f 00       		.byte	0
 617 0080 09       		.uleb128 0x9
 618 0081 34       		.uleb128 0x34
 619 0082 00       		.byte	0
 620 0083 03       		.uleb128 0x3
 621 0084 08       		.uleb128 0x8
 622 0085 3A       		.uleb128 0x3a
 623 0086 0B       		.uleb128 0xb
 624 0087 3B       		.uleb128 0x3b
 625 0088 05       		.uleb128 0x5
 626 0089 49       		.uleb128 0x49
 627 008a 13       		.uleb128 0x13
 628 008b 02       		.uleb128 0x2
 629 008c 18       		.uleb128 0x18
 630 008d 00       		.byte	0
 631 008e 00       		.byte	0
 632 008f 0A       		.uleb128 0xa
 633 0090 0F       		.uleb128 0xf
 634 0091 00       		.byte	0
 635 0092 0B       		.uleb128 0xb
 636 0093 0B       		.uleb128 0xb
 637 0094 49       		.uleb128 0x49
 638 0095 13       		.uleb128 0x13
 639 0096 00       		.byte	0
 640 0097 00       		.byte	0
 641 0098 0B       		.uleb128 0xb
 642 0099 26       		.uleb128 0x26
 643 009a 00       		.byte	0
 644 009b 49       		.uleb128 0x49
 645 009c 13       		.uleb128 0x13
 646 009d 00       		.byte	0
 647 009e 00       		.byte	0
 648 009f 0C       		.uleb128 0xc
 649 00a0 2E       		.uleb128 0x2e
 650 00a1 01       		.byte	0x1
 651 00a2 3F       		.uleb128 0x3f
 652 00a3 19       		.uleb128 0x19
 653 00a4 03       		.uleb128 0x3
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 21


 654 00a5 0E       		.uleb128 0xe
 655 00a6 3A       		.uleb128 0x3a
 656 00a7 0B       		.uleb128 0xb
 657 00a8 3B       		.uleb128 0x3b
 658 00a9 05       		.uleb128 0x5
 659 00aa 27       		.uleb128 0x27
 660 00ab 19       		.uleb128 0x19
 661 00ac 49       		.uleb128 0x49
 662 00ad 13       		.uleb128 0x13
 663 00ae 11       		.uleb128 0x11
 664 00af 01       		.uleb128 0x1
 665 00b0 12       		.uleb128 0x12
 666 00b1 06       		.uleb128 0x6
 667 00b2 40       		.uleb128 0x40
 668 00b3 18       		.uleb128 0x18
 669 00b4 9742     		.uleb128 0x2117
 670 00b6 19       		.uleb128 0x19
 671 00b7 01       		.uleb128 0x1
 672 00b8 13       		.uleb128 0x13
 673 00b9 00       		.byte	0
 674 00ba 00       		.byte	0
 675 00bb 0D       		.uleb128 0xd
 676 00bc 34       		.uleb128 0x34
 677 00bd 00       		.byte	0
 678 00be 03       		.uleb128 0x3
 679 00bf 0E       		.uleb128 0xe
 680 00c0 3A       		.uleb128 0x3a
 681 00c1 0B       		.uleb128 0xb
 682 00c2 3B       		.uleb128 0x3b
 683 00c3 05       		.uleb128 0x5
 684 00c4 49       		.uleb128 0x49
 685 00c5 13       		.uleb128 0x13
 686 00c6 02       		.uleb128 0x2
 687 00c7 18       		.uleb128 0x18
 688 00c8 00       		.byte	0
 689 00c9 00       		.byte	0
 690 00ca 0E       		.uleb128 0xe
 691 00cb 2E       		.uleb128 0x2e
 692 00cc 00       		.byte	0
 693 00cd 3F       		.uleb128 0x3f
 694 00ce 19       		.uleb128 0x19
 695 00cf 03       		.uleb128 0x3
 696 00d0 0E       		.uleb128 0xe
 697 00d1 3A       		.uleb128 0x3a
 698 00d2 0B       		.uleb128 0xb
 699 00d3 3B       		.uleb128 0x3b
 700 00d4 05       		.uleb128 0x5
 701 00d5 27       		.uleb128 0x27
 702 00d6 19       		.uleb128 0x19
 703 00d7 11       		.uleb128 0x11
 704 00d8 01       		.uleb128 0x1
 705 00d9 12       		.uleb128 0x12
 706 00da 06       		.uleb128 0x6
 707 00db 40       		.uleb128 0x40
 708 00dc 18       		.uleb128 0x18
 709 00dd 9742     		.uleb128 0x2117
 710 00df 19       		.uleb128 0x19
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 22


 711 00e0 00       		.byte	0
 712 00e1 00       		.byte	0
 713 00e2 0F       		.uleb128 0xf
 714 00e3 2E       		.uleb128 0x2e
 715 00e4 01       		.byte	0x1
 716 00e5 3F       		.uleb128 0x3f
 717 00e6 19       		.uleb128 0x19
 718 00e7 03       		.uleb128 0x3
 719 00e8 0E       		.uleb128 0xe
 720 00e9 3A       		.uleb128 0x3a
 721 00ea 0B       		.uleb128 0xb
 722 00eb 3B       		.uleb128 0x3b
 723 00ec 05       		.uleb128 0x5
 724 00ed 27       		.uleb128 0x27
 725 00ee 19       		.uleb128 0x19
 726 00ef 49       		.uleb128 0x49
 727 00f0 13       		.uleb128 0x13
 728 00f1 11       		.uleb128 0x11
 729 00f2 01       		.uleb128 0x1
 730 00f3 12       		.uleb128 0x12
 731 00f4 06       		.uleb128 0x6
 732 00f5 40       		.uleb128 0x40
 733 00f6 18       		.uleb128 0x18
 734 00f7 9742     		.uleb128 0x2117
 735 00f9 19       		.uleb128 0x19
 736 00fa 00       		.byte	0
 737 00fb 00       		.byte	0
 738 00fc 00       		.byte	0
 739              		.section	.debug_aranges,"",%progbits
 740 0000 44000000 		.4byte	0x44
 741 0004 0200     		.2byte	0x2
 742 0006 00000000 		.4byte	.Ldebug_info0
 743 000a 04       		.byte	0x4
 744 000b 00       		.byte	0
 745 000c 0000     		.2byte	0
 746 000e 0000     		.2byte	0
 747 0010 00000000 		.4byte	.LFB0
 748 0014 2C000000 		.4byte	.LFE0-.LFB0
 749 0018 00000000 		.4byte	.LFB1
 750 001c 32000000 		.4byte	.LFE1-.LFB1
 751 0020 00000000 		.4byte	.LFB2
 752 0024 20000000 		.4byte	.LFE2-.LFB2
 753 0028 00000000 		.4byte	.LFB3
 754 002c 2C000000 		.4byte	.LFE3-.LFB3
 755 0030 00000000 		.4byte	.LFB4
 756 0034 20000000 		.4byte	.LFE4-.LFB4
 757 0038 00000000 		.4byte	.LFB5
 758 003c 20000000 		.4byte	.LFE5-.LFB5
 759 0040 00000000 		.4byte	0
 760 0044 00000000 		.4byte	0
 761              		.section	.debug_ranges,"",%progbits
 762              	.Ldebug_ranges0:
 763 0000 00000000 		.4byte	.LFB0
 764 0004 2C000000 		.4byte	.LFE0
 765 0008 00000000 		.4byte	.LFB1
 766 000c 32000000 		.4byte	.LFE1
 767 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 23


 768 0014 20000000 		.4byte	.LFE2
 769 0018 00000000 		.4byte	.LFB3
 770 001c 2C000000 		.4byte	.LFE3
 771 0020 00000000 		.4byte	.LFB4
 772 0024 20000000 		.4byte	.LFE4
 773 0028 00000000 		.4byte	.LFB5
 774 002c 20000000 		.4byte	.LFE5
 775 0030 00000000 		.4byte	0
 776 0034 00000000 		.4byte	0
 777              		.section	.debug_line,"",%progbits
 778              	.Ldebug_line0:
 779 0000 E6000000 		.section	.debug_str,"MS",%progbits,1
 779      02005000 
 779      00000201 
 779      FB0E0D00 
 779      01010101 
 780              	.LASF29:
 781 0000 433A5C55 		.ascii	"C:\\Users\\edmun\\Desktop\\KIT042_Accelerometer_Lig"
 781      73657273 
 781      5C65646D 
 781      756E5C44 
 781      65736B74 
 782 002f 68745061 		.ascii	"htPaint.cydsn\000"
 782      696E742E 
 782      63796473 
 782      6E00
 783              	.LASF23:
 784 003d 55415254 		.ascii	"UART_Debug_SpiUartDisableIntRx\000"
 784      5F446562 
 784      75675F53 
 784      70695561 
 784      72744469 
 785              	.LASF14:
 786 005c 72656733 		.ascii	"reg32\000"
 786      3200
 787              	.LASF25:
 788 0062 55415254 		.ascii	"UART_Debug_SpiUartDisableIntTx\000"
 788      5F446562 
 788      75675F53 
 788      70695561 
 788      72744469 
 789              	.LASF28:
 790 0081 47656E65 		.ascii	"Generated_Source\\PSoC4\\UART_Debug_SPI_UART.c\000"
 790      72617465 
 790      645F536F 
 790      75726365 
 790      5C50536F 
 791              	.LASF17:
 792 00ae 55415254 		.ascii	"UART_Debug_SpiUartPutArray\000"
 792      5F446562 
 792      75675F53 
 792      70695561 
 792      72745075 
 793              	.LASF20:
 794 00c9 636F756E 		.ascii	"count\000"
 794      7400
 795              	.LASF18:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 24


 796 00cf 74784461 		.ascii	"txData\000"
 796      746100
 797              	.LASF3:
 798 00d6 73686F72 		.ascii	"short unsigned int\000"
 798      7420756E 
 798      7369676E 
 798      65642069 
 798      6E7400
 799              	.LASF8:
 800 00e9 756E7369 		.ascii	"unsigned int\000"
 800      676E6564 
 800      20696E74 
 800      00
 801              	.LASF11:
 802 00f6 666C6F61 		.ascii	"float\000"
 802      7400
 803              	.LASF21:
 804 00fc 73697A65 		.ascii	"size\000"
 804      00
 805              	.LASF5:
 806 0101 6C6F6E67 		.ascii	"long unsigned int\000"
 806      20756E73 
 806      69676E65 
 806      6420696E 
 806      7400
 807              	.LASF9:
 808 0113 75696E74 		.ascii	"uint8\000"
 808      3800
 809              	.LASF19:
 810 0119 77724275 		.ascii	"wrBuf\000"
 810      6600
 811              	.LASF1:
 812 011f 756E7369 		.ascii	"unsigned char\000"
 812      676E6564 
 812      20636861 
 812      7200
 813              	.LASF22:
 814 012d 55415254 		.ascii	"UART_Debug_SpiUartGetTxBufferSize\000"
 814      5F446562 
 814      75675F53 
 814      70695561 
 814      72744765 
 815              	.LASF12:
 816 014f 646F7562 		.ascii	"double\000"
 816      6C6500
 817              	.LASF27:
 818 0156 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 818      4320342E 
 818      392E3320 
 818      32303135 
 818      30333033 
 819 0189 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 819      20726576 
 819      6973696F 
 819      6E203232 
 819      31323230 
 820 01bc 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 25


 820      66756E63 
 820      74696F6E 
 820      2D736563 
 820      74696F6E 
 821              	.LASF16:
 822 01e4 55415254 		.ascii	"UART_Debug_SpiUartWriteTxData\000"
 822      5F446562 
 822      75675F53 
 822      70695561 
 822      72745772 
 823              	.LASF10:
 824 0202 75696E74 		.ascii	"uint32\000"
 824      333200
 825              	.LASF26:
 826 0209 696E7453 		.ascii	"intSourceMask\000"
 826      6F757263 
 826      654D6173 
 826      6B00
 827              	.LASF24:
 828 0217 696E7453 		.ascii	"intSource\000"
 828      6F757263 
 828      6500
 829              	.LASF7:
 830 0221 6C6F6E67 		.ascii	"long long unsigned int\000"
 830      206C6F6E 
 830      6720756E 
 830      7369676E 
 830      65642069 
 831              	.LASF15:
 832 0238 73697A65 		.ascii	"sizetype\000"
 832      74797065 
 832      00
 833              	.LASF6:
 834 0241 6C6F6E67 		.ascii	"long long int\000"
 834      206C6F6E 
 834      6720696E 
 834      7400
 835              	.LASF13:
 836 024f 63686172 		.ascii	"char\000"
 836      00
 837              	.LASF2:
 838 0254 73686F72 		.ascii	"short int\000"
 838      7420696E 
 838      7400
 839              	.LASF4:
 840 025e 6C6F6E67 		.ascii	"long int\000"
 840      20696E74 
 840      00
 841              	.LASF0:
 842 0267 7369676E 		.ascii	"signed char\000"
 842      65642063 
 842      68617200 
 843              	.LASF30:
 844 0273 55415254 		.ascii	"UART_Debug_SpiUartClearTxBuffer\000"
 844      5F446562 
 844      75675F53 
 844      70695561 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccWe0y79.s 			page 26


 844      7274436C 
 845              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
