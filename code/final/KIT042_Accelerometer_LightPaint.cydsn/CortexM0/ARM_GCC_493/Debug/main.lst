ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.putdata,"ax",%progbits
  18              		.align	2
  19              		.global	putdata
  20              		.code	16
  21              		.thumb_func
  22              		.type	putdata, %function
  23              	putdata:
  24              	.LFB34:
  25              		.file 1 "main.c"
   1:main.c        **** #include <device.h>
   2:main.c        **** 
   3:main.c        **** //I2C Constants
   4:main.c        **** #define I2C_ACK             0x00
   5:main.c        **** #define I2C_NACK            0xff
   6:main.c        **** #define I2C_WRITE           0x00
   7:main.c        **** #define I2C_READ            0xff
   8:main.c        **** 
   9:main.c        **** //accelerometer I2C address
  10:main.c        **** #define ACCEL_I2C_ADDR      0x1D
  11:main.c        **** 
  12:main.c        **** //accelerometer register addresses
  13:main.c        **** #define ACCEL_STATUS_REG    0x00
  14:main.c        **** #define ACCEL_SYSMOD_REG    0x0B
  15:main.c        **** #define ACCEL_XYZ_DATA_CFG  0x0E
  16:main.c        **** #define ACCEL_CTRL_REG1     0x2A
  17:main.c        **** 
  18:main.c        **** //accelerometer configuration codes
  19:main.c        **** #define ACCEL_MODE_STANDBY  0x00
  20:main.c        **** #define ACCEL_MODE_WAKE     0x01
  21:main.c        **** #define ACCEL_MODE_SLEEP    0x02
  22:main.c        **** #define ACCEL_CTRL_REG_MODE 0x01
  23:main.c        **** #define ACCEL_SCALE_2G      0x00
  24:main.c        **** #define ACCEL_SCALE_4G      0x01
  25:main.c        **** #define ACCEL_SCALE_8G      0x02
  26:main.c        **** 
  27:main.c        **** #define CR 0x0D
  28:main.c        **** #define LF 0x0A
  29:main.c        **** 
  30:main.c        **** /* Used to insert a carriage return and line feed */
  31:main.c        **** #define NewLine() UART_UartPutChar(CR); UART_UartPutChar(LF);
  32:main.c        **** 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 2


  33:main.c        **** typedef struct
  34:main.c        **** {
  35:main.c        ****     uint8 state; //0 or 1 or 2 or 3
  36:main.c        ****     int destX; // X of destination
  37:main.c        ****     int destY; // Y of destination
  38:main.c        ****     int currX; // X of current pos
  39:main.c        ****     int currY; // Y of current pos
  40:main.c        ****     uint32 distToObstacle; // How far the obstacle is away
  41:main.c        **** } Robot_State_Struct;
  42:main.c        **** 
  43:main.c        **** void putdata ( void* p, char c)
  44:main.c        **** {
  26              		.loc 1 44 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              		.cfi_def_cfa_offset 8
  30              		.cfi_offset 7, -8
  31              		.cfi_offset 14, -4
  32 0002 82B0     		sub	sp, sp, #8
  33              		.cfi_def_cfa_offset 16
  34 0004 00AF     		add	r7, sp, #0
  35              		.cfi_def_cfa_register 7
  36 0006 7860     		str	r0, [r7, #4]
  37 0008 0A1C     		mov	r2, r1
  38 000a FB1C     		add	r3, r7, #3
  39 000c 1A70     		strb	r2, [r3]
  45:main.c        **** 	UART_UartPutChar(c);
  40              		.loc 1 45 0
  41 000e FB1C     		add	r3, r7, #3
  42 0010 1B78     		ldrb	r3, [r3]
  43 0012 181C     		mov	r0, r3
  44 0014 FFF7FEFF 		bl	UART_SpiUartWriteTxData
  46:main.c        **** }
  45              		.loc 1 46 0
  46 0018 BD46     		mov	sp, r7
  47 001a 02B0     		add	sp, sp, #8
  48              		@ sp needed
  49 001c 80BD     		pop	{r7, pc}
  50              		.cfi_endproc
  51              	.LFE34:
  52              		.size	putdata, .-putdata
  53              		.global	ms_count
  54 001e C046     		.bss
  55              		.align	2
  56              		.type	ms_count, %object
  57              		.size	ms_count, 4
  58              	ms_count:
  59 0000 00000000 		.space	4
  60              		.global	seconds
  61              		.align	1
  62              		.type	seconds, %object
  63              		.size	seconds, 2
  64              	seconds:
  65 0004 0000     		.space	2
  66 0006 0000     		.section	.text.MY_ISR,"ax",%progbits
  67              		.align	2
  68              		.global	MY_ISR
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 3


  69              		.code	16
  70              		.thumb_func
  71              		.type	MY_ISR, %function
  72              	MY_ISR:
  73              	.LFB35:
  47:main.c        **** 
  48:main.c        **** 
  49:main.c        **** uint32 ms_count = 0;
  50:main.c        **** uint16 seconds = 0;
  51:main.c        **** 
  52:main.c        **** CY_ISR(MY_ISR) 
  53:main.c        **** {
  74              		.loc 1 53 0
  75              		.cfi_startproc
  76 0000 80B5     		push	{r7, lr}
  77              		.cfi_def_cfa_offset 8
  78              		.cfi_offset 7, -8
  79              		.cfi_offset 14, -4
  80 0002 00AF     		add	r7, sp, #0
  81              		.cfi_def_cfa_register 7
  54:main.c        ****     ms_count++;
  82              		.loc 1 54 0
  83 0004 034B     		ldr	r3, .L3
  84 0006 1B68     		ldr	r3, [r3]
  85 0008 5A1C     		add	r2, r3, #1
  86 000a 024B     		ldr	r3, .L3
  87 000c 1A60     		str	r2, [r3]
  55:main.c        **** //    if (ms_count % 1000 == 0) {
  56:main.c        **** //        LED_Write(!LED_Read()); // Toggle LED
  57:main.c        **** //        seconds++;
  58:main.c        **** //        printf("ms elapsed : %d\n", ms_count);
  59:main.c        **** //   }
  60:main.c        **** }
  88              		.loc 1 60 0
  89 000e BD46     		mov	sp, r7
  90              		@ sp needed
  91 0010 80BD     		pop	{r7, pc}
  92              	.L4:
  93 0012 C046     		.align	2
  94              	.L3:
  95 0014 00000000 		.word	ms_count
  96              		.cfi_endproc
  97              	.LFE35:
  98              		.size	MY_ISR, .-MY_ISR
  99              		.section	.text.abs16,"ax",%progbits
 100              		.align	2
 101              		.global	abs16
 102              		.code	16
 103              		.thumb_func
 104              		.type	abs16, %function
 105              	abs16:
 106              	.LFB36:
  61:main.c        **** 
  62:main.c        **** /* Absolute value function */
  63:main.c        **** uint16 abs16(int16 input)
  64:main.c        **** {
 107              		.loc 1 64 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 4


 108              		.cfi_startproc
 109 0000 80B5     		push	{r7, lr}
 110              		.cfi_def_cfa_offset 8
 111              		.cfi_offset 7, -8
 112              		.cfi_offset 14, -4
 113 0002 84B0     		sub	sp, sp, #16
 114              		.cfi_def_cfa_offset 24
 115 0004 00AF     		add	r7, sp, #0
 116              		.cfi_def_cfa_register 7
 117 0006 021C     		mov	r2, r0
 118 0008 BB1D     		add	r3, r7, #6
 119 000a 1A80     		strh	r2, [r3]
  65:main.c        ****     uint16 retval;
  66:main.c        ****     
  67:main.c        ****     if(input>=0)
 120              		.loc 1 67 0
 121 000c BB1D     		add	r3, r7, #6
 122 000e 0022     		mov	r2, #0
 123 0010 9B5E     		ldrsh	r3, [r3, r2]
 124 0012 002B     		cmp	r3, #0
 125 0014 05DB     		blt	.L6
  68:main.c        ****     {
  69:main.c        ****         retval = (uint16) input;
 126              		.loc 1 69 0
 127 0016 0E23     		mov	r3, #14
 128 0018 FB18     		add	r3, r7, r3
 129 001a BA1D     		add	r2, r7, #6
 130 001c 1288     		ldrh	r2, [r2]
 131 001e 1A80     		strh	r2, [r3]
 132 0020 05E0     		b	.L7
 133              	.L6:
  70:main.c        ****     }
  71:main.c        ****     else
  72:main.c        ****     {
  73:main.c        ****         retval = (uint16) (-input);
 134              		.loc 1 73 0
 135 0022 BB1D     		add	r3, r7, #6
 136 0024 1A88     		ldrh	r2, [r3]
 137 0026 0E23     		mov	r3, #14
 138 0028 FB18     		add	r3, r7, r3
 139 002a 5242     		neg	r2, r2
 140 002c 1A80     		strh	r2, [r3]
 141              	.L7:
  74:main.c        ****     }
  75:main.c        ****     return retval;
 142              		.loc 1 75 0
 143 002e 0E23     		mov	r3, #14
 144 0030 FB18     		add	r3, r7, r3
 145 0032 1B88     		ldrh	r3, [r3]
  76:main.c        **** }
 146              		.loc 1 76 0
 147 0034 181C     		mov	r0, r3
 148 0036 BD46     		mov	sp, r7
 149 0038 04B0     		add	sp, sp, #16
 150              		@ sp needed
 151 003a 80BD     		pop	{r7, pc}
 152              		.cfi_endproc
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 5


 153              	.LFE36:
 154              		.size	abs16, .-abs16
 155              		.section	.text.Truck_Stop,"ax",%progbits
 156              		.align	2
 157              		.global	Truck_Stop
 158              		.code	16
 159              		.thumb_func
 160              		.type	Truck_Stop, %function
 161              	Truck_Stop:
 162              	.LFB37:
  77:main.c        **** 
  78:main.c        **** void Truck_Stop() 
  79:main.c        **** {
 163              		.loc 1 79 0
 164              		.cfi_startproc
 165 0000 80B5     		push	{r7, lr}
 166              		.cfi_def_cfa_offset 8
 167              		.cfi_offset 7, -8
 168              		.cfi_offset 14, -4
 169 0002 00AF     		add	r7, sp, #0
 170              		.cfi_def_cfa_register 7
  80:main.c        ****     Forward_out_Write(0);
 171              		.loc 1 80 0
 172 0004 0020     		mov	r0, #0
 173 0006 FFF7FEFF 		bl	Forward_out_Write
  81:main.c        ****     Reverse_out_Write(0);
 174              		.loc 1 81 0
 175 000a 0020     		mov	r0, #0
 176 000c FFF7FEFF 		bl	Reverse_out_Write
  82:main.c        ****     Left_out_Write(0);
 177              		.loc 1 82 0
 178 0010 0020     		mov	r0, #0
 179 0012 FFF7FEFF 		bl	Left_out_Write
  83:main.c        ****     Right_out_Write(0);
 180              		.loc 1 83 0
 181 0016 0020     		mov	r0, #0
 182 0018 FFF7FEFF 		bl	Right_out_Write
  84:main.c        **** }
 183              		.loc 1 84 0
 184 001c BD46     		mov	sp, r7
 185              		@ sp needed
 186 001e 80BD     		pop	{r7, pc}
 187              		.cfi_endproc
 188              	.LFE37:
 189              		.size	Truck_Stop, .-Truck_Stop
 190              		.section	.text.Truck_Forward,"ax",%progbits
 191              		.align	2
 192              		.global	Truck_Forward
 193              		.code	16
 194              		.thumb_func
 195              		.type	Truck_Forward, %function
 196              	Truck_Forward:
 197              	.LFB38:
  85:main.c        **** 
  86:main.c        **** void Truck_Forward(Robot_State_Struct *robot) 
  87:main.c        **** {
 198              		.loc 1 87 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 6


 199              		.cfi_startproc
 200 0000 80B5     		push	{r7, lr}
 201              		.cfi_def_cfa_offset 8
 202              		.cfi_offset 7, -8
 203              		.cfi_offset 14, -4
 204 0002 82B0     		sub	sp, sp, #8
 205              		.cfi_def_cfa_offset 16
 206 0004 00AF     		add	r7, sp, #0
 207              		.cfi_def_cfa_register 7
 208 0006 7860     		str	r0, [r7, #4]
  88:main.c        ****     robot->currY += 1;
 209              		.loc 1 88 0
 210 0008 7B68     		ldr	r3, [r7, #4]
 211 000a 1B69     		ldr	r3, [r3, #16]
 212 000c 5A1C     		add	r2, r3, #1
 213 000e 7B68     		ldr	r3, [r7, #4]
 214 0010 1A61     		str	r2, [r3, #16]
  89:main.c        **** }
 215              		.loc 1 89 0
 216 0012 BD46     		mov	sp, r7
 217 0014 02B0     		add	sp, sp, #8
 218              		@ sp needed
 219 0016 80BD     		pop	{r7, pc}
 220              		.cfi_endproc
 221              	.LFE38:
 222              		.size	Truck_Forward, .-Truck_Forward
 223              		.section	.text.Truck_Right,"ax",%progbits
 224              		.align	2
 225              		.global	Truck_Right
 226              		.code	16
 227              		.thumb_func
 228              		.type	Truck_Right, %function
 229              	Truck_Right:
 230              	.LFB39:
  90:main.c        **** 
  91:main.c        **** //void Truck_Reverse() 
  92:main.c        **** //{
  93:main.c        **** //    Forward_out_Write(0);
  94:main.c        **** //    Reverse_out_Write(1);
  95:main.c        **** //}
  96:main.c        **** 
  97:main.c        **** void Truck_Right(Robot_State_Struct *robot) 
  98:main.c        **** {
 231              		.loc 1 98 0
 232              		.cfi_startproc
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 241 0006 7860     		str	r0, [r7, #4]
  99:main.c        **** //    printf("turning right\n");
 100:main.c        ****     robot->currX += 1;
 242              		.loc 1 100 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 7


 243 0008 7B68     		ldr	r3, [r7, #4]
 244 000a DB68     		ldr	r3, [r3, #12]
 245 000c 5A1C     		add	r2, r3, #1
 246 000e 7B68     		ldr	r3, [r7, #4]
 247 0010 DA60     		str	r2, [r3, #12]
 101:main.c        ****     
 102:main.c        ****     Left_out_Write(0);
 248              		.loc 1 102 0
 249 0012 0020     		mov	r0, #0
 250 0014 FFF7FEFF 		bl	Left_out_Write
 103:main.c        ****     Right_out_Write(1);
 251              		.loc 1 103 0
 252 0018 0120     		mov	r0, #1
 253 001a FFF7FEFF 		bl	Right_out_Write
 104:main.c        ****     CyDelay(500);
 254              		.loc 1 104 0
 255 001e FA23     		mov	r3, #250
 256 0020 5B00     		lsl	r3, r3, #1
 257 0022 181C     		mov	r0, r3
 258 0024 FFF7FEFF 		bl	CyDelay
 105:main.c        **** }
 259              		.loc 1 105 0
 260 0028 BD46     		mov	sp, r7
 261 002a 02B0     		add	sp, sp, #8
 262              		@ sp needed
 263 002c 80BD     		pop	{r7, pc}
 264              		.cfi_endproc
 265              	.LFE39:
 266              		.size	Truck_Right, .-Truck_Right
 267 002e C046     		.section	.text.Truck_Left,"ax",%progbits
 268              		.align	2
 269              		.global	Truck_Left
 270              		.code	16
 271              		.thumb_func
 272              		.type	Truck_Left, %function
 273              	Truck_Left:
 274              	.LFB40:
 106:main.c        **** 
 107:main.c        **** void Truck_Left(Robot_State_Struct *robot) 
 108:main.c        **** {
 275              		.loc 1 108 0
 276              		.cfi_startproc
 277 0000 80B5     		push	{r7, lr}
 278              		.cfi_def_cfa_offset 8
 279              		.cfi_offset 7, -8
 280              		.cfi_offset 14, -4
 281 0002 82B0     		sub	sp, sp, #8
 282              		.cfi_def_cfa_offset 16
 283 0004 00AF     		add	r7, sp, #0
 284              		.cfi_def_cfa_register 7
 285 0006 7860     		str	r0, [r7, #4]
 109:main.c        **** //    printf("turning left\n");
 110:main.c        ****     robot->currX -= 1;
 286              		.loc 1 110 0
 287 0008 7B68     		ldr	r3, [r7, #4]
 288 000a DB68     		ldr	r3, [r3, #12]
 289 000c 5A1E     		sub	r2, r3, #1
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 8


 290 000e 7B68     		ldr	r3, [r7, #4]
 291 0010 DA60     		str	r2, [r3, #12]
 111:main.c        ****     
 112:main.c        ****     Right_out_Write(0);
 292              		.loc 1 112 0
 293 0012 0020     		mov	r0, #0
 294 0014 FFF7FEFF 		bl	Right_out_Write
 113:main.c        ****     Left_out_Write(1);
 295              		.loc 1 113 0
 296 0018 0120     		mov	r0, #1
 297 001a FFF7FEFF 		bl	Left_out_Write
 114:main.c        ****     CyDelay(500);
 298              		.loc 1 114 0
 299 001e FA23     		mov	r3, #250
 300 0020 5B00     		lsl	r3, r3, #1
 301 0022 181C     		mov	r0, r3
 302 0024 FFF7FEFF 		bl	CyDelay
 115:main.c        **** }
 303              		.loc 1 115 0
 304 0028 BD46     		mov	sp, r7
 305 002a 02B0     		add	sp, sp, #8
 306              		@ sp needed
 307 002c 80BD     		pop	{r7, pc}
 308              		.cfi_endproc
 309              	.LFE40:
 310              		.size	Truck_Left, .-Truck_Left
 311 002e C046     		.section	.text.Truck_Straight,"ax",%progbits
 312              		.align	2
 313              		.global	Truck_Straight
 314              		.code	16
 315              		.thumb_func
 316              		.type	Truck_Straight, %function
 317              	Truck_Straight:
 318              	.LFB41:
 116:main.c        **** 
 117:main.c        **** void Truck_Straight() 
 118:main.c        **** {
 319              		.loc 1 118 0
 320              		.cfi_startproc
 321 0000 80B5     		push	{r7, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 7, -8
 324              		.cfi_offset 14, -4
 325 0002 00AF     		add	r7, sp, #0
 326              		.cfi_def_cfa_register 7
 119:main.c        ****     Right_out_Write(0);
 327              		.loc 1 119 0
 328 0004 0020     		mov	r0, #0
 329 0006 FFF7FEFF 		bl	Right_out_Write
 120:main.c        ****     Left_out_Write(0);
 330              		.loc 1 120 0
 331 000a 0020     		mov	r0, #0
 332 000c FFF7FEFF 		bl	Left_out_Write
 121:main.c        ****     CyDelay(50);
 333              		.loc 1 121 0
 334 0010 3220     		mov	r0, #50
 335 0012 FFF7FEFF 		bl	CyDelay
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 9


 122:main.c        **** }  
 336              		.loc 1 122 0
 337 0016 BD46     		mov	sp, r7
 338              		@ sp needed
 339 0018 80BD     		pop	{r7, pc}
 340              		.cfi_endproc
 341              	.LFE41:
 342              		.size	Truck_Straight, .-Truck_Straight
 343              		.global	range
 344 001a C046     		.data
 345              		.align	2
 346              		.type	range, %object
 347              		.size	range, 4
 348              	range:
 349 0000 98080000 		.word	2200
 350              		.section	.rodata
 351              		.align	2
 352              	.LC2:
 353 0000 736F6E61 		.ascii	"sonar_dist : %d\012\000"
 353      725F6469 
 353      7374203A 
 353      2025640A 
 353      00
 354              		.section	.text.detectObstacle,"ax",%progbits
 355              		.align	2
 356              		.global	detectObstacle
 357              		.code	16
 358              		.thumb_func
 359              		.type	detectObstacle, %function
 360              	detectObstacle:
 361              	.LFB42:
 123:main.c        **** 
 124:main.c        **** 
 125:main.c        **** int range = 2200;
 126:main.c        **** 
 127:main.c        **** int detectObstacle() 
 128:main.c        **** {
 362              		.loc 1 128 0
 363              		.cfi_startproc
 364 0000 80B5     		push	{r7, lr}
 365              		.cfi_def_cfa_offset 8
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 82B0     		sub	sp, sp, #8
 369              		.cfi_def_cfa_offset 16
 370 0004 00AF     		add	r7, sp, #0
 371              		.cfi_def_cfa_register 7
 129:main.c        ****     int count = 0;
 372              		.loc 1 129 0
 373 0006 0023     		mov	r3, #0
 374 0008 7B60     		str	r3, [r7, #4]
 130:main.c        ****     Trigr_Write(1);
 375              		.loc 1 130 0
 376 000a 0120     		mov	r0, #1
 377 000c FFF7FEFF 		bl	Trigr_Write
 131:main.c        ****     CyDelayUs(10);
 378              		.loc 1 131 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 10


 379 0010 0A20     		mov	r0, #10
 380 0012 FFF7FEFF 		bl	CyDelayUs
 132:main.c        ****     Trigr_Write(0);
 381              		.loc 1 132 0
 382 0016 0020     		mov	r0, #0
 383 0018 FFF7FEFF 		bl	Trigr_Write
 133:main.c        ****     while(Echo_Read() == 0)
 384              		.loc 1 133 0
 385 001c C046     		mov	r8, r8
 386              	.L15:
 387              		.loc 1 133 0 is_stmt 0 discriminator 1
 388 001e FFF7FEFF 		bl	Echo_Read
 389 0022 031E     		sub	r3, r0, #0
 390 0024 FBD0     		beq	.L15
 134:main.c        ****     {
 135:main.c        ****     }
 136:main.c        ****     while(Echo_Read() == 1)
 391              		.loc 1 136 0 is_stmt 1
 392 0026 0CE0     		b	.L16
 393              	.L18:
 137:main.c        ****     {
 138:main.c        ****         count++; 
 394              		.loc 1 138 0
 395 0028 7B68     		ldr	r3, [r7, #4]
 396 002a 0133     		add	r3, r3, #1
 397 002c 7B60     		str	r3, [r7, #4]
 139:main.c        ****         if (count > range) 
 398              		.loc 1 139 0
 399 002e 124B     		ldr	r3, .L20
 400 0030 1B68     		ldr	r3, [r3]
 401 0032 7A68     		ldr	r2, [r7, #4]
 402 0034 9A42     		cmp	r2, r3
 403 0036 04DD     		ble	.L16
 140:main.c        ****         {
 141:main.c        ****             LED_Write(1);
 404              		.loc 1 141 0
 405 0038 0120     		mov	r0, #1
 406 003a FFF7FEFF 		bl	LED_Write
 142:main.c        ****             return 0;
 407              		.loc 1 142 0
 408 003e 0023     		mov	r3, #0
 409 0040 15E0     		b	.L17
 410              	.L16:
 136:main.c        ****     {
 411              		.loc 1 136 0
 412 0042 FFF7FEFF 		bl	Echo_Read
 413 0046 031E     		sub	r3, r0, #0
 414 0048 012B     		cmp	r3, #1
 415 004a EDD0     		beq	.L18
 143:main.c        ****         }
 144:main.c        ****     }
 145:main.c        ****     printf("sonar_dist : %d\n", count);
 416              		.loc 1 145 0
 417 004c 0B4A     		ldr	r2, .L20+4
 418 004e 7B68     		ldr	r3, [r7, #4]
 419 0050 101C     		mov	r0, r2
 420 0052 191C     		mov	r1, r3
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 11


 421 0054 FFF7FEFF 		bl	tfp_printf
 146:main.c        ****     if(count <= range)
 422              		.loc 1 146 0
 423 0058 074B     		ldr	r3, .L20
 424 005a 1B68     		ldr	r3, [r3]
 425 005c 7A68     		ldr	r2, [r7, #4]
 426 005e 9A42     		cmp	r2, r3
 427 0060 04DC     		bgt	.L19
 147:main.c        ****     {
 148:main.c        ****         LED_Write(0); 
 428              		.loc 1 148 0
 429 0062 0020     		mov	r0, #0
 430 0064 FFF7FEFF 		bl	LED_Write
 149:main.c        ****         return 1;
 431              		.loc 1 149 0
 432 0068 0123     		mov	r3, #1
 433 006a 00E0     		b	.L17
 434              	.L19:
 150:main.c        ****     }
 151:main.c        ****     return 0;
 435              		.loc 1 151 0
 436 006c 0023     		mov	r3, #0
 437              	.L17:
 152:main.c        **** }
 438              		.loc 1 152 0
 439 006e 181C     		mov	r0, r3
 440 0070 BD46     		mov	sp, r7
 441 0072 02B0     		add	sp, sp, #8
 442              		@ sp needed
 443 0074 80BD     		pop	{r7, pc}
 444              	.L21:
 445 0076 C046     		.align	2
 446              	.L20:
 447 0078 00000000 		.word	range
 448 007c 00000000 		.word	.LC2
 449              		.cfi_endproc
 450              	.LFE42:
 451              		.size	detectObstacle, .-detectObstacle
 452              		.section	.text.detectObstacle2,"ax",%progbits
 453              		.align	2
 454              		.global	detectObstacle2
 455              		.code	16
 456              		.thumb_func
 457              		.type	detectObstacle2, %function
 458              	detectObstacle2:
 459              	.LFB43:
 153:main.c        **** 
 154:main.c        **** int detectObstacle2() 
 155:main.c        **** {
 460              		.loc 1 155 0
 461              		.cfi_startproc
 462 0000 80B5     		push	{r7, lr}
 463              		.cfi_def_cfa_offset 8
 464              		.cfi_offset 7, -8
 465              		.cfi_offset 14, -4
 466 0002 82B0     		sub	sp, sp, #8
 467              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 12


 468 0004 00AF     		add	r7, sp, #0
 469              		.cfi_def_cfa_register 7
 156:main.c        ****     int count2 = 0;
 470              		.loc 1 156 0
 471 0006 0023     		mov	r3, #0
 472 0008 7B60     		str	r3, [r7, #4]
 157:main.c        ****     Trigr_1_Write(1);
 473              		.loc 1 157 0
 474 000a 0120     		mov	r0, #1
 475 000c FFF7FEFF 		bl	Trigr_1_Write
 158:main.c        ****     CyDelayUs(10);
 476              		.loc 1 158 0
 477 0010 0A20     		mov	r0, #10
 478 0012 FFF7FEFF 		bl	CyDelayUs
 159:main.c        ****     Trigr_1_Write(0);
 479              		.loc 1 159 0
 480 0016 0020     		mov	r0, #0
 481 0018 FFF7FEFF 		bl	Trigr_1_Write
 160:main.c        ****     while(Echo_1_Read() == 0)
 482              		.loc 1 160 0
 483 001c C046     		mov	r8, r8
 484              	.L23:
 485              		.loc 1 160 0 is_stmt 0 discriminator 1
 486 001e FFF7FEFF 		bl	Echo_1_Read
 487 0022 031E     		sub	r3, r0, #0
 488 0024 FBD0     		beq	.L23
 161:main.c        ****     {
 162:main.c        ****     }
 163:main.c        ****     while(Echo_1_Read() == 1)
 489              		.loc 1 163 0 is_stmt 1
 490 0026 0CE0     		b	.L24
 491              	.L26:
 164:main.c        ****     {
 165:main.c        ****         count2++; 
 492              		.loc 1 165 0
 493 0028 7B68     		ldr	r3, [r7, #4]
 494 002a 0133     		add	r3, r3, #1
 495 002c 7B60     		str	r3, [r7, #4]
 166:main.c        ****         if (count2 > range) 
 496              		.loc 1 166 0
 497 002e 124B     		ldr	r3, .L28
 498 0030 1B68     		ldr	r3, [r3]
 499 0032 7A68     		ldr	r2, [r7, #4]
 500 0034 9A42     		cmp	r2, r3
 501 0036 04DD     		ble	.L24
 167:main.c        ****         {
 168:main.c        ****             LED_1_Write(1);
 502              		.loc 1 168 0
 503 0038 0120     		mov	r0, #1
 504 003a FFF7FEFF 		bl	LED_1_Write
 169:main.c        ****             return 0;
 505              		.loc 1 169 0
 506 003e 0023     		mov	r3, #0
 507 0040 15E0     		b	.L25
 508              	.L24:
 163:main.c        ****     {
 509              		.loc 1 163 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 13


 510 0042 FFF7FEFF 		bl	Echo_1_Read
 511 0046 031E     		sub	r3, r0, #0
 512 0048 012B     		cmp	r3, #1
 513 004a EDD0     		beq	.L26
 170:main.c        ****         }
 171:main.c        ****     }
 172:main.c        ****     printf("sonar_dist : %d\n", count2);
 514              		.loc 1 172 0
 515 004c 0B4A     		ldr	r2, .L28+4
 516 004e 7B68     		ldr	r3, [r7, #4]
 517 0050 101C     		mov	r0, r2
 518 0052 191C     		mov	r1, r3
 519 0054 FFF7FEFF 		bl	tfp_printf
 173:main.c        ****     if(count2 <= range)
 520              		.loc 1 173 0
 521 0058 074B     		ldr	r3, .L28
 522 005a 1B68     		ldr	r3, [r3]
 523 005c 7A68     		ldr	r2, [r7, #4]
 524 005e 9A42     		cmp	r2, r3
 525 0060 04DC     		bgt	.L27
 174:main.c        ****     {
 175:main.c        ****         LED_1_Write(0); 
 526              		.loc 1 175 0
 527 0062 0020     		mov	r0, #0
 528 0064 FFF7FEFF 		bl	LED_1_Write
 176:main.c        ****         return 1;
 529              		.loc 1 176 0
 530 0068 0123     		mov	r3, #1
 531 006a 00E0     		b	.L25
 532              	.L27:
 177:main.c        ****     }
 178:main.c        ****     return 0;
 533              		.loc 1 178 0
 534 006c 0023     		mov	r3, #0
 535              	.L25:
 179:main.c        **** }
 536              		.loc 1 179 0
 537 006e 181C     		mov	r0, r3
 538 0070 BD46     		mov	sp, r7
 539 0072 02B0     		add	sp, sp, #8
 540              		@ sp needed
 541 0074 80BD     		pop	{r7, pc}
 542              	.L29:
 543 0076 C046     		.align	2
 544              	.L28:
 545 0078 00000000 		.word	range
 546 007c 00000000 		.word	.LC2
 547              		.cfi_endproc
 548              	.LFE43:
 549              		.size	detectObstacle2, .-detectObstacle2
 550              		.section	.text.firstMove,"ax",%progbits
 551              		.align	2
 552              		.global	firstMove
 553              		.code	16
 554              		.thumb_func
 555              		.type	firstMove, %function
 556              	firstMove:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 14


 557              	.LFB44:
 180:main.c        **** 
 181:main.c        **** void firstMove(int destX, Robot_State_Struct *robot) {
 558              		.loc 1 181 0
 559              		.cfi_startproc
 560 0000 80B5     		push	{r7, lr}
 561              		.cfi_def_cfa_offset 8
 562              		.cfi_offset 7, -8
 563              		.cfi_offset 14, -4
 564 0002 82B0     		sub	sp, sp, #8
 565              		.cfi_def_cfa_offset 16
 566 0004 00AF     		add	r7, sp, #0
 567              		.cfi_def_cfa_register 7
 568 0006 7860     		str	r0, [r7, #4]
 569 0008 3960     		str	r1, [r7]
 182:main.c        ****     Reverse_out_Write(0);
 570              		.loc 1 182 0
 571 000a 0020     		mov	r0, #0
 572 000c FFF7FEFF 		bl	Reverse_out_Write
 183:main.c        ****     Forward_out_Write(1);
 573              		.loc 1 183 0
 574 0010 0120     		mov	r0, #1
 575 0012 FFF7FEFF 		bl	Forward_out_Write
 184:main.c        ****     Truck_Forward(robot);
 576              		.loc 1 184 0
 577 0016 3B68     		ldr	r3, [r7]
 578 0018 181C     		mov	r0, r3
 579 001a FFF7FEFF 		bl	Truck_Forward
 185:main.c        ****     if (destX > 0) {
 580              		.loc 1 185 0
 581 001e 7B68     		ldr	r3, [r7, #4]
 582 0020 002B     		cmp	r3, #0
 583 0022 04DD     		ble	.L31
 186:main.c        ****         Truck_Right(robot);     
 584              		.loc 1 186 0
 585 0024 3B68     		ldr	r3, [r7]
 586 0026 181C     		mov	r0, r3
 587 0028 FFF7FEFF 		bl	Truck_Right
 588 002c 06E0     		b	.L30
 589              	.L31:
 187:main.c        ****     }
 188:main.c        ****     else if (destX < 0) {
 590              		.loc 1 188 0
 591 002e 7B68     		ldr	r3, [r7, #4]
 592 0030 002B     		cmp	r3, #0
 593 0032 03DA     		bge	.L30
 189:main.c        ****         Truck_Left(robot);
 594              		.loc 1 189 0
 595 0034 3B68     		ldr	r3, [r7]
 596 0036 181C     		mov	r0, r3
 597 0038 FFF7FEFF 		bl	Truck_Left
 598              	.L30:
 190:main.c        ****     }
 191:main.c        **** }
 599              		.loc 1 191 0
 600 003c BD46     		mov	sp, r7
 601 003e 02B0     		add	sp, sp, #8
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 15


 602              		@ sp needed
 603 0040 80BD     		pop	{r7, pc}
 604              		.cfi_endproc
 605              	.LFE44:
 606              		.size	firstMove, .-firstMove
 607 0042 C046     		.section	.rodata
 608 0011 000000   		.align	2
 609              	.LC6:
 610 0014 63757272 		.ascii	"curr : (%d, %d)\012\000"
 610      203A2028 
 610      25642C20 
 610      2564290A 
 610      00
 611              		.section	.text.moveRobot,"ax",%progbits
 612              		.align	2
 613              		.global	moveRobot
 614              		.code	16
 615              		.thumb_func
 616              		.type	moveRobot, %function
 617              	moveRobot:
 618              	.LFB45:
 192:main.c        **** 
 193:main.c        **** int moveRobot(Robot_State_Struct *robot) // dont forgot about equals y but not X
 194:main.c        **** {
 619              		.loc 1 194 0
 620              		.cfi_startproc
 621 0000 80B5     		push	{r7, lr}
 622              		.cfi_def_cfa_offset 8
 623              		.cfi_offset 7, -8
 624              		.cfi_offset 14, -4
 625 0002 82B0     		sub	sp, sp, #8
 626              		.cfi_def_cfa_offset 16
 627 0004 00AF     		add	r7, sp, #0
 628              		.cfi_def_cfa_register 7
 629 0006 7860     		str	r0, [r7, #4]
 195:main.c        ****     // robot.currX == robot.destX && 
 196:main.c        ****     printf("curr : (%d, %d)\n", robot->currX, robot->currY);
 630              		.loc 1 196 0
 631 0008 7B68     		ldr	r3, [r7, #4]
 632 000a DA68     		ldr	r2, [r3, #12]
 633 000c 7B68     		ldr	r3, [r7, #4]
 634 000e 1B69     		ldr	r3, [r3, #16]
 635 0010 0C49     		ldr	r1, .L36
 636 0012 081C     		mov	r0, r1
 637 0014 111C     		mov	r1, r2
 638 0016 1A1C     		mov	r2, r3
 639 0018 FFF7FEFF 		bl	tfp_printf
 197:main.c        ****     Truck_Forward(robot);
 640              		.loc 1 197 0
 641 001c 7B68     		ldr	r3, [r7, #4]
 642 001e 181C     		mov	r0, r3
 643 0020 FFF7FEFF 		bl	Truck_Forward
 198:main.c        ****     Truck_Straight();
 644              		.loc 1 198 0
 645 0024 FFF7FEFF 		bl	Truck_Straight
 199:main.c        ****     if (robot->currY >= robot->destY) {
 646              		.loc 1 199 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 16


 647 0028 7B68     		ldr	r3, [r7, #4]
 648 002a 1A69     		ldr	r2, [r3, #16]
 649 002c 7B68     		ldr	r3, [r7, #4]
 650 002e 9B68     		ldr	r3, [r3, #8]
 651 0030 9A42     		cmp	r2, r3
 652 0032 01DB     		blt	.L34
 200:main.c        ****         return 1;
 653              		.loc 1 200 0
 654 0034 0123     		mov	r3, #1
 655 0036 00E0     		b	.L35
 656              	.L34:
 201:main.c        ****     }
 202:main.c        ****     
 203:main.c        ****     return 0;
 657              		.loc 1 203 0
 658 0038 0023     		mov	r3, #0
 659              	.L35:
 204:main.c        **** }
 660              		.loc 1 204 0
 661 003a 181C     		mov	r0, r3
 662 003c BD46     		mov	sp, r7
 663 003e 02B0     		add	sp, sp, #8
 664              		@ sp needed
 665 0040 80BD     		pop	{r7, pc}
 666              	.L37:
 667 0042 C046     		.align	2
 668              	.L36:
 669 0044 14000000 		.word	.LC6
 670              		.cfi_endproc
 671              	.LFE45:
 672              		.size	moveRobot, .-moveRobot
 673              		.section	.text.avoidObs,"ax",%progbits
 674              		.align	2
 675              		.global	avoidObs
 676              		.code	16
 677              		.thumb_func
 678              		.type	avoidObs, %function
 679              	avoidObs:
 680              	.LFB46:
 205:main.c        **** 
 206:main.c        **** int avoidObs(Robot_State_Struct *robot) 
 207:main.c        **** {
 681              		.loc 1 207 0
 682              		.cfi_startproc
 683 0000 80B5     		push	{r7, lr}
 684              		.cfi_def_cfa_offset 8
 685              		.cfi_offset 7, -8
 686              		.cfi_offset 14, -4
 687 0002 82B0     		sub	sp, sp, #8
 688              		.cfi_def_cfa_offset 16
 689 0004 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 691 0006 7860     		str	r0, [r7, #4]
 208:main.c        **** //    Truck_Forward(robot);
 209:main.c        **** //    Truck_Straight();
 210:main.c        **** //    Truck_Right(robot);
 211:main.c        **** //    
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 17


 212:main.c        **** //    if (detectObstacle() || detectObstacle2()) {
 213:main.c        **** //        return 0;
 214:main.c        **** //    }
 215:main.c        **** //    return 1;
 216:main.c        ****     
 217:main.c        ****     Truck_Forward(robot);
 692              		.loc 1 217 0
 693 0008 7B68     		ldr	r3, [r7, #4]
 694 000a 181C     		mov	r0, r3
 695 000c FFF7FEFF 		bl	Truck_Forward
 218:main.c        ****     Truck_Straight();
 696              		.loc 1 218 0
 697 0010 FFF7FEFF 		bl	Truck_Straight
 219:main.c        **** //    // Saw obstacle on right
 220:main.c        **** //    if (direction == 1) {
 221:main.c        **** //        Truck_Left(robot);
 222:main.c        **** //    }
 223:main.c        **** //    // Saw obstacle on left
 224:main.c        **** //    else if (direction == 2) {
 225:main.c        **** //        Truck_Right(robot);
 226:main.c        **** //    }
 227:main.c        ****     
 228:main.c        ****     // Obstacle on right 
 229:main.c        ****     if (detectObstacle()) {
 698              		.loc 1 229 0
 699 0014 FFF7FEFF 		bl	detectObstacle
 700 0018 031E     		sub	r3, r0, #0
 701 001a 05D0     		beq	.L39
 230:main.c        ****         Truck_Left(robot);
 702              		.loc 1 230 0
 703 001c 7B68     		ldr	r3, [r7, #4]
 704 001e 181C     		mov	r0, r3
 705 0020 FFF7FEFF 		bl	Truck_Left
 231:main.c        ****         return 0;
 706              		.loc 1 231 0
 707 0024 0023     		mov	r3, #0
 708 0026 0AE0     		b	.L40
 709              	.L39:
 232:main.c        ****     }
 233:main.c        ****     //Obstacle on left
 234:main.c        ****     else if (detectObstacle2()) {
 710              		.loc 1 234 0
 711 0028 FFF7FEFF 		bl	detectObstacle2
 712 002c 031E     		sub	r3, r0, #0
 713 002e 05D0     		beq	.L41
 235:main.c        ****         Truck_Right(robot);
 714              		.loc 1 235 0
 715 0030 7B68     		ldr	r3, [r7, #4]
 716 0032 181C     		mov	r0, r3
 717 0034 FFF7FEFF 		bl	Truck_Right
 236:main.c        ****         return 0;
 718              		.loc 1 236 0
 719 0038 0023     		mov	r3, #0
 720 003a 00E0     		b	.L40
 721              	.L41:
 237:main.c        ****     }
 238:main.c        ****     
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 18


 239:main.c        ****     return 1;
 722              		.loc 1 239 0
 723 003c 0123     		mov	r3, #1
 724              	.L40:
 240:main.c        **** }
 725              		.loc 1 240 0
 726 003e 181C     		mov	r0, r3
 727 0040 BD46     		mov	sp, r7
 728 0042 02B0     		add	sp, sp, #8
 729              		@ sp needed
 730 0044 80BD     		pop	{r7, pc}
 731              		.cfi_endproc
 732              	.LFE46:
 733              		.size	avoidObs, .-avoidObs
 734              		.global	__aeabi_uidiv
 735 0046 C046     		.section	.rodata
 736 0025 000000   		.align	2
 737              	.LC8:
 738 0028 61636365 		.ascii	"accel_X : %d\012\000"
 738      6C5F5820 
 738      3A202564 
 738      0A00
 739 0036 0000     		.align	2
 740              	.LC10:
 741 0038 61636365 		.ascii	"accel_Y : %d\012\000"
 741      6C5F5920 
 741      3A202564 
 741      0A00
 742              		.section	.text.getAccel,"ax",%progbits
 743              		.align	2
 744              		.global	getAccel
 745              		.code	16
 746              		.thumb_func
 747              		.type	getAccel, %function
 748              	getAccel:
 749              	.LFB47:
 241:main.c        **** 
 242:main.c        **** void getAccel(Robot_State_Struct *robot, int I2C_Status) 
 243:main.c        **** {
 750              		.loc 1 243 0
 751              		.cfi_startproc
 752 0000 90B5     		push	{r4, r7, lr}
 753              		.cfi_def_cfa_offset 12
 754              		.cfi_offset 4, -12
 755              		.cfi_offset 7, -8
 756              		.cfi_offset 14, -4
 757 0002 89B0     		sub	sp, sp, #36
 758              		.cfi_def_cfa_offset 48
 759 0004 00AF     		add	r7, sp, #0
 760              		.cfi_def_cfa_register 7
 761 0006 7860     		str	r0, [r7, #4]
 762 0008 3960     		str	r1, [r7]
 244:main.c        ****     uint8 accelStatus;
 245:main.c        ****     uint8 accelX_MSB, accelX_LSB, accelY_MSB, accelY_LSB, accelZ_MSB, accelZ_LSB;
 246:main.c        ****     int16 accelX, accelY, accelZ;
 247:main.c        ****     uint16 accelXAbs, accelYAbs, accelZAbs;
 248:main.c        ****     uint16 accelXAbsIIR, accelYAbsIIR, accelZAbsIIR;
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 19


 249:main.c        ****     Trigr_Write(0);
 763              		.loc 1 249 0
 764 000a 0020     		mov	r0, #0
 765 000c FFF7FEFF 		bl	Trigr_Write
 250:main.c        **** 
 251:main.c        ****     /* Start the I2C register reads by writing the target register */
 252:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStart(ACCEL_I2C_ADDR, I2C_WRITE);
 766              		.loc 1 252 0
 767 0010 1D20     		mov	r0, #29
 768 0012 0021     		mov	r1, #0
 769 0014 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStart
 770 0018 031C     		mov	r3, r0
 771 001a 3B60     		str	r3, [r7]
 253:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_STATUS_REG);
 772              		.loc 1 253 0
 773 001c 0020     		mov	r0, #0
 774 001e FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 775 0022 031C     		mov	r3, r0
 776 0024 3B60     		str	r3, [r7]
 254:main.c        ****     /* Start the register read */
 255:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendRestart(ACCEL_I2C_ADDR, I2C_READ);
 777              		.loc 1 255 0
 778 0026 1D20     		mov	r0, #29
 779 0028 FF21     		mov	r1, #255
 780 002a FFF7FEFF 		bl	I2C_Accel_I2CMasterSendRestart
 781 002e 031C     		mov	r3, r0
 782 0030 3B60     		str	r3, [r7]
 256:main.c        ****     /* Read out 7 bytes of status and X and Y acceleration data */
 257:main.c        ****     accelStatus = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 783              		.loc 1 257 0
 784 0032 0020     		mov	r0, #0
 785 0034 FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 786 0038 021C     		mov	r2, r0
 787 003a 1F23     		mov	r3, #31
 788 003c FB18     		add	r3, r7, r3
 789 003e 1A70     		strb	r2, [r3]
 258:main.c        ****     accelX_MSB = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 790              		.loc 1 258 0
 791 0040 0020     		mov	r0, #0
 792 0042 FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 793 0046 021C     		mov	r2, r0
 794 0048 1E23     		mov	r3, #30
 795 004a FB18     		add	r3, r7, r3
 796 004c 1A70     		strb	r2, [r3]
 259:main.c        ****     accelX_LSB = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 797              		.loc 1 259 0
 798 004e 0020     		mov	r0, #0
 799 0050 FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 800 0054 021C     		mov	r2, r0
 801 0056 1D23     		mov	r3, #29
 802 0058 FB18     		add	r3, r7, r3
 803 005a 1A70     		strb	r2, [r3]
 260:main.c        ****     accelY_MSB = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 804              		.loc 1 260 0
 805 005c 0020     		mov	r0, #0
 806 005e FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 807 0062 021C     		mov	r2, r0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 20


 808 0064 1C23     		mov	r3, #28
 809 0066 FB18     		add	r3, r7, r3
 810 0068 1A70     		strb	r2, [r3]
 261:main.c        ****     accelY_LSB = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 811              		.loc 1 261 0
 812 006a 0020     		mov	r0, #0
 813 006c FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 814 0070 021C     		mov	r2, r0
 815 0072 1B23     		mov	r3, #27
 816 0074 FB18     		add	r3, r7, r3
 817 0076 1A70     		strb	r2, [r3]
 262:main.c        ****     accelZ_MSB = I2C_Accel_I2CMasterReadByte(I2C_ACK);
 818              		.loc 1 262 0
 819 0078 0020     		mov	r0, #0
 820 007a FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 821 007e 021C     		mov	r2, r0
 822 0080 1A23     		mov	r3, #26
 823 0082 FB18     		add	r3, r7, r3
 824 0084 1A70     		strb	r2, [r3]
 263:main.c        ****     accelZ_LSB = I2C_Accel_I2CMasterReadByte(I2C_NACK);
 825              		.loc 1 263 0
 826 0086 FF20     		mov	r0, #255
 827 0088 FFF7FEFF 		bl	I2C_Accel_I2CMasterReadByte
 828 008c 021C     		mov	r2, r0
 829 008e 1923     		mov	r3, #25
 830 0090 FB18     		add	r3, r7, r3
 831 0092 1A70     		strb	r2, [r3]
 264:main.c        ****     /* Send a stop condition to end the I2C transaction */
 265:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStop();
 832              		.loc 1 265 0
 833 0094 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStop
 834 0098 031C     		mov	r3, r0
 835 009a 3B60     		str	r3, [r7]
 266:main.c        ****         
 267:main.c        ****     /* Convert the acceleration MSBs and LSBs to signed ints */
 268:main.c        ****     accelX = ((int16)((accelX_MSB<<8) + accelX_LSB))>>4;
 836              		.loc 1 268 0
 837 009c 1E23     		mov	r3, #30
 838 009e FB18     		add	r3, r7, r3
 839 00a0 1B78     		ldrb	r3, [r3]
 840 00a2 9BB2     		uxth	r3, r3
 841 00a4 1B02     		lsl	r3, r3, #8
 842 00a6 9AB2     		uxth	r2, r3
 843 00a8 1D23     		mov	r3, #29
 844 00aa FB18     		add	r3, r7, r3
 845 00ac 1B78     		ldrb	r3, [r3]
 846 00ae 9BB2     		uxth	r3, r3
 847 00b0 D318     		add	r3, r2, r3
 848 00b2 9BB2     		uxth	r3, r3
 849 00b4 9AB2     		uxth	r2, r3
 850 00b6 1623     		mov	r3, #22
 851 00b8 FB18     		add	r3, r7, r3
 852 00ba 12B2     		sxth	r2, r2
 853 00bc 1211     		asr	r2, r2, #4
 854 00be 1A80     		strh	r2, [r3]
 269:main.c        ****     accelY = ((int16)((accelY_MSB<<8) + accelY_LSB))>>4;
 855              		.loc 1 269 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 21


 856 00c0 1C23     		mov	r3, #28
 857 00c2 FB18     		add	r3, r7, r3
 858 00c4 1B78     		ldrb	r3, [r3]
 859 00c6 9BB2     		uxth	r3, r3
 860 00c8 1B02     		lsl	r3, r3, #8
 861 00ca 9AB2     		uxth	r2, r3
 862 00cc 1B23     		mov	r3, #27
 863 00ce FB18     		add	r3, r7, r3
 864 00d0 1B78     		ldrb	r3, [r3]
 865 00d2 9BB2     		uxth	r3, r3
 866 00d4 D318     		add	r3, r2, r3
 867 00d6 9BB2     		uxth	r3, r3
 868 00d8 9AB2     		uxth	r2, r3
 869 00da 1423     		mov	r3, #20
 870 00dc FB18     		add	r3, r7, r3
 871 00de 12B2     		sxth	r2, r2
 872 00e0 1211     		asr	r2, r2, #4
 873 00e2 1A80     		strh	r2, [r3]
 270:main.c        ****     accelZ = ((int16)((accelZ_MSB<<8) + accelZ_LSB))>>4;
 874              		.loc 1 270 0
 875 00e4 1A23     		mov	r3, #26
 876 00e6 FB18     		add	r3, r7, r3
 877 00e8 1B78     		ldrb	r3, [r3]
 878 00ea 9BB2     		uxth	r3, r3
 879 00ec 1B02     		lsl	r3, r3, #8
 880 00ee 9AB2     		uxth	r2, r3
 881 00f0 1923     		mov	r3, #25
 882 00f2 FB18     		add	r3, r7, r3
 883 00f4 1B78     		ldrb	r3, [r3]
 884 00f6 9BB2     		uxth	r3, r3
 885 00f8 D318     		add	r3, r2, r3
 886 00fa 9BB2     		uxth	r3, r3
 887 00fc 9AB2     		uxth	r2, r3
 888 00fe 1223     		mov	r3, #18
 889 0100 FB18     		add	r3, r7, r3
 890 0102 12B2     		sxth	r2, r2
 891 0104 1211     		asr	r2, r2, #4
 892 0106 1A80     		strh	r2, [r3]
 271:main.c        **** 
 272:main.c        ****     /* Take absolute value of accelerations                               */
 273:main.c        ****     accelXAbs = abs16(accelX);
 893              		.loc 1 273 0
 894 0108 1023     		mov	r3, #16
 895 010a FC18     		add	r4, r7, r3
 896 010c 1623     		mov	r3, #22
 897 010e FB18     		add	r3, r7, r3
 898 0110 0022     		mov	r2, #0
 899 0112 9B5E     		ldrsh	r3, [r3, r2]
 900 0114 181C     		mov	r0, r3
 901 0116 FFF7FEFF 		bl	abs16
 902 011a 031C     		mov	r3, r0
 903 011c 2380     		strh	r3, [r4]
 274:main.c        ****     accelYAbs = abs16(accelY);
 904              		.loc 1 274 0
 905 011e 0E23     		mov	r3, #14
 906 0120 FC18     		add	r4, r7, r3
 907 0122 1423     		mov	r3, #20
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 22


 908 0124 FB18     		add	r3, r7, r3
 909 0126 0022     		mov	r2, #0
 910 0128 9B5E     		ldrsh	r3, [r3, r2]
 911 012a 181C     		mov	r0, r3
 912 012c FFF7FEFF 		bl	abs16
 913 0130 031C     		mov	r3, r0
 914 0132 2380     		strh	r3, [r4]
 275:main.c        ****     accelZAbs = abs16(accelZ);
 915              		.loc 1 275 0
 916 0134 0C23     		mov	r3, #12
 917 0136 FC18     		add	r4, r7, r3
 918 0138 1223     		mov	r3, #18
 919 013a FB18     		add	r3, r7, r3
 920 013c 0022     		mov	r2, #0
 921 013e 9B5E     		ldrsh	r3, [r3, r2]
 922 0140 181C     		mov	r0, r3
 923 0142 FFF7FEFF 		bl	abs16
 924 0146 031C     		mov	r3, r0
 925 0148 2380     		strh	r3, [r4]
 276:main.c        ****     
 277:main.c        **** //    printf("speed: %d\n", PWM_2_ReadCompare());
 278:main.c        ****     if (PWM_2_ReadCompare() <= 18000) {
 926              		.loc 1 278 0
 927 014a FFF7FEFF 		bl	PWM_2_ReadCompare
 928 014e 021E     		sub	r2, r0, #0
 929 0150 1E4B     		ldr	r3, .L45
 930 0152 9A42     		cmp	r2, r3
 931 0154 0FD8     		bhi	.L43
 279:main.c        ****         PWM_2_WriteCompare(18000 + (accelXAbs / 10));
 932              		.loc 1 279 0
 933 0156 1023     		mov	r3, #16
 934 0158 FB18     		add	r3, r7, r3
 935 015a 1B88     		ldrh	r3, [r3]
 936 015c 181C     		mov	r0, r3
 937 015e 0A21     		mov	r1, #10
 938 0160 FFF7FEFF 		bl	__aeabi_uidiv
 939 0164 031C     		mov	r3, r0
 940 0166 9BB2     		uxth	r3, r3
 941 0168 184A     		ldr	r2, .L45
 942 016a 9446     		mov	ip, r2
 943 016c 6344     		add	r3, r3, ip
 944 016e 181C     		mov	r0, r3
 945 0170 FFF7FEFF 		bl	PWM_2_WriteCompare
 946 0174 0EE0     		b	.L44
 947              	.L43:
 280:main.c        ****     }
 281:main.c        ****     else {
 282:main.c        ****         PWM_2_WriteCompare(18000 - (accelXAbs / 10));
 948              		.loc 1 282 0
 949 0176 1023     		mov	r3, #16
 950 0178 FB18     		add	r3, r7, r3
 951 017a 1B88     		ldrh	r3, [r3]
 952 017c 181C     		mov	r0, r3
 953 017e 0A21     		mov	r1, #10
 954 0180 FFF7FEFF 		bl	__aeabi_uidiv
 955 0184 031C     		mov	r3, r0
 956 0186 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 23


 957 0188 1A1C     		mov	r2, r3
 958 018a 104B     		ldr	r3, .L45
 959 018c 9B1A     		sub	r3, r3, r2
 960 018e 181C     		mov	r0, r3
 961 0190 FFF7FEFF 		bl	PWM_2_WriteCompare
 962              	.L44:
 283:main.c        ****     }
 284:main.c        ****     printf("accel_X : %d\n", accelX>>4);
 963              		.loc 1 284 0
 964 0194 1623     		mov	r3, #22
 965 0196 FB18     		add	r3, r7, r3
 966 0198 0022     		mov	r2, #0
 967 019a 9B5E     		ldrsh	r3, [r3, r2]
 968 019c 1B11     		asr	r3, r3, #4
 969 019e 9BB2     		uxth	r3, r3
 970 01a0 1BB2     		sxth	r3, r3
 971 01a2 0B4A     		ldr	r2, .L45+4
 972 01a4 101C     		mov	r0, r2
 973 01a6 191C     		mov	r1, r3
 974 01a8 FFF7FEFF 		bl	tfp_printf
 285:main.c        ****     
 286:main.c        ****     printf("accel_Y : %d\n", accelY>>4);
 975              		.loc 1 286 0
 976 01ac 1423     		mov	r3, #20
 977 01ae FB18     		add	r3, r7, r3
 978 01b0 0022     		mov	r2, #0
 979 01b2 9B5E     		ldrsh	r3, [r3, r2]
 980 01b4 1B11     		asr	r3, r3, #4
 981 01b6 9BB2     		uxth	r3, r3
 982 01b8 1BB2     		sxth	r3, r3
 983 01ba 064A     		ldr	r2, .L45+8
 984 01bc 101C     		mov	r0, r2
 985 01be 191C     		mov	r1, r3
 986 01c0 FFF7FEFF 		bl	tfp_printf
 287:main.c        ****     
 288:main.c        **** }
 987              		.loc 1 288 0
 988 01c4 BD46     		mov	sp, r7
 989 01c6 09B0     		add	sp, sp, #36
 990              		@ sp needed
 991 01c8 90BD     		pop	{r4, r7, pc}
 992              	.L46:
 993 01ca C046     		.align	2
 994              	.L45:
 995 01cc 50460000 		.word	18000
 996 01d0 28000000 		.word	.LC8
 997 01d4 38000000 		.word	.LC10
 998              		.cfi_endproc
 999              	.LFE47:
 1000              		.size	getAccel, .-getAccel
 1001              		.section	.rodata
 1002 0046 0000     		.align	2
 1003              	.LC13:
 1004 0048 64657374 		.ascii	"dest : (%d, %d)\012\000"
 1004      203A2028 
 1004      25642C20 
 1004      2564290A 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 24


 1004      00
 1005 0059 000000   		.align	2
 1006              	.LC15:
 1007 005c 73746174 		.ascii	"state : INIT\012\000"
 1007      65203A20 
 1007      494E4954 
 1007      0A00
 1008 006a 0000     		.align	2
 1009              	.LC17:
 1010 006c 73746174 		.ascii	"state : AVOIDANCE\012\000"
 1010      65203A20 
 1010      41564F49 
 1010      44414E43 
 1010      450A00
 1011 007f 00       		.align	2
 1012              	.LC19:
 1013 0080 73746174 		.ascii	"state : NORMAL\012\000"
 1013      65203A20 
 1013      4E4F524D 
 1013      414C0A00 
 1014              		.align	2
 1015              	.LC21:
 1016 0090 73746174 		.ascii	"state : GOAL\012\000"
 1016      65203A20 
 1016      474F414C 
 1016      0A00
 1017 009e 0000     		.section	.text.main,"ax",%progbits
 1018              		.align	2
 1019              		.global	main
 1020              		.code	16
 1021              		.thumb_func
 1022              		.type	main, %function
 1023              	main:
 1024              	.LFB48:
 289:main.c        **** 
 290:main.c        **** void main()
 291:main.c        **** {
 1025              		.loc 1 291 0
 1026              		.cfi_startproc
 1027 0000 80B5     		push	{r7, lr}
 1028              		.cfi_def_cfa_offset 8
 1029              		.cfi_offset 7, -8
 1030              		.cfi_offset 14, -4
 1031 0002 88B0     		sub	sp, sp, #32
 1032              		.cfi_def_cfa_offset 40
 1033 0004 00AF     		add	r7, sp, #0
 1034              		.cfi_def_cfa_register 7
 292:main.c        ****     CyGlobalIntEnable;
 1035              		.loc 1 292 0
 1036              	@ 292 "main.c" 1
 1037 0006 62B6     		CPSIE   i
 1038              	@ 0 "" 2
 293:main.c        ****     PWM_2_Start();
 1039              		.loc 1 293 0
 1040              		.code	16
 1041 0008 FFF7FEFF 		bl	PWM_2_Start
 294:main.c        ****     
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 25


 295:main.c        ****     // Warming up
 296:main.c        ****     CyDelay(250);
 1042              		.loc 1 296 0
 1043 000c FA20     		mov	r0, #250
 1044 000e FFF7FEFF 		bl	CyDelay
 297:main.c        ****     
 298:main.c        ****     UART_Start();
 1045              		.loc 1 298 0
 1046 0012 FFF7FEFF 		bl	UART_Start
 299:main.c        ****     init_printf(NULL,putdata);
 1047              		.loc 1 299 0
 1048 0016 674B     		ldr	r3, .L57
 1049 0018 0020     		mov	r0, #0
 1050 001a 191C     		mov	r1, r3
 1051 001c FFF7FEFF 		bl	init_printf
 300:main.c        **** //    UART_UartPutString("USB_UART\n");
 301:main.c        **** //	NewLine();
 302:main.c        ****     
 303:main.c        **** ////    while (1) {
 304:main.c        **** ////        detectObstacle();
 305:main.c        **** ////        detectObstacle2();
 306:main.c        **** ////        CyDelay(50);
 307:main.c        **** ////    }
 308:main.c        ****     
 309:main.c        ****     
 310:main.c        **** //    Clock_1_Enable();
 311:main.c        **** //    Clock_1_Start();
 312:main.c        **** //    isr_1_StartEx(MY_ISR);
 313:main.c        ****     
 314:main.c        ****     I2C_Accel_Start();
 1052              		.loc 1 314 0
 1053 0020 FFF7FEFF 		bl	I2C_Accel_Start
 315:main.c        ****     
 316:main.c        ****     int I2C_Status;
 317:main.c        ****    
 318:main.c        ****     /* Perform 1 time configuration of the Accelerometer */
 319:main.c        ****     /* Put the accelerometer in standby mode so we can configure it */
 320:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStart(ACCEL_I2C_ADDR, I2C_WRITE);
 1054              		.loc 1 320 0
 1055 0024 1D20     		mov	r0, #29
 1056 0026 0021     		mov	r1, #0
 1057 0028 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStart
 1058 002c 031C     		mov	r3, r0
 1059 002e FB61     		str	r3, [r7, #28]
 321:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_SYSMOD_REG);
 1060              		.loc 1 321 0
 1061 0030 0B20     		mov	r0, #11
 1062 0032 FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1063 0036 031C     		mov	r3, r0
 1064 0038 FB61     		str	r3, [r7, #28]
 322:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_MODE_STANDBY);
 1065              		.loc 1 322 0
 1066 003a 0020     		mov	r0, #0
 1067 003c FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1068 0040 031C     		mov	r3, r0
 1069 0042 FB61     		str	r3, [r7, #28]
 323:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStop();
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 26


 1070              		.loc 1 323 0
 1071 0044 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStop
 1072 0048 031C     		mov	r3, r0
 1073 004a FB61     		str	r3, [r7, #28]
 324:main.c        ****     //set the system control mode for 800 Hz sampling
 325:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStart(ACCEL_I2C_ADDR, I2C_WRITE);
 1074              		.loc 1 325 0
 1075 004c 1D20     		mov	r0, #29
 1076 004e 0021     		mov	r1, #0
 1077 0050 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStart
 1078 0054 031C     		mov	r3, r0
 1079 0056 FB61     		str	r3, [r7, #28]
 326:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_CTRL_REG1);
 1080              		.loc 1 326 0
 1081 0058 2A20     		mov	r0, #42
 1082 005a FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1083 005e 031C     		mov	r3, r0
 1084 0060 FB61     		str	r3, [r7, #28]
 327:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_CTRL_REG_MODE);
 1085              		.loc 1 327 0
 1086 0062 0120     		mov	r0, #1
 1087 0064 FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1088 0068 031C     		mov	r3, r0
 1089 006a FB61     		str	r3, [r7, #28]
 328:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStop();
 1090              		.loc 1 328 0
 1091 006c FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStop
 1092 0070 031C     		mov	r3, r0
 1093 0072 FB61     		str	r3, [r7, #28]
 329:main.c        ****     //set the system mode to active
 330:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStart(ACCEL_I2C_ADDR, I2C_WRITE);
 1094              		.loc 1 330 0
 1095 0074 1D20     		mov	r0, #29
 1096 0076 0021     		mov	r1, #0
 1097 0078 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStart
 1098 007c 031C     		mov	r3, r0
 1099 007e FB61     		str	r3, [r7, #28]
 331:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_SYSMOD_REG);
 1100              		.loc 1 331 0
 1101 0080 0B20     		mov	r0, #11
 1102 0082 FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1103 0086 031C     		mov	r3, r0
 1104 0088 FB61     		str	r3, [r7, #28]
 332:main.c        ****     I2C_Status = I2C_Accel_I2CMasterWriteByte(ACCEL_MODE_WAKE);
 1105              		.loc 1 332 0
 1106 008a 0120     		mov	r0, #1
 1107 008c FFF7FEFF 		bl	I2C_Accel_I2CMasterWriteByte
 1108 0090 031C     		mov	r3, r0
 1109 0092 FB61     		str	r3, [r7, #28]
 333:main.c        ****     I2C_Status = I2C_Accel_I2CMasterSendStop();
 1110              		.loc 1 333 0
 1111 0094 FFF7FEFF 		bl	I2C_Accel_I2CMasterSendStop
 1112 0098 031C     		mov	r3, r0
 1113 009a FB61     		str	r3, [r7, #28]
 334:main.c        ****     
 335:main.c        ****      Robot_State_Struct robot = 
 1114              		.loc 1 335 0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 27


 1115 009c 3B1D     		add	r3, r7, #4
 1116 009e 0022     		mov	r2, #0
 1117 00a0 1A70     		strb	r2, [r3]
 1118 00a2 3B1D     		add	r3, r7, #4
 1119 00a4 0022     		mov	r2, #0
 1120 00a6 5A60     		str	r2, [r3, #4]
 1121 00a8 3B1D     		add	r3, r7, #4
 1122 00aa 0022     		mov	r2, #0
 1123 00ac 9A60     		str	r2, [r3, #8]
 1124 00ae 3B1D     		add	r3, r7, #4
 1125 00b0 0022     		mov	r2, #0
 1126 00b2 DA60     		str	r2, [r3, #12]
 1127 00b4 3B1D     		add	r3, r7, #4
 1128 00b6 0022     		mov	r2, #0
 1129 00b8 1A61     		str	r2, [r3, #16]
 1130 00ba 3B1D     		add	r3, r7, #4
 1131 00bc 3E4A     		ldr	r2, .L57+4
 1132 00be 5A61     		str	r2, [r3, #20]
 336:main.c        ****     {
 337:main.c        ****         0, // init state 
 338:main.c        ****         0, // destX = 0
 339:main.c        ****         0, // destY = 10
 340:main.c        ****         0, // currX = 0
 341:main.c        ****         0, // currY = 0
 342:main.c        ****         1000000000 // distToObstacle = really far away
 343:main.c        ****     };
 344:main.c        **** 
 345:main.c        ****     robot.destX = 0;
 1133              		.loc 1 345 0
 1134 00c0 3B1D     		add	r3, r7, #4
 1135 00c2 0022     		mov	r2, #0
 1136 00c4 5A60     		str	r2, [r3, #4]
 346:main.c        ****     robot.destY = 50;
 1137              		.loc 1 346 0
 1138 00c6 3B1D     		add	r3, r7, #4
 1139 00c8 3222     		mov	r2, #50
 1140 00ca 9A60     		str	r2, [r3, #8]
 347:main.c        ****     firstMove(robot.destX, &robot);
 1141              		.loc 1 347 0
 1142 00cc 3B1D     		add	r3, r7, #4
 1143 00ce 5A68     		ldr	r2, [r3, #4]
 1144 00d0 3B1D     		add	r3, r7, #4
 1145 00d2 101C     		mov	r0, r2
 1146 00d4 191C     		mov	r1, r3
 1147 00d6 FFF7FEFF 		bl	firstMove
 348:main.c        ****     printf("dest : (%d, %d)\n", robot.destX, robot.destY);
 1148              		.loc 1 348 0
 1149 00da 3B1D     		add	r3, r7, #4
 1150 00dc 5A68     		ldr	r2, [r3, #4]
 1151 00de 3B1D     		add	r3, r7, #4
 1152 00e0 9B68     		ldr	r3, [r3, #8]
 1153 00e2 3649     		ldr	r1, .L57+8
 1154 00e4 081C     		mov	r0, r1
 1155 00e6 111C     		mov	r1, r2
 1156 00e8 1A1C     		mov	r2, r3
 1157 00ea FFF7FEFF 		bl	tfp_printf
 349:main.c        ****     printf("state : INIT\n");
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 28


 1158              		.loc 1 349 0
 1159 00ee 344B     		ldr	r3, .L57+12
 1160 00f0 181C     		mov	r0, r3
 1161 00f2 FFF7FEFF 		bl	tfp_printf
 350:main.c        ****    
 351:main.c        ****     // object right in front of us during init
 352:main.c        ****     if (detectObstacle()) {
 1162              		.loc 1 352 0
 1163 00f6 FFF7FEFF 		bl	detectObstacle
 1164 00fa 031E     		sub	r3, r0, #0
 1165 00fc 07D0     		beq	.L48
 353:main.c        ****         robot.state = 2;
 1166              		.loc 1 353 0
 1167 00fe 3B1D     		add	r3, r7, #4
 1168 0100 0222     		mov	r2, #2
 1169 0102 1A70     		strb	r2, [r3]
 354:main.c        ****         printf("state : AVOIDANCE\n");
 1170              		.loc 1 354 0
 1171 0104 2F4B     		ldr	r3, .L57+16
 1172 0106 181C     		mov	r0, r3
 1173 0108 FFF7FEFF 		bl	tfp_printf
 1174 010c 06E0     		b	.L49
 1175              	.L48:
 355:main.c        ****     }
 356:main.c        ****     else {
 357:main.c        ****         robot.state = 1;
 1176              		.loc 1 357 0
 1177 010e 3B1D     		add	r3, r7, #4
 1178 0110 0122     		mov	r2, #1
 1179 0112 1A70     		strb	r2, [r3]
 358:main.c        ****         printf("state : NORMAL\n");
 1180              		.loc 1 358 0
 1181 0114 2C4B     		ldr	r3, .L57+20
 1182 0116 181C     		mov	r0, r3
 1183 0118 FFF7FEFF 		bl	tfp_printf
 1184              	.L49:
 359:main.c        ****     }
 360:main.c        ****     
 361:main.c        ****     while (robot.state != 3) {
 1185              		.loc 1 361 0
 1186 011c 3BE0     		b	.L50
 1187              	.L56:
 362:main.c        ****         // State 1, Normal state
 363:main.c        ****         if (robot.state == 1) {
 1188              		.loc 1 363 0
 1189 011e 3B1D     		add	r3, r7, #4
 1190 0120 1B78     		ldrb	r3, [r3]
 1191 0122 012B     		cmp	r3, #1
 1192 0124 23D1     		bne	.L51
 364:main.c        ****             if (detectObstacle() || detectObstacle2()) {
 1193              		.loc 1 364 0
 1194 0126 FFF7FEFF 		bl	detectObstacle
 1195 012a 031E     		sub	r3, r0, #0
 1196 012c 03D1     		bne	.L52
 1197              		.loc 1 364 0 is_stmt 0 discriminator 1
 1198 012e FFF7FEFF 		bl	detectObstacle2
 1199 0132 031E     		sub	r3, r0, #0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 29


 1200 0134 07D0     		beq	.L53
 1201              	.L52:
 365:main.c        ****                 robot.state = 2;
 1202              		.loc 1 365 0 is_stmt 1
 1203 0136 3B1D     		add	r3, r7, #4
 1204 0138 0222     		mov	r2, #2
 1205 013a 1A70     		strb	r2, [r3]
 366:main.c        ****                 printf("state : AVOIDANCE\n");
 1206              		.loc 1 366 0
 1207 013c 214B     		ldr	r3, .L57+16
 1208 013e 181C     		mov	r0, r3
 1209 0140 FFF7FEFF 		bl	tfp_printf
 1210 0144 12E0     		b	.L54
 1211              	.L53:
 367:main.c        ****             }
 368:main.c        ****             else {
 369:main.c        ****                 getAccel(&robot, I2C_Status);
 1212              		.loc 1 369 0
 1213 0146 3A1D     		add	r2, r7, #4
 1214 0148 FB69     		ldr	r3, [r7, #28]
 1215 014a 101C     		mov	r0, r2
 1216 014c 191C     		mov	r1, r3
 1217 014e FFF7FEFF 		bl	getAccel
 370:main.c        ****                 
 371:main.c        ****                 // Robot is at the end destination
 372:main.c        ****                 if (moveRobot(&robot)) {
 1218              		.loc 1 372 0
 1219 0152 3B1D     		add	r3, r7, #4
 1220 0154 181C     		mov	r0, r3
 1221 0156 FFF7FEFF 		bl	moveRobot
 1222 015a 031E     		sub	r3, r0, #0
 1223 015c 1BD0     		beq	.L50
 373:main.c        ****                     robot.state = 3;
 1224              		.loc 1 373 0
 1225 015e 3B1D     		add	r3, r7, #4
 1226 0160 0322     		mov	r2, #3
 1227 0162 1A70     		strb	r2, [r3]
 374:main.c        ****                     printf("state : GOAL\n");
 1228              		.loc 1 374 0
 1229 0164 194B     		ldr	r3, .L57+24
 1230 0166 181C     		mov	r0, r3
 1231 0168 FFF7FEFF 		bl	tfp_printf
 1232              	.L54:
 1233 016c 13E0     		b	.L50
 1234              	.L51:
 375:main.c        ****                 }
 376:main.c        ****             }
 377:main.c        ****         }
 378:main.c        ****         // State 2, Avoidance State 
 379:main.c        ****         else if (robot.state == 2 ) {
 1235              		.loc 1 379 0
 1236 016e 3B1D     		add	r3, r7, #4
 1237 0170 1B78     		ldrb	r3, [r3]
 1238 0172 022B     		cmp	r3, #2
 1239 0174 0FD1     		bne	.L50
 380:main.c        ****             
 381:main.c        ****             // No more obstacle
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 30


 382:main.c        ****             if (avoidObs(&robot)) {
 1240              		.loc 1 382 0
 1241 0176 3B1D     		add	r3, r7, #4
 1242 0178 181C     		mov	r0, r3
 1243 017a FFF7FEFF 		bl	avoidObs
 1244 017e 031E     		sub	r3, r0, #0
 1245 0180 06D0     		beq	.L55
 383:main.c        ****                 robot.state = 1;
 1246              		.loc 1 383 0
 1247 0182 3B1D     		add	r3, r7, #4
 1248 0184 0122     		mov	r2, #1
 1249 0186 1A70     		strb	r2, [r3]
 384:main.c        ****                 printf("state : NORMAL\n");
 1250              		.loc 1 384 0
 1251 0188 0F4B     		ldr	r3, .L57+20
 1252 018a 181C     		mov	r0, r3
 1253 018c FFF7FEFF 		bl	tfp_printf
 1254              	.L55:
 385:main.c        ****             }
 386:main.c        ****             CyDelay(30);
 1255              		.loc 1 386 0
 1256 0190 1E20     		mov	r0, #30
 1257 0192 FFF7FEFF 		bl	CyDelay
 1258              	.L50:
 361:main.c        ****         // State 1, Normal state
 1259              		.loc 1 361 0
 1260 0196 3B1D     		add	r3, r7, #4
 1261 0198 1B78     		ldrb	r3, [r3]
 1262 019a 032B     		cmp	r3, #3
 1263 019c BFD1     		bne	.L56
 387:main.c        ****         }
 388:main.c        ****     }
 389:main.c        **** //     State 3, robot is at the end goal 
 390:main.c        ****     Truck_Stop();
 1264              		.loc 1 390 0
 1265 019e FFF7FEFF 		bl	Truck_Stop
 391:main.c        ****     CyDelay(500);
 1266              		.loc 1 391 0
 1267 01a2 FA23     		mov	r3, #250
 1268 01a4 5B00     		lsl	r3, r3, #1
 1269 01a6 181C     		mov	r0, r3
 1270 01a8 FFF7FEFF 		bl	CyDelay
 392:main.c        **** }
 1271              		.loc 1 392 0
 1272 01ac BD46     		mov	sp, r7
 1273 01ae 08B0     		add	sp, sp, #32
 1274              		@ sp needed
 1275 01b0 80BD     		pop	{r7, pc}
 1276              	.L58:
 1277 01b2 C046     		.align	2
 1278              	.L57:
 1279 01b4 00000000 		.word	putdata
 1280 01b8 00CA9A3B 		.word	1000000000
 1281 01bc 48000000 		.word	.LC13
 1282 01c0 5C000000 		.word	.LC15
 1283 01c4 6C000000 		.word	.LC17
 1284 01c8 80000000 		.word	.LC19
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 31


 1285 01cc 90000000 		.word	.LC21
 1286              		.cfi_endproc
 1287              	.LFE48:
 1288              		.size	main, .-main
 1289              		.text
 1290              	.Letext0:
 1291              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1292              		.section	.debug_info,"",%progbits
 1293              	.Ldebug_info0:
 1294 0000 5E040000 		.4byte	0x45e
 1295 0004 0400     		.2byte	0x4
 1296 0006 00000000 		.4byte	.Ldebug_abbrev0
 1297 000a 04       		.byte	0x4
 1298 000b 01       		.uleb128 0x1
 1299 000c F7010000 		.4byte	.LASF62
 1300 0010 01       		.byte	0x1
 1301 0011 CB020000 		.4byte	.LASF63
 1302 0015 86010000 		.4byte	.LASF64
 1303 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1304 001d 00000000 		.4byte	0
 1305 0021 00000000 		.4byte	.Ldebug_line0
 1306 0025 02       		.uleb128 0x2
 1307 0026 01       		.byte	0x1
 1308 0027 06       		.byte	0x6
 1309 0028 06000000 		.4byte	.LASF0
 1310 002c 02       		.uleb128 0x2
 1311 002d 01       		.byte	0x1
 1312 002e 08       		.byte	0x8
 1313 002f 08010000 		.4byte	.LASF1
 1314 0033 02       		.uleb128 0x2
 1315 0034 02       		.byte	0x2
 1316 0035 05       		.byte	0x5
 1317 0036 18000000 		.4byte	.LASF2
 1318 003a 02       		.uleb128 0x2
 1319 003b 02       		.byte	0x2
 1320 003c 07       		.byte	0x7
 1321 003d 66010000 		.4byte	.LASF3
 1322 0041 02       		.uleb128 0x2
 1323 0042 04       		.byte	0x4
 1324 0043 05       		.byte	0x5
 1325 0044 CD000000 		.4byte	.LASF4
 1326 0048 02       		.uleb128 0x2
 1327 0049 04       		.byte	0x4
 1328 004a 07       		.byte	0x7
 1329 004b D2020000 		.4byte	.LASF5
 1330 004f 02       		.uleb128 0x2
 1331 0050 08       		.byte	0x8
 1332 0051 05       		.byte	0x5
 1333 0052 BF000000 		.4byte	.LASF6
 1334 0056 02       		.uleb128 0x2
 1335 0057 08       		.byte	0x8
 1336 0058 07       		.byte	0x7
 1337 0059 34010000 		.4byte	.LASF7
 1338 005d 03       		.uleb128 0x3
 1339 005e 04       		.byte	0x4
 1340 005f 05       		.byte	0x5
 1341 0060 696E7400 		.ascii	"int\000"
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 32


 1342 0064 02       		.uleb128 0x2
 1343 0065 04       		.byte	0x4
 1344 0066 07       		.byte	0x7
 1345 0067 59010000 		.4byte	.LASF8
 1346 006b 04       		.uleb128 0x4
 1347 006c 8B000000 		.4byte	.LASF9
 1348 0070 02       		.byte	0x2
 1349 0071 B901     		.2byte	0x1b9
 1350 0073 2C000000 		.4byte	0x2c
 1351 0077 04       		.uleb128 0x4
 1352 0078 73000000 		.4byte	.LASF10
 1353 007c 02       		.byte	0x2
 1354 007d BA01     		.2byte	0x1ba
 1355 007f 3A000000 		.4byte	0x3a
 1356 0083 04       		.uleb128 0x4
 1357 0084 C4020000 		.4byte	.LASF11
 1358 0088 02       		.byte	0x2
 1359 0089 BB01     		.2byte	0x1bb
 1360 008b 48000000 		.4byte	0x48
 1361 008f 04       		.uleb128 0x4
 1362 0090 7A000000 		.4byte	.LASF12
 1363 0094 02       		.byte	0x2
 1364 0095 BD01     		.2byte	0x1bd
 1365 0097 33000000 		.4byte	0x33
 1366 009b 02       		.uleb128 0x2
 1367 009c 04       		.byte	0x4
 1368 009d 04       		.byte	0x4
 1369 009e AE000000 		.4byte	.LASF13
 1370 00a2 02       		.uleb128 0x2
 1371 00a3 08       		.byte	0x8
 1372 00a4 04       		.byte	0x4
 1373 00a5 3D030000 		.4byte	.LASF14
 1374 00a9 02       		.uleb128 0x2
 1375 00aa 01       		.byte	0x1
 1376 00ab 08       		.byte	0x8
 1377 00ac 81010000 		.4byte	.LASF15
 1378 00b0 02       		.uleb128 0x2
 1379 00b1 04       		.byte	0x4
 1380 00b2 07       		.byte	0x7
 1381 00b3 28000000 		.4byte	.LASF16
 1382 00b7 05       		.uleb128 0x5
 1383 00b8 04       		.byte	0x4
 1384 00b9 06       		.uleb128 0x6
 1385 00ba 18       		.byte	0x18
 1386 00bb 01       		.byte	0x1
 1387 00bc 21       		.byte	0x21
 1388 00bd 0A010000 		.4byte	0x10a
 1389 00c1 07       		.uleb128 0x7
 1390 00c2 12000000 		.4byte	.LASF17
 1391 00c6 01       		.byte	0x1
 1392 00c7 23       		.byte	0x23
 1393 00c8 6B000000 		.4byte	0x6b
 1394 00cc 00       		.byte	0
 1395 00cd 07       		.uleb128 0x7
 1396 00ce 97000000 		.4byte	.LASF18
 1397 00d2 01       		.byte	0x1
 1398 00d3 24       		.byte	0x24
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 33


 1399 00d4 5D000000 		.4byte	0x5d
 1400 00d8 04       		.byte	0x4
 1401 00d9 07       		.uleb128 0x7
 1402 00da 9D000000 		.4byte	.LASF19
 1403 00de 01       		.byte	0x1
 1404 00df 25       		.byte	0x25
 1405 00e0 5D000000 		.4byte	0x5d
 1406 00e4 08       		.byte	0x8
 1407 00e5 07       		.uleb128 0x7
 1408 00e6 91000000 		.4byte	.LASF20
 1409 00ea 01       		.byte	0x1
 1410 00eb 26       		.byte	0x26
 1411 00ec 5D000000 		.4byte	0x5d
 1412 00f0 0C       		.byte	0xc
 1413 00f1 07       		.uleb128 0x7
 1414 00f2 90020000 		.4byte	.LASF21
 1415 00f6 01       		.byte	0x1
 1416 00f7 27       		.byte	0x27
 1417 00f8 5D000000 		.4byte	0x5d
 1418 00fc 10       		.byte	0x10
 1419 00fd 07       		.uleb128 0x7
 1420 00fe 31000000 		.4byte	.LASF22
 1421 0102 01       		.byte	0x1
 1422 0103 28       		.byte	0x28
 1423 0104 83000000 		.4byte	0x83
 1424 0108 14       		.byte	0x14
 1425 0109 00       		.byte	0
 1426 010a 08       		.uleb128 0x8
 1427 010b 96020000 		.4byte	.LASF23
 1428 010f 01       		.byte	0x1
 1429 0110 29       		.byte	0x29
 1430 0111 B9000000 		.4byte	0xb9
 1431 0115 09       		.uleb128 0x9
 1432 0116 6B000000 		.4byte	.LASF25
 1433 011a 01       		.byte	0x1
 1434 011b 2B       		.byte	0x2b
 1435 011c 00000000 		.4byte	.LFB34
 1436 0120 1E000000 		.4byte	.LFE34-.LFB34
 1437 0124 01       		.uleb128 0x1
 1438 0125 9C       		.byte	0x9c
 1439 0126 43010000 		.4byte	0x143
 1440 012a 0A       		.uleb128 0xa
 1441 012b 7000     		.ascii	"p\000"
 1442 012d 01       		.byte	0x1
 1443 012e 2B       		.byte	0x2b
 1444 012f B7000000 		.4byte	0xb7
 1445 0133 02       		.uleb128 0x2
 1446 0134 91       		.byte	0x91
 1447 0135 74       		.sleb128 -12
 1448 0136 0A       		.uleb128 0xa
 1449 0137 6300     		.ascii	"c\000"
 1450 0139 01       		.byte	0x1
 1451 013a 2B       		.byte	0x2b
 1452 013b A9000000 		.4byte	0xa9
 1453 013f 02       		.uleb128 0x2
 1454 0140 91       		.byte	0x91
 1455 0141 73       		.sleb128 -13
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 34


 1456 0142 00       		.byte	0
 1457 0143 0B       		.uleb128 0xb
 1458 0144 F0010000 		.4byte	.LASF65
 1459 0148 01       		.byte	0x1
 1460 0149 34       		.byte	0x34
 1461 014a 00000000 		.4byte	.LFB35
 1462 014e 18000000 		.4byte	.LFE35-.LFB35
 1463 0152 01       		.uleb128 0x1
 1464 0153 9C       		.byte	0x9c
 1465 0154 0C       		.uleb128 0xc
 1466 0155 F9000000 		.4byte	.LASF38
 1467 0159 01       		.byte	0x1
 1468 015a 3F       		.byte	0x3f
 1469 015b 77000000 		.4byte	0x77
 1470 015f 00000000 		.4byte	.LFB36
 1471 0163 3C000000 		.4byte	.LFE36-.LFB36
 1472 0167 01       		.uleb128 0x1
 1473 0168 9C       		.byte	0x9c
 1474 0169 8A010000 		.4byte	0x18a
 1475 016d 0D       		.uleb128 0xd
 1476 016e 22000000 		.4byte	.LASF24
 1477 0172 01       		.byte	0x1
 1478 0173 3F       		.byte	0x3f
 1479 0174 8F000000 		.4byte	0x8f
 1480 0178 02       		.uleb128 0x2
 1481 0179 91       		.byte	0x91
 1482 017a 6E       		.sleb128 -18
 1483 017b 0E       		.uleb128 0xe
 1484 017c 64000000 		.4byte	.LASF33
 1485 0180 01       		.byte	0x1
 1486 0181 41       		.byte	0x41
 1487 0182 77000000 		.4byte	0x77
 1488 0186 02       		.uleb128 0x2
 1489 0187 91       		.byte	0x91
 1490 0188 76       		.sleb128 -10
 1491 0189 00       		.byte	0
 1492 018a 0F       		.uleb128 0xf
 1493 018b 80000000 		.4byte	.LASF30
 1494 018f 01       		.byte	0x1
 1495 0190 4E       		.byte	0x4e
 1496 0191 00000000 		.4byte	.LFB37
 1497 0195 20000000 		.4byte	.LFE37-.LFB37
 1498 0199 01       		.uleb128 0x1
 1499 019a 9C       		.byte	0x9c
 1500 019b 10       		.uleb128 0x10
 1501 019c 4B010000 		.4byte	.LASF26
 1502 01a0 01       		.byte	0x1
 1503 01a1 56       		.byte	0x56
 1504 01a2 00000000 		.4byte	.LFB38
 1505 01a6 18000000 		.4byte	.LFE38-.LFB38
 1506 01aa 01       		.uleb128 0x1
 1507 01ab 9C       		.byte	0x9c
 1508 01ac BF010000 		.4byte	0x1bf
 1509 01b0 0D       		.uleb128 0xd
 1510 01b1 00000000 		.4byte	.LASF27
 1511 01b5 01       		.byte	0x1
 1512 01b6 56       		.byte	0x56
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 35


 1513 01b7 BF010000 		.4byte	0x1bf
 1514 01bb 02       		.uleb128 0x2
 1515 01bc 91       		.byte	0x91
 1516 01bd 74       		.sleb128 -12
 1517 01be 00       		.byte	0
 1518 01bf 11       		.uleb128 0x11
 1519 01c0 04       		.byte	0x4
 1520 01c1 0A010000 		.4byte	0x10a
 1521 01c5 09       		.uleb128 0x9
 1522 01c6 A9020000 		.4byte	.LASF28
 1523 01ca 01       		.byte	0x1
 1524 01cb 61       		.byte	0x61
 1525 01cc 00000000 		.4byte	.LFB39
 1526 01d0 2E000000 		.4byte	.LFE39-.LFB39
 1527 01d4 01       		.uleb128 0x1
 1528 01d5 9C       		.byte	0x9c
 1529 01d6 E9010000 		.4byte	0x1e9
 1530 01da 0D       		.uleb128 0xd
 1531 01db 00000000 		.4byte	.LASF27
 1532 01df 01       		.byte	0x1
 1533 01e0 61       		.byte	0x61
 1534 01e1 BF010000 		.4byte	0x1bf
 1535 01e5 02       		.uleb128 0x2
 1536 01e6 91       		.byte	0x91
 1537 01e7 74       		.sleb128 -12
 1538 01e8 00       		.byte	0
 1539 01e9 09       		.uleb128 0x9
 1540 01ea EF020000 		.4byte	.LASF29
 1541 01ee 01       		.byte	0x1
 1542 01ef 6B       		.byte	0x6b
 1543 01f0 00000000 		.4byte	.LFB40
 1544 01f4 2E000000 		.4byte	.LFE40-.LFB40
 1545 01f8 01       		.uleb128 0x1
 1546 01f9 9C       		.byte	0x9c
 1547 01fa 0D020000 		.4byte	0x20d
 1548 01fe 0D       		.uleb128 0xd
 1549 01ff 00000000 		.4byte	.LASF27
 1550 0203 01       		.byte	0x1
 1551 0204 6B       		.byte	0x6b
 1552 0205 BF010000 		.4byte	0x1bf
 1553 0209 02       		.uleb128 0x2
 1554 020a 91       		.byte	0x91
 1555 020b 74       		.sleb128 -12
 1556 020c 00       		.byte	0
 1557 020d 0F       		.uleb128 0xf
 1558 020e 04030000 		.4byte	.LASF31
 1559 0212 01       		.byte	0x1
 1560 0213 75       		.byte	0x75
 1561 0214 00000000 		.4byte	.LFB41
 1562 0218 1A000000 		.4byte	.LFE41-.LFB41
 1563 021c 01       		.uleb128 0x1
 1564 021d 9C       		.byte	0x9c
 1565 021e 12       		.uleb128 0x12
 1566 021f B5020000 		.4byte	.LASF32
 1567 0223 01       		.byte	0x1
 1568 0224 7F       		.byte	0x7f
 1569 0225 5D000000 		.4byte	0x5d
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 36


 1570 0229 00000000 		.4byte	.LFB42
 1571 022d 80000000 		.4byte	.LFE42-.LFB42
 1572 0231 01       		.uleb128 0x1
 1573 0232 9C       		.byte	0x9c
 1574 0233 46020000 		.4byte	0x246
 1575 0237 0E       		.uleb128 0xe
 1576 0238 13030000 		.4byte	.LASF34
 1577 023c 01       		.byte	0x1
 1578 023d 81       		.byte	0x81
 1579 023e 5D000000 		.4byte	0x5d
 1580 0242 02       		.uleb128 0x2
 1581 0243 91       		.byte	0x91
 1582 0244 74       		.sleb128 -12
 1583 0245 00       		.byte	0
 1584 0246 12       		.uleb128 0x12
 1585 0247 5A030000 		.4byte	.LASF35
 1586 024b 01       		.byte	0x1
 1587 024c 9A       		.byte	0x9a
 1588 024d 5D000000 		.4byte	0x5d
 1589 0251 00000000 		.4byte	.LFB43
 1590 0255 80000000 		.4byte	.LFE43-.LFB43
 1591 0259 01       		.uleb128 0x1
 1592 025a 9C       		.byte	0x9c
 1593 025b 6E020000 		.4byte	0x26e
 1594 025f 0E       		.uleb128 0xe
 1595 0260 23030000 		.4byte	.LASF36
 1596 0264 01       		.byte	0x1
 1597 0265 9C       		.byte	0x9c
 1598 0266 5D000000 		.4byte	0x5d
 1599 026a 02       		.uleb128 0x2
 1600 026b 91       		.byte	0x91
 1601 026c 74       		.sleb128 -12
 1602 026d 00       		.byte	0
 1603 026e 09       		.uleb128 0x9
 1604 026f 40000000 		.4byte	.LASF37
 1605 0273 01       		.byte	0x1
 1606 0274 B5       		.byte	0xb5
 1607 0275 00000000 		.4byte	.LFB44
 1608 0279 42000000 		.4byte	.LFE44-.LFB44
 1609 027d 01       		.uleb128 0x1
 1610 027e 9C       		.byte	0x9c
 1611 027f A0020000 		.4byte	0x2a0
 1612 0283 0D       		.uleb128 0xd
 1613 0284 97000000 		.4byte	.LASF18
 1614 0288 01       		.byte	0x1
 1615 0289 B5       		.byte	0xb5
 1616 028a 5D000000 		.4byte	0x5d
 1617 028e 02       		.uleb128 0x2
 1618 028f 91       		.byte	0x91
 1619 0290 74       		.sleb128 -12
 1620 0291 0D       		.uleb128 0xd
 1621 0292 00000000 		.4byte	.LASF27
 1622 0296 01       		.byte	0x1
 1623 0297 B5       		.byte	0xb5
 1624 0298 BF010000 		.4byte	0x1bf
 1625 029c 02       		.uleb128 0x2
 1626 029d 91       		.byte	0x91
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 37


 1627 029e 70       		.sleb128 -16
 1628 029f 00       		.byte	0
 1629 02a0 13       		.uleb128 0x13
 1630 02a1 FA020000 		.4byte	.LASF39
 1631 02a5 01       		.byte	0x1
 1632 02a6 C1       		.byte	0xc1
 1633 02a7 5D000000 		.4byte	0x5d
 1634 02ab 00000000 		.4byte	.LFB45
 1635 02af 48000000 		.4byte	.LFE45-.LFB45
 1636 02b3 01       		.uleb128 0x1
 1637 02b4 9C       		.byte	0x9c
 1638 02b5 C8020000 		.4byte	0x2c8
 1639 02b9 0D       		.uleb128 0xd
 1640 02ba 00000000 		.4byte	.LASF27
 1641 02be 01       		.byte	0x1
 1642 02bf C1       		.byte	0xc1
 1643 02c0 BF010000 		.4byte	0x1bf
 1644 02c4 02       		.uleb128 0x2
 1645 02c5 91       		.byte	0x91
 1646 02c6 74       		.sleb128 -12
 1647 02c7 00       		.byte	0
 1648 02c8 13       		.uleb128 0x13
 1649 02c9 16010000 		.4byte	.LASF40
 1650 02cd 01       		.byte	0x1
 1651 02ce CE       		.byte	0xce
 1652 02cf 5D000000 		.4byte	0x5d
 1653 02d3 00000000 		.4byte	.LFB46
 1654 02d7 46000000 		.4byte	.LFE46-.LFB46
 1655 02db 01       		.uleb128 0x1
 1656 02dc 9C       		.byte	0x9c
 1657 02dd F0020000 		.4byte	0x2f0
 1658 02e1 0D       		.uleb128 0xd
 1659 02e2 00000000 		.4byte	.LASF27
 1660 02e6 01       		.byte	0x1
 1661 02e7 CE       		.byte	0xce
 1662 02e8 BF010000 		.4byte	0x1bf
 1663 02ec 02       		.uleb128 0x2
 1664 02ed 91       		.byte	0x91
 1665 02ee 74       		.sleb128 -12
 1666 02ef 00       		.byte	0
 1667 02f0 09       		.uleb128 0x9
 1668 02f1 FF000000 		.4byte	.LASF41
 1669 02f5 01       		.byte	0x1
 1670 02f6 F2       		.byte	0xf2
 1671 02f7 00000000 		.4byte	.LFB47
 1672 02fb D8010000 		.4byte	.LFE47-.LFB47
 1673 02ff 01       		.uleb128 0x1
 1674 0300 9C       		.byte	0x9c
 1675 0301 F9030000 		.4byte	0x3f9
 1676 0305 0D       		.uleb128 0xd
 1677 0306 00000000 		.4byte	.LASF27
 1678 030a 01       		.byte	0x1
 1679 030b F2       		.byte	0xf2
 1680 030c BF010000 		.4byte	0x1bf
 1681 0310 02       		.uleb128 0x2
 1682 0311 91       		.byte	0x91
 1683 0312 54       		.sleb128 -44
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 38


 1684 0313 0D       		.uleb128 0xd
 1685 0314 EE000000 		.4byte	.LASF42
 1686 0318 01       		.byte	0x1
 1687 0319 F2       		.byte	0xf2
 1688 031a 5D000000 		.4byte	0x5d
 1689 031e 02       		.uleb128 0x2
 1690 031f 91       		.byte	0x91
 1691 0320 50       		.sleb128 -48
 1692 0321 0E       		.uleb128 0xe
 1693 0322 4E030000 		.4byte	.LASF43
 1694 0326 01       		.byte	0x1
 1695 0327 F4       		.byte	0xf4
 1696 0328 6B000000 		.4byte	0x6b
 1697 032c 02       		.uleb128 0x2
 1698 032d 91       		.byte	0x91
 1699 032e 6F       		.sleb128 -17
 1700 032f 0E       		.uleb128 0xe
 1701 0330 B4000000 		.4byte	.LASF44
 1702 0334 01       		.byte	0x1
 1703 0335 F5       		.byte	0xf5
 1704 0336 6B000000 		.4byte	0x6b
 1705 033a 02       		.uleb128 0x2
 1706 033b 91       		.byte	0x91
 1707 033c 6E       		.sleb128 -18
 1708 033d 0E       		.uleb128 0xe
 1709 033e E3000000 		.4byte	.LASF45
 1710 0342 01       		.byte	0x1
 1711 0343 F5       		.byte	0xf5
 1712 0344 6B000000 		.4byte	0x6b
 1713 0348 02       		.uleb128 0x2
 1714 0349 91       		.byte	0x91
 1715 034a 6D       		.sleb128 -19
 1716 034b 0E       		.uleb128 0xe
 1717 034c 85020000 		.4byte	.LASF46
 1718 0350 01       		.byte	0x1
 1719 0351 F5       		.byte	0xf5
 1720 0352 6B000000 		.4byte	0x6b
 1721 0356 02       		.uleb128 0x2
 1722 0357 91       		.byte	0x91
 1723 0358 6C       		.sleb128 -20
 1724 0359 0E       		.uleb128 0xe
 1725 035a A3000000 		.4byte	.LASF47
 1726 035e 01       		.byte	0x1
 1727 035f F5       		.byte	0xf5
 1728 0360 6B000000 		.4byte	0x6b
 1729 0364 02       		.uleb128 0x2
 1730 0365 91       		.byte	0x91
 1731 0366 6B       		.sleb128 -21
 1732 0367 0E       		.uleb128 0xe
 1733 0368 E4020000 		.4byte	.LASF48
 1734 036c 01       		.byte	0x1
 1735 036d F5       		.byte	0xf5
 1736 036e 6B000000 		.4byte	0x6b
 1737 0372 02       		.uleb128 0x2
 1738 0373 91       		.byte	0x91
 1739 0374 6A       		.sleb128 -22
 1740 0375 0E       		.uleb128 0xe
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 39


 1741 0376 4A000000 		.4byte	.LASF49
 1742 037a 01       		.byte	0x1
 1743 037b F5       		.byte	0xf5
 1744 037c 6B000000 		.4byte	0x6b
 1745 0380 02       		.uleb128 0x2
 1746 0381 91       		.byte	0x91
 1747 0382 69       		.sleb128 -23
 1748 0383 0E       		.uleb128 0xe
 1749 0384 1F010000 		.4byte	.LASF50
 1750 0388 01       		.byte	0x1
 1751 0389 F6       		.byte	0xf6
 1752 038a 8F000000 		.4byte	0x8f
 1753 038e 02       		.uleb128 0x2
 1754 038f 91       		.byte	0x91
 1755 0390 66       		.sleb128 -26
 1756 0391 0E       		.uleb128 0xe
 1757 0392 26010000 		.4byte	.LASF51
 1758 0396 01       		.byte	0x1
 1759 0397 F6       		.byte	0xf6
 1760 0398 8F000000 		.4byte	0x8f
 1761 039c 02       		.uleb128 0x2
 1762 039d 91       		.byte	0x91
 1763 039e 64       		.sleb128 -28
 1764 039f 0E       		.uleb128 0xe
 1765 03a0 2D010000 		.4byte	.LASF52
 1766 03a4 01       		.byte	0x1
 1767 03a5 F6       		.byte	0xf6
 1768 03a6 8F000000 		.4byte	0x8f
 1769 03aa 02       		.uleb128 0x2
 1770 03ab 91       		.byte	0x91
 1771 03ac 62       		.sleb128 -30
 1772 03ad 0E       		.uleb128 0xe
 1773 03ae 44030000 		.4byte	.LASF53
 1774 03b2 01       		.byte	0x1
 1775 03b3 F7       		.byte	0xf7
 1776 03b4 77000000 		.4byte	0x77
 1777 03b8 02       		.uleb128 0x2
 1778 03b9 91       		.byte	0x91
 1779 03ba 60       		.sleb128 -32
 1780 03bb 0E       		.uleb128 0xe
 1781 03bc 5A000000 		.4byte	.LASF54
 1782 03c0 01       		.byte	0x1
 1783 03c1 F7       		.byte	0xf7
 1784 03c2 77000000 		.4byte	0x77
 1785 03c6 02       		.uleb128 0x2
 1786 03c7 91       		.byte	0x91
 1787 03c8 5E       		.sleb128 -34
 1788 03c9 0E       		.uleb128 0xe
 1789 03ca 19030000 		.4byte	.LASF55
 1790 03ce 01       		.byte	0x1
 1791 03cf F7       		.byte	0xf7
 1792 03d0 77000000 		.4byte	0x77
 1793 03d4 02       		.uleb128 0x2
 1794 03d5 91       		.byte	0x91
 1795 03d6 5C       		.sleb128 -36
 1796 03d7 14       		.uleb128 0x14
 1797 03d8 30030000 		.4byte	.LASF56
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 40


 1798 03dc 01       		.byte	0x1
 1799 03dd F8       		.byte	0xf8
 1800 03de 77000000 		.4byte	0x77
 1801 03e2 14       		.uleb128 0x14
 1802 03e3 D6000000 		.4byte	.LASF57
 1803 03e7 01       		.byte	0x1
 1804 03e8 F8       		.byte	0xf8
 1805 03e9 77000000 		.4byte	0x77
 1806 03ed 14       		.uleb128 0x14
 1807 03ee 6A030000 		.4byte	.LASF58
 1808 03f2 01       		.byte	0x1
 1809 03f3 F8       		.byte	0xf8
 1810 03f4 77000000 		.4byte	0x77
 1811 03f8 00       		.byte	0
 1812 03f9 15       		.uleb128 0x15
 1813 03fa 55000000 		.4byte	.LASF66
 1814 03fe 01       		.byte	0x1
 1815 03ff 2201     		.2byte	0x122
 1816 0401 00000000 		.4byte	.LFB48
 1817 0405 D0010000 		.4byte	.LFE48-.LFB48
 1818 0409 01       		.uleb128 0x1
 1819 040a 9C       		.byte	0x9c
 1820 040b 2E040000 		.4byte	0x42e
 1821 040f 16       		.uleb128 0x16
 1822 0410 EE000000 		.4byte	.LASF42
 1823 0414 01       		.byte	0x1
 1824 0415 3C01     		.2byte	0x13c
 1825 0417 5D000000 		.4byte	0x5d
 1826 041b 02       		.uleb128 0x2
 1827 041c 91       		.byte	0x91
 1828 041d 74       		.sleb128 -12
 1829 041e 16       		.uleb128 0x16
 1830 041f 00000000 		.4byte	.LASF27
 1831 0423 01       		.byte	0x1
 1832 0424 4F01     		.2byte	0x14f
 1833 0426 0A010000 		.4byte	0x10a
 1834 042a 02       		.uleb128 0x2
 1835 042b 91       		.byte	0x91
 1836 042c 5C       		.sleb128 -36
 1837 042d 00       		.byte	0
 1838 042e 17       		.uleb128 0x17
 1839 042f E7010000 		.4byte	.LASF59
 1840 0433 01       		.byte	0x1
 1841 0434 31       		.byte	0x31
 1842 0435 83000000 		.4byte	0x83
 1843 0439 05       		.uleb128 0x5
 1844 043a 03       		.byte	0x3
 1845 043b 00000000 		.4byte	ms_count
 1846 043f 17       		.uleb128 0x17
 1847 0440 79010000 		.4byte	.LASF60
 1848 0444 01       		.byte	0x1
 1849 0445 32       		.byte	0x32
 1850 0446 77000000 		.4byte	0x77
 1851 044a 05       		.uleb128 0x5
 1852 044b 03       		.byte	0x3
 1853 044c 00000000 		.4byte	seconds
 1854 0450 17       		.uleb128 0x17
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 41


 1855 0451 2A030000 		.4byte	.LASF61
 1856 0455 01       		.byte	0x1
 1857 0456 7D       		.byte	0x7d
 1858 0457 5D000000 		.4byte	0x5d
 1859 045b 05       		.uleb128 0x5
 1860 045c 03       		.byte	0x3
 1861 045d 00000000 		.4byte	range
 1862 0461 00       		.byte	0
 1863              		.section	.debug_abbrev,"",%progbits
 1864              	.Ldebug_abbrev0:
 1865 0000 01       		.uleb128 0x1
 1866 0001 11       		.uleb128 0x11
 1867 0002 01       		.byte	0x1
 1868 0003 25       		.uleb128 0x25
 1869 0004 0E       		.uleb128 0xe
 1870 0005 13       		.uleb128 0x13
 1871 0006 0B       		.uleb128 0xb
 1872 0007 03       		.uleb128 0x3
 1873 0008 0E       		.uleb128 0xe
 1874 0009 1B       		.uleb128 0x1b
 1875 000a 0E       		.uleb128 0xe
 1876 000b 55       		.uleb128 0x55
 1877 000c 17       		.uleb128 0x17
 1878 000d 11       		.uleb128 0x11
 1879 000e 01       		.uleb128 0x1
 1880 000f 10       		.uleb128 0x10
 1881 0010 17       		.uleb128 0x17
 1882 0011 00       		.byte	0
 1883 0012 00       		.byte	0
 1884 0013 02       		.uleb128 0x2
 1885 0014 24       		.uleb128 0x24
 1886 0015 00       		.byte	0
 1887 0016 0B       		.uleb128 0xb
 1888 0017 0B       		.uleb128 0xb
 1889 0018 3E       		.uleb128 0x3e
 1890 0019 0B       		.uleb128 0xb
 1891 001a 03       		.uleb128 0x3
 1892 001b 0E       		.uleb128 0xe
 1893 001c 00       		.byte	0
 1894 001d 00       		.byte	0
 1895 001e 03       		.uleb128 0x3
 1896 001f 24       		.uleb128 0x24
 1897 0020 00       		.byte	0
 1898 0021 0B       		.uleb128 0xb
 1899 0022 0B       		.uleb128 0xb
 1900 0023 3E       		.uleb128 0x3e
 1901 0024 0B       		.uleb128 0xb
 1902 0025 03       		.uleb128 0x3
 1903 0026 08       		.uleb128 0x8
 1904 0027 00       		.byte	0
 1905 0028 00       		.byte	0
 1906 0029 04       		.uleb128 0x4
 1907 002a 16       		.uleb128 0x16
 1908 002b 00       		.byte	0
 1909 002c 03       		.uleb128 0x3
 1910 002d 0E       		.uleb128 0xe
 1911 002e 3A       		.uleb128 0x3a
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 42


 1912 002f 0B       		.uleb128 0xb
 1913 0030 3B       		.uleb128 0x3b
 1914 0031 05       		.uleb128 0x5
 1915 0032 49       		.uleb128 0x49
 1916 0033 13       		.uleb128 0x13
 1917 0034 00       		.byte	0
 1918 0035 00       		.byte	0
 1919 0036 05       		.uleb128 0x5
 1920 0037 0F       		.uleb128 0xf
 1921 0038 00       		.byte	0
 1922 0039 0B       		.uleb128 0xb
 1923 003a 0B       		.uleb128 0xb
 1924 003b 00       		.byte	0
 1925 003c 00       		.byte	0
 1926 003d 06       		.uleb128 0x6
 1927 003e 13       		.uleb128 0x13
 1928 003f 01       		.byte	0x1
 1929 0040 0B       		.uleb128 0xb
 1930 0041 0B       		.uleb128 0xb
 1931 0042 3A       		.uleb128 0x3a
 1932 0043 0B       		.uleb128 0xb
 1933 0044 3B       		.uleb128 0x3b
 1934 0045 0B       		.uleb128 0xb
 1935 0046 01       		.uleb128 0x1
 1936 0047 13       		.uleb128 0x13
 1937 0048 00       		.byte	0
 1938 0049 00       		.byte	0
 1939 004a 07       		.uleb128 0x7
 1940 004b 0D       		.uleb128 0xd
 1941 004c 00       		.byte	0
 1942 004d 03       		.uleb128 0x3
 1943 004e 0E       		.uleb128 0xe
 1944 004f 3A       		.uleb128 0x3a
 1945 0050 0B       		.uleb128 0xb
 1946 0051 3B       		.uleb128 0x3b
 1947 0052 0B       		.uleb128 0xb
 1948 0053 49       		.uleb128 0x49
 1949 0054 13       		.uleb128 0x13
 1950 0055 38       		.uleb128 0x38
 1951 0056 0B       		.uleb128 0xb
 1952 0057 00       		.byte	0
 1953 0058 00       		.byte	0
 1954 0059 08       		.uleb128 0x8
 1955 005a 16       		.uleb128 0x16
 1956 005b 00       		.byte	0
 1957 005c 03       		.uleb128 0x3
 1958 005d 0E       		.uleb128 0xe
 1959 005e 3A       		.uleb128 0x3a
 1960 005f 0B       		.uleb128 0xb
 1961 0060 3B       		.uleb128 0x3b
 1962 0061 0B       		.uleb128 0xb
 1963 0062 49       		.uleb128 0x49
 1964 0063 13       		.uleb128 0x13
 1965 0064 00       		.byte	0
 1966 0065 00       		.byte	0
 1967 0066 09       		.uleb128 0x9
 1968 0067 2E       		.uleb128 0x2e
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 43


 1969 0068 01       		.byte	0x1
 1970 0069 3F       		.uleb128 0x3f
 1971 006a 19       		.uleb128 0x19
 1972 006b 03       		.uleb128 0x3
 1973 006c 0E       		.uleb128 0xe
 1974 006d 3A       		.uleb128 0x3a
 1975 006e 0B       		.uleb128 0xb
 1976 006f 3B       		.uleb128 0x3b
 1977 0070 0B       		.uleb128 0xb
 1978 0071 27       		.uleb128 0x27
 1979 0072 19       		.uleb128 0x19
 1980 0073 11       		.uleb128 0x11
 1981 0074 01       		.uleb128 0x1
 1982 0075 12       		.uleb128 0x12
 1983 0076 06       		.uleb128 0x6
 1984 0077 40       		.uleb128 0x40
 1985 0078 18       		.uleb128 0x18
 1986 0079 9642     		.uleb128 0x2116
 1987 007b 19       		.uleb128 0x19
 1988 007c 01       		.uleb128 0x1
 1989 007d 13       		.uleb128 0x13
 1990 007e 00       		.byte	0
 1991 007f 00       		.byte	0
 1992 0080 0A       		.uleb128 0xa
 1993 0081 05       		.uleb128 0x5
 1994 0082 00       		.byte	0
 1995 0083 03       		.uleb128 0x3
 1996 0084 08       		.uleb128 0x8
 1997 0085 3A       		.uleb128 0x3a
 1998 0086 0B       		.uleb128 0xb
 1999 0087 3B       		.uleb128 0x3b
 2000 0088 0B       		.uleb128 0xb
 2001 0089 49       		.uleb128 0x49
 2002 008a 13       		.uleb128 0x13
 2003 008b 02       		.uleb128 0x2
 2004 008c 18       		.uleb128 0x18
 2005 008d 00       		.byte	0
 2006 008e 00       		.byte	0
 2007 008f 0B       		.uleb128 0xb
 2008 0090 2E       		.uleb128 0x2e
 2009 0091 00       		.byte	0
 2010 0092 3F       		.uleb128 0x3f
 2011 0093 19       		.uleb128 0x19
 2012 0094 03       		.uleb128 0x3
 2013 0095 0E       		.uleb128 0xe
 2014 0096 3A       		.uleb128 0x3a
 2015 0097 0B       		.uleb128 0xb
 2016 0098 3B       		.uleb128 0x3b
 2017 0099 0B       		.uleb128 0xb
 2018 009a 27       		.uleb128 0x27
 2019 009b 19       		.uleb128 0x19
 2020 009c 11       		.uleb128 0x11
 2021 009d 01       		.uleb128 0x1
 2022 009e 12       		.uleb128 0x12
 2023 009f 06       		.uleb128 0x6
 2024 00a0 40       		.uleb128 0x40
 2025 00a1 18       		.uleb128 0x18
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 44


 2026 00a2 9742     		.uleb128 0x2117
 2027 00a4 19       		.uleb128 0x19
 2028 00a5 00       		.byte	0
 2029 00a6 00       		.byte	0
 2030 00a7 0C       		.uleb128 0xc
 2031 00a8 2E       		.uleb128 0x2e
 2032 00a9 01       		.byte	0x1
 2033 00aa 3F       		.uleb128 0x3f
 2034 00ab 19       		.uleb128 0x19
 2035 00ac 03       		.uleb128 0x3
 2036 00ad 0E       		.uleb128 0xe
 2037 00ae 3A       		.uleb128 0x3a
 2038 00af 0B       		.uleb128 0xb
 2039 00b0 3B       		.uleb128 0x3b
 2040 00b1 0B       		.uleb128 0xb
 2041 00b2 27       		.uleb128 0x27
 2042 00b3 19       		.uleb128 0x19
 2043 00b4 49       		.uleb128 0x49
 2044 00b5 13       		.uleb128 0x13
 2045 00b6 11       		.uleb128 0x11
 2046 00b7 01       		.uleb128 0x1
 2047 00b8 12       		.uleb128 0x12
 2048 00b9 06       		.uleb128 0x6
 2049 00ba 40       		.uleb128 0x40
 2050 00bb 18       		.uleb128 0x18
 2051 00bc 9742     		.uleb128 0x2117
 2052 00be 19       		.uleb128 0x19
 2053 00bf 01       		.uleb128 0x1
 2054 00c0 13       		.uleb128 0x13
 2055 00c1 00       		.byte	0
 2056 00c2 00       		.byte	0
 2057 00c3 0D       		.uleb128 0xd
 2058 00c4 05       		.uleb128 0x5
 2059 00c5 00       		.byte	0
 2060 00c6 03       		.uleb128 0x3
 2061 00c7 0E       		.uleb128 0xe
 2062 00c8 3A       		.uleb128 0x3a
 2063 00c9 0B       		.uleb128 0xb
 2064 00ca 3B       		.uleb128 0x3b
 2065 00cb 0B       		.uleb128 0xb
 2066 00cc 49       		.uleb128 0x49
 2067 00cd 13       		.uleb128 0x13
 2068 00ce 02       		.uleb128 0x2
 2069 00cf 18       		.uleb128 0x18
 2070 00d0 00       		.byte	0
 2071 00d1 00       		.byte	0
 2072 00d2 0E       		.uleb128 0xe
 2073 00d3 34       		.uleb128 0x34
 2074 00d4 00       		.byte	0
 2075 00d5 03       		.uleb128 0x3
 2076 00d6 0E       		.uleb128 0xe
 2077 00d7 3A       		.uleb128 0x3a
 2078 00d8 0B       		.uleb128 0xb
 2079 00d9 3B       		.uleb128 0x3b
 2080 00da 0B       		.uleb128 0xb
 2081 00db 49       		.uleb128 0x49
 2082 00dc 13       		.uleb128 0x13
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 45


 2083 00dd 02       		.uleb128 0x2
 2084 00de 18       		.uleb128 0x18
 2085 00df 00       		.byte	0
 2086 00e0 00       		.byte	0
 2087 00e1 0F       		.uleb128 0xf
 2088 00e2 2E       		.uleb128 0x2e
 2089 00e3 00       		.byte	0
 2090 00e4 3F       		.uleb128 0x3f
 2091 00e5 19       		.uleb128 0x19
 2092 00e6 03       		.uleb128 0x3
 2093 00e7 0E       		.uleb128 0xe
 2094 00e8 3A       		.uleb128 0x3a
 2095 00e9 0B       		.uleb128 0xb
 2096 00ea 3B       		.uleb128 0x3b
 2097 00eb 0B       		.uleb128 0xb
 2098 00ec 11       		.uleb128 0x11
 2099 00ed 01       		.uleb128 0x1
 2100 00ee 12       		.uleb128 0x12
 2101 00ef 06       		.uleb128 0x6
 2102 00f0 40       		.uleb128 0x40
 2103 00f1 18       		.uleb128 0x18
 2104 00f2 9642     		.uleb128 0x2116
 2105 00f4 19       		.uleb128 0x19
 2106 00f5 00       		.byte	0
 2107 00f6 00       		.byte	0
 2108 00f7 10       		.uleb128 0x10
 2109 00f8 2E       		.uleb128 0x2e
 2110 00f9 01       		.byte	0x1
 2111 00fa 3F       		.uleb128 0x3f
 2112 00fb 19       		.uleb128 0x19
 2113 00fc 03       		.uleb128 0x3
 2114 00fd 0E       		.uleb128 0xe
 2115 00fe 3A       		.uleb128 0x3a
 2116 00ff 0B       		.uleb128 0xb
 2117 0100 3B       		.uleb128 0x3b
 2118 0101 0B       		.uleb128 0xb
 2119 0102 27       		.uleb128 0x27
 2120 0103 19       		.uleb128 0x19
 2121 0104 11       		.uleb128 0x11
 2122 0105 01       		.uleb128 0x1
 2123 0106 12       		.uleb128 0x12
 2124 0107 06       		.uleb128 0x6
 2125 0108 40       		.uleb128 0x40
 2126 0109 18       		.uleb128 0x18
 2127 010a 9742     		.uleb128 0x2117
 2128 010c 19       		.uleb128 0x19
 2129 010d 01       		.uleb128 0x1
 2130 010e 13       		.uleb128 0x13
 2131 010f 00       		.byte	0
 2132 0110 00       		.byte	0
 2133 0111 11       		.uleb128 0x11
 2134 0112 0F       		.uleb128 0xf
 2135 0113 00       		.byte	0
 2136 0114 0B       		.uleb128 0xb
 2137 0115 0B       		.uleb128 0xb
 2138 0116 49       		.uleb128 0x49
 2139 0117 13       		.uleb128 0x13
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 46


 2140 0118 00       		.byte	0
 2141 0119 00       		.byte	0
 2142 011a 12       		.uleb128 0x12
 2143 011b 2E       		.uleb128 0x2e
 2144 011c 01       		.byte	0x1
 2145 011d 3F       		.uleb128 0x3f
 2146 011e 19       		.uleb128 0x19
 2147 011f 03       		.uleb128 0x3
 2148 0120 0E       		.uleb128 0xe
 2149 0121 3A       		.uleb128 0x3a
 2150 0122 0B       		.uleb128 0xb
 2151 0123 3B       		.uleb128 0x3b
 2152 0124 0B       		.uleb128 0xb
 2153 0125 49       		.uleb128 0x49
 2154 0126 13       		.uleb128 0x13
 2155 0127 11       		.uleb128 0x11
 2156 0128 01       		.uleb128 0x1
 2157 0129 12       		.uleb128 0x12
 2158 012a 06       		.uleb128 0x6
 2159 012b 40       		.uleb128 0x40
 2160 012c 18       		.uleb128 0x18
 2161 012d 9642     		.uleb128 0x2116
 2162 012f 19       		.uleb128 0x19
 2163 0130 01       		.uleb128 0x1
 2164 0131 13       		.uleb128 0x13
 2165 0132 00       		.byte	0
 2166 0133 00       		.byte	0
 2167 0134 13       		.uleb128 0x13
 2168 0135 2E       		.uleb128 0x2e
 2169 0136 01       		.byte	0x1
 2170 0137 3F       		.uleb128 0x3f
 2171 0138 19       		.uleb128 0x19
 2172 0139 03       		.uleb128 0x3
 2173 013a 0E       		.uleb128 0xe
 2174 013b 3A       		.uleb128 0x3a
 2175 013c 0B       		.uleb128 0xb
 2176 013d 3B       		.uleb128 0x3b
 2177 013e 0B       		.uleb128 0xb
 2178 013f 27       		.uleb128 0x27
 2179 0140 19       		.uleb128 0x19
 2180 0141 49       		.uleb128 0x49
 2181 0142 13       		.uleb128 0x13
 2182 0143 11       		.uleb128 0x11
 2183 0144 01       		.uleb128 0x1
 2184 0145 12       		.uleb128 0x12
 2185 0146 06       		.uleb128 0x6
 2186 0147 40       		.uleb128 0x40
 2187 0148 18       		.uleb128 0x18
 2188 0149 9642     		.uleb128 0x2116
 2189 014b 19       		.uleb128 0x19
 2190 014c 01       		.uleb128 0x1
 2191 014d 13       		.uleb128 0x13
 2192 014e 00       		.byte	0
 2193 014f 00       		.byte	0
 2194 0150 14       		.uleb128 0x14
 2195 0151 34       		.uleb128 0x34
 2196 0152 00       		.byte	0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 47


 2197 0153 03       		.uleb128 0x3
 2198 0154 0E       		.uleb128 0xe
 2199 0155 3A       		.uleb128 0x3a
 2200 0156 0B       		.uleb128 0xb
 2201 0157 3B       		.uleb128 0x3b
 2202 0158 0B       		.uleb128 0xb
 2203 0159 49       		.uleb128 0x49
 2204 015a 13       		.uleb128 0x13
 2205 015b 00       		.byte	0
 2206 015c 00       		.byte	0
 2207 015d 15       		.uleb128 0x15
 2208 015e 2E       		.uleb128 0x2e
 2209 015f 01       		.byte	0x1
 2210 0160 3F       		.uleb128 0x3f
 2211 0161 19       		.uleb128 0x19
 2212 0162 03       		.uleb128 0x3
 2213 0163 0E       		.uleb128 0xe
 2214 0164 3A       		.uleb128 0x3a
 2215 0165 0B       		.uleb128 0xb
 2216 0166 3B       		.uleb128 0x3b
 2217 0167 05       		.uleb128 0x5
 2218 0168 11       		.uleb128 0x11
 2219 0169 01       		.uleb128 0x1
 2220 016a 12       		.uleb128 0x12
 2221 016b 06       		.uleb128 0x6
 2222 016c 40       		.uleb128 0x40
 2223 016d 18       		.uleb128 0x18
 2224 016e 9642     		.uleb128 0x2116
 2225 0170 19       		.uleb128 0x19
 2226 0171 01       		.uleb128 0x1
 2227 0172 13       		.uleb128 0x13
 2228 0173 00       		.byte	0
 2229 0174 00       		.byte	0
 2230 0175 16       		.uleb128 0x16
 2231 0176 34       		.uleb128 0x34
 2232 0177 00       		.byte	0
 2233 0178 03       		.uleb128 0x3
 2234 0179 0E       		.uleb128 0xe
 2235 017a 3A       		.uleb128 0x3a
 2236 017b 0B       		.uleb128 0xb
 2237 017c 3B       		.uleb128 0x3b
 2238 017d 05       		.uleb128 0x5
 2239 017e 49       		.uleb128 0x49
 2240 017f 13       		.uleb128 0x13
 2241 0180 02       		.uleb128 0x2
 2242 0181 18       		.uleb128 0x18
 2243 0182 00       		.byte	0
 2244 0183 00       		.byte	0
 2245 0184 17       		.uleb128 0x17
 2246 0185 34       		.uleb128 0x34
 2247 0186 00       		.byte	0
 2248 0187 03       		.uleb128 0x3
 2249 0188 0E       		.uleb128 0xe
 2250 0189 3A       		.uleb128 0x3a
 2251 018a 0B       		.uleb128 0xb
 2252 018b 3B       		.uleb128 0x3b
 2253 018c 0B       		.uleb128 0xb
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 48


 2254 018d 49       		.uleb128 0x49
 2255 018e 13       		.uleb128 0x13
 2256 018f 3F       		.uleb128 0x3f
 2257 0190 19       		.uleb128 0x19
 2258 0191 02       		.uleb128 0x2
 2259 0192 18       		.uleb128 0x18
 2260 0193 00       		.byte	0
 2261 0194 00       		.byte	0
 2262 0195 00       		.byte	0
 2263              		.section	.debug_aranges,"",%progbits
 2264 0000 8C000000 		.4byte	0x8c
 2265 0004 0200     		.2byte	0x2
 2266 0006 00000000 		.4byte	.Ldebug_info0
 2267 000a 04       		.byte	0x4
 2268 000b 00       		.byte	0
 2269 000c 0000     		.2byte	0
 2270 000e 0000     		.2byte	0
 2271 0010 00000000 		.4byte	.LFB34
 2272 0014 1E000000 		.4byte	.LFE34-.LFB34
 2273 0018 00000000 		.4byte	.LFB35
 2274 001c 18000000 		.4byte	.LFE35-.LFB35
 2275 0020 00000000 		.4byte	.LFB36
 2276 0024 3C000000 		.4byte	.LFE36-.LFB36
 2277 0028 00000000 		.4byte	.LFB37
 2278 002c 20000000 		.4byte	.LFE37-.LFB37
 2279 0030 00000000 		.4byte	.LFB38
 2280 0034 18000000 		.4byte	.LFE38-.LFB38
 2281 0038 00000000 		.4byte	.LFB39
 2282 003c 2E000000 		.4byte	.LFE39-.LFB39
 2283 0040 00000000 		.4byte	.LFB40
 2284 0044 2E000000 		.4byte	.LFE40-.LFB40
 2285 0048 00000000 		.4byte	.LFB41
 2286 004c 1A000000 		.4byte	.LFE41-.LFB41
 2287 0050 00000000 		.4byte	.LFB42
 2288 0054 80000000 		.4byte	.LFE42-.LFB42
 2289 0058 00000000 		.4byte	.LFB43
 2290 005c 80000000 		.4byte	.LFE43-.LFB43
 2291 0060 00000000 		.4byte	.LFB44
 2292 0064 42000000 		.4byte	.LFE44-.LFB44
 2293 0068 00000000 		.4byte	.LFB45
 2294 006c 48000000 		.4byte	.LFE45-.LFB45
 2295 0070 00000000 		.4byte	.LFB46
 2296 0074 46000000 		.4byte	.LFE46-.LFB46
 2297 0078 00000000 		.4byte	.LFB47
 2298 007c D8010000 		.4byte	.LFE47-.LFB47
 2299 0080 00000000 		.4byte	.LFB48
 2300 0084 D0010000 		.4byte	.LFE48-.LFB48
 2301 0088 00000000 		.4byte	0
 2302 008c 00000000 		.4byte	0
 2303              		.section	.debug_ranges,"",%progbits
 2304              	.Ldebug_ranges0:
 2305 0000 00000000 		.4byte	.LFB34
 2306 0004 1E000000 		.4byte	.LFE34
 2307 0008 00000000 		.4byte	.LFB35
 2308 000c 18000000 		.4byte	.LFE35
 2309 0010 00000000 		.4byte	.LFB36
 2310 0014 3C000000 		.4byte	.LFE36
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 49


 2311 0018 00000000 		.4byte	.LFB37
 2312 001c 20000000 		.4byte	.LFE37
 2313 0020 00000000 		.4byte	.LFB38
 2314 0024 18000000 		.4byte	.LFE38
 2315 0028 00000000 		.4byte	.LFB39
 2316 002c 2E000000 		.4byte	.LFE39
 2317 0030 00000000 		.4byte	.LFB40
 2318 0034 2E000000 		.4byte	.LFE40
 2319 0038 00000000 		.4byte	.LFB41
 2320 003c 1A000000 		.4byte	.LFE41
 2321 0040 00000000 		.4byte	.LFB42
 2322 0044 80000000 		.4byte	.LFE42
 2323 0048 00000000 		.4byte	.LFB43
 2324 004c 80000000 		.4byte	.LFE43
 2325 0050 00000000 		.4byte	.LFB44
 2326 0054 42000000 		.4byte	.LFE44
 2327 0058 00000000 		.4byte	.LFB45
 2328 005c 48000000 		.4byte	.LFE45
 2329 0060 00000000 		.4byte	.LFB46
 2330 0064 46000000 		.4byte	.LFE46
 2331 0068 00000000 		.4byte	.LFB47
 2332 006c D8010000 		.4byte	.LFE47
 2333 0070 00000000 		.4byte	.LFB48
 2334 0074 D0010000 		.4byte	.LFE48
 2335 0078 00000000 		.4byte	0
 2336 007c 00000000 		.4byte	0
 2337              		.section	.debug_line,"",%progbits
 2338              	.Ldebug_line0:
 2339 0000 01020000 		.section	.debug_str,"MS",%progbits,1
 2339      02004100 
 2339      00000201 
 2339      FB0E0D00 
 2339      01010101 
 2340              	.LASF27:
 2341 0000 726F626F 		.ascii	"robot\000"
 2341      7400
 2342              	.LASF0:
 2343 0006 7369676E 		.ascii	"signed char\000"
 2343      65642063 
 2343      68617200 
 2344              	.LASF17:
 2345 0012 73746174 		.ascii	"state\000"
 2345      6500
 2346              	.LASF2:
 2347 0018 73686F72 		.ascii	"short int\000"
 2347      7420696E 
 2347      7400
 2348              	.LASF24:
 2349 0022 696E7075 		.ascii	"input\000"
 2349      7400
 2350              	.LASF16:
 2351 0028 73697A65 		.ascii	"sizetype\000"
 2351      74797065 
 2351      00
 2352              	.LASF22:
 2353 0031 64697374 		.ascii	"distToObstacle\000"
 2353      546F4F62 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 50


 2353      73746163 
 2353      6C6500
 2354              	.LASF37:
 2355 0040 66697273 		.ascii	"firstMove\000"
 2355      744D6F76 
 2355      6500
 2356              	.LASF49:
 2357 004a 61636365 		.ascii	"accelZ_LSB\000"
 2357      6C5A5F4C 
 2357      534200
 2358              	.LASF66:
 2359 0055 6D61696E 		.ascii	"main\000"
 2359      00
 2360              	.LASF54:
 2361 005a 61636365 		.ascii	"accelYAbs\000"
 2361      6C594162 
 2361      7300
 2362              	.LASF33:
 2363 0064 72657476 		.ascii	"retval\000"
 2363      616C00
 2364              	.LASF25:
 2365 006b 70757464 		.ascii	"putdata\000"
 2365      61746100 
 2366              	.LASF10:
 2367 0073 75696E74 		.ascii	"uint16\000"
 2367      313600
 2368              	.LASF12:
 2369 007a 696E7431 		.ascii	"int16\000"
 2369      3600
 2370              	.LASF30:
 2371 0080 54727563 		.ascii	"Truck_Stop\000"
 2371      6B5F5374 
 2371      6F7000
 2372              	.LASF9:
 2373 008b 75696E74 		.ascii	"uint8\000"
 2373      3800
 2374              	.LASF20:
 2375 0091 63757272 		.ascii	"currX\000"
 2375      5800
 2376              	.LASF18:
 2377 0097 64657374 		.ascii	"destX\000"
 2377      5800
 2378              	.LASF19:
 2379 009d 64657374 		.ascii	"destY\000"
 2379      5900
 2380              	.LASF47:
 2381 00a3 61636365 		.ascii	"accelY_LSB\000"
 2381      6C595F4C 
 2381      534200
 2382              	.LASF13:
 2383 00ae 666C6F61 		.ascii	"float\000"
 2383      7400
 2384              	.LASF44:
 2385 00b4 61636365 		.ascii	"accelX_MSB\000"
 2385      6C585F4D 
 2385      534200
 2386              	.LASF6:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 51


 2387 00bf 6C6F6E67 		.ascii	"long long int\000"
 2387      206C6F6E 
 2387      6720696E 
 2387      7400
 2388              	.LASF4:
 2389 00cd 6C6F6E67 		.ascii	"long int\000"
 2389      20696E74 
 2389      00
 2390              	.LASF57:
 2391 00d6 61636365 		.ascii	"accelYAbsIIR\000"
 2391      6C594162 
 2391      73494952 
 2391      00
 2392              	.LASF45:
 2393 00e3 61636365 		.ascii	"accelX_LSB\000"
 2393      6C585F4C 
 2393      534200
 2394              	.LASF42:
 2395 00ee 4932435F 		.ascii	"I2C_Status\000"
 2395      53746174 
 2395      757300
 2396              	.LASF38:
 2397 00f9 61627331 		.ascii	"abs16\000"
 2397      3600
 2398              	.LASF41:
 2399 00ff 67657441 		.ascii	"getAccel\000"
 2399      6363656C 
 2399      00
 2400              	.LASF1:
 2401 0108 756E7369 		.ascii	"unsigned char\000"
 2401      676E6564 
 2401      20636861 
 2401      7200
 2402              	.LASF40:
 2403 0116 61766F69 		.ascii	"avoidObs\000"
 2403      644F6273 
 2403      00
 2404              	.LASF50:
 2405 011f 61636365 		.ascii	"accelX\000"
 2405      6C5800
 2406              	.LASF51:
 2407 0126 61636365 		.ascii	"accelY\000"
 2407      6C5900
 2408              	.LASF52:
 2409 012d 61636365 		.ascii	"accelZ\000"
 2409      6C5A00
 2410              	.LASF7:
 2411 0134 6C6F6E67 		.ascii	"long long unsigned int\000"
 2411      206C6F6E 
 2411      6720756E 
 2411      7369676E 
 2411      65642069 
 2412              	.LASF26:
 2413 014b 54727563 		.ascii	"Truck_Forward\000"
 2413      6B5F466F 
 2413      72776172 
 2413      6400
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 52


 2414              	.LASF8:
 2415 0159 756E7369 		.ascii	"unsigned int\000"
 2415      676E6564 
 2415      20696E74 
 2415      00
 2416              	.LASF3:
 2417 0166 73686F72 		.ascii	"short unsigned int\000"
 2417      7420756E 
 2417      7369676E 
 2417      65642069 
 2417      6E7400
 2418              	.LASF60:
 2419 0179 7365636F 		.ascii	"seconds\000"
 2419      6E647300 
 2420              	.LASF15:
 2421 0181 63686172 		.ascii	"char\000"
 2421      00
 2422              	.LASF64:
 2423 0186 433A5C55 		.ascii	"C:\\Users\\Shahil Zhangada\\OneDrive\\Spring 2017\\"
 2423      73657273 
 2423      5C536861 
 2423      68696C20 
 2423      5A68616E 
 2424 01b4 4D656368 		.ascii	"Mech Eng 135\\KIT042_Accelerometer_LightPaint.cydsn"
 2424      20456E67 
 2424      20313335 
 2424      5C4B4954 
 2424      3034325F 
 2425 01e6 00       		.ascii	"\000"
 2426              	.LASF59:
 2427 01e7 6D735F63 		.ascii	"ms_count\000"
 2427      6F756E74 
 2427      00
 2428              	.LASF65:
 2429 01f0 4D595F49 		.ascii	"MY_ISR\000"
 2429      535200
 2430              	.LASF62:
 2431 01f7 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 2431      4320342E 
 2431      392E3320 
 2431      32303135 
 2431      30333033 
 2432 022a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 2432      20726576 
 2432      6973696F 
 2432      6E203232 
 2432      31323230 
 2433 025d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2433      66756E63 
 2433      74696F6E 
 2433      2D736563 
 2433      74696F6E 
 2434              	.LASF46:
 2435 0285 61636365 		.ascii	"accelY_MSB\000"
 2435      6C595F4D 
 2435      534200
 2436              	.LASF21:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 53


 2437 0290 63757272 		.ascii	"currY\000"
 2437      5900
 2438              	.LASF23:
 2439 0296 526F626F 		.ascii	"Robot_State_Struct\000"
 2439      745F5374 
 2439      6174655F 
 2439      53747275 
 2439      637400
 2440              	.LASF28:
 2441 02a9 54727563 		.ascii	"Truck_Right\000"
 2441      6B5F5269 
 2441      67687400 
 2442              	.LASF32:
 2443 02b5 64657465 		.ascii	"detectObstacle\000"
 2443      63744F62 
 2443      73746163 
 2443      6C6500
 2444              	.LASF11:
 2445 02c4 75696E74 		.ascii	"uint32\000"
 2445      333200
 2446              	.LASF63:
 2447 02cb 6D61696E 		.ascii	"main.c\000"
 2447      2E6300
 2448              	.LASF5:
 2449 02d2 6C6F6E67 		.ascii	"long unsigned int\000"
 2449      20756E73 
 2449      69676E65 
 2449      6420696E 
 2449      7400
 2450              	.LASF48:
 2451 02e4 61636365 		.ascii	"accelZ_MSB\000"
 2451      6C5A5F4D 
 2451      534200
 2452              	.LASF29:
 2453 02ef 54727563 		.ascii	"Truck_Left\000"
 2453      6B5F4C65 
 2453      667400
 2454              	.LASF39:
 2455 02fa 6D6F7665 		.ascii	"moveRobot\000"
 2455      526F626F 
 2455      7400
 2456              	.LASF31:
 2457 0304 54727563 		.ascii	"Truck_Straight\000"
 2457      6B5F5374 
 2457      72616967 
 2457      687400
 2458              	.LASF34:
 2459 0313 636F756E 		.ascii	"count\000"
 2459      7400
 2460              	.LASF55:
 2461 0319 61636365 		.ascii	"accelZAbs\000"
 2461      6C5A4162 
 2461      7300
 2462              	.LASF36:
 2463 0323 636F756E 		.ascii	"count2\000"
 2463      743200
 2464              	.LASF61:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\ccfeq4hM.s 			page 54


 2465 032a 72616E67 		.ascii	"range\000"
 2465      6500
 2466              	.LASF56:
 2467 0330 61636365 		.ascii	"accelXAbsIIR\000"
 2467      6C584162 
 2467      73494952 
 2467      00
 2468              	.LASF14:
 2469 033d 646F7562 		.ascii	"double\000"
 2469      6C6500
 2470              	.LASF53:
 2471 0344 61636365 		.ascii	"accelXAbs\000"
 2471      6C584162 
 2471      7300
 2472              	.LASF43:
 2473 034e 61636365 		.ascii	"accelStatus\000"
 2473      6C537461 
 2473      74757300 
 2474              	.LASF35:
 2475 035a 64657465 		.ascii	"detectObstacle2\000"
 2475      63744F62 
 2475      73746163 
 2475      6C653200 
 2476              	.LASF58:
 2477 036a 61636365 		.ascii	"accelZAbsIIR\000"
 2477      6C5A4162 
 2477      73494952 
 2477      00
 2478              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
