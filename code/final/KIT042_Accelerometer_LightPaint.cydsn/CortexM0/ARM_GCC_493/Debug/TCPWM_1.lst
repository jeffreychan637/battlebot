ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"TCPWM_1.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	TCPWM_1_initVar
  18              		.bss
  19              		.type	TCPWM_1_initVar, %object
  20              		.size	TCPWM_1_initVar, 1
  21              	TCPWM_1_initVar:
  22 0000 00       		.space	1
  23              		.section	.text.TCPWM_1_Init,"ax",%progbits
  24              		.align	2
  25              		.global	TCPWM_1_Init
  26              		.code	16
  27              		.thumb_func
  28              		.type	TCPWM_1_Init, %function
  29              	TCPWM_1_Init:
  30              	.LFB0:
  31              		.file 1 "Generated_Source\\PSoC4\\TCPWM_1.c"
   1:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC4/TCPWM_1.c **** * File Name: TCPWM_1.c
   3:Generated_Source\PSoC4/TCPWM_1.c **** * Version 2.10
   4:Generated_Source\PSoC4/TCPWM_1.c **** *
   5:Generated_Source\PSoC4/TCPWM_1.c **** * Description:
   6:Generated_Source\PSoC4/TCPWM_1.c **** *  This file provides the source code to the API for the TCPWM_1
   7:Generated_Source\PSoC4/TCPWM_1.c **** *  component
   8:Generated_Source\PSoC4/TCPWM_1.c **** *
   9:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
  10:Generated_Source\PSoC4/TCPWM_1.c **** *  None
  11:Generated_Source\PSoC4/TCPWM_1.c **** *
  12:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
  13:Generated_Source\PSoC4/TCPWM_1.c **** * Copyright 2013-2015, Cypress Semiconductor Corporation.  All rights reserved.
  14:Generated_Source\PSoC4/TCPWM_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  15:Generated_Source\PSoC4/TCPWM_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  16:Generated_Source\PSoC4/TCPWM_1.c **** * the software package with which this file was provided.
  17:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  18:Generated_Source\PSoC4/TCPWM_1.c **** 
  19:Generated_Source\PSoC4/TCPWM_1.c **** #include "TCPWM_1.h"
  20:Generated_Source\PSoC4/TCPWM_1.c **** 
  21:Generated_Source\PSoC4/TCPWM_1.c **** uint8 TCPWM_1_initVar = 0u;
  22:Generated_Source\PSoC4/TCPWM_1.c **** 
  23:Generated_Source\PSoC4/TCPWM_1.c **** 
  24:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
  25:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Init
  26:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 2


  27:Generated_Source\PSoC4/TCPWM_1.c **** *
  28:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
  29:Generated_Source\PSoC4/TCPWM_1.c **** *  Initialize/Restore default TCPWM_1 configuration.
  30:Generated_Source\PSoC4/TCPWM_1.c **** *
  31:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
  32:Generated_Source\PSoC4/TCPWM_1.c **** *  None
  33:Generated_Source\PSoC4/TCPWM_1.c **** *
  34:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
  35:Generated_Source\PSoC4/TCPWM_1.c **** *  None
  36:Generated_Source\PSoC4/TCPWM_1.c **** *
  37:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
  38:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Init(void)
  39:Generated_Source\PSoC4/TCPWM_1.c **** {
  32              		.loc 1 39 0
  33              		.cfi_startproc
  34 0000 80B5     		push	{r7, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 00AF     		add	r7, sp, #0
  39              		.cfi_def_cfa_register 7
  40:Generated_Source\PSoC4/TCPWM_1.c **** 
  41:Generated_Source\PSoC4/TCPWM_1.c ****     /* Set values from customizer to CTRL */
  42:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
  43:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_QUAD_BASE_CONFIG;
  44:Generated_Source\PSoC4/TCPWM_1.c ****         
  45:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  46:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_QUAD_SIGNALS_MODES;
  47:Generated_Source\PSoC4/TCPWM_1.c **** 
  48:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  49:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_QUAD_INTERRUPT_MASK);
  50:Generated_Source\PSoC4/TCPWM_1.c ****         
  51:Generated_Source\PSoC4/TCPWM_1.c ****          /* Set other values */
  52:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetCounterMode(TCPWM_1_COUNT_DOWN);
  53:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  54:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCounter(TCPWM_1_QUAD_PERIOD_INIT_VALUE);
  55:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
  56:Generated_Source\PSoC4/TCPWM_1.c **** 
  57:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
  58:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_TIMER_BASE_CONFIG;
  59:Generated_Source\PSoC4/TCPWM_1.c ****         
  60:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
  61:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_TIMER_SIGNALS_MODES;
  62:Generated_Source\PSoC4/TCPWM_1.c ****     
  63:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
  64:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_TC_INTERRUPT_MASK);
  65:Generated_Source\PSoC4/TCPWM_1.c ****         
  66:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
  67:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_TC_PERIOD_VALUE );
  68:Generated_Source\PSoC4/TCPWM_1.c **** 
  69:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE)
  70:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompare(TCPWM_1_TC_COMPARE_VALUE);
  71:Generated_Source\PSoC4/TCPWM_1.c **** 
  72:Generated_Source\PSoC4/TCPWM_1.c ****             #if (1u == TCPWM_1_TC_COMPARE_SWAP)
  73:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_SetCompareSwap(1u);
  74:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCompareBuf(TCPWM_1_TC_COMPARE_BUF_VALUE);
  75:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (1u == TCPWM_1_TC_COMPARE_SWAP) */
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 3


  76:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__COMPARE == TCPWM_1_TC_COMP_CAP_MODE) */
  77:Generated_Source\PSoC4/TCPWM_1.c **** 
  78:Generated_Source\PSoC4/TCPWM_1.c ****         /* Initialize counter value */
  79:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  80:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(1u);
  81:Generated_Source\PSoC4/TCPWM_1.c ****         #elif(TCPWM_1__COUNT_DOWN == TCPWM_1_TC_COUNTER_MODE)
  82:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_TC_PERIOD_VALUE);
  83:Generated_Source\PSoC4/TCPWM_1.c ****         #else
  84:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(0u);
  85:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_TIMER_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000) 
  86:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
  87:Generated_Source\PSoC4/TCPWM_1.c **** 
  88:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
  89:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_CONTROL_REG = TCPWM_1_CTRL_PWM_BASE_CONFIG;
  90:Generated_Source\PSoC4/TCPWM_1.c **** 
  91:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
  92:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_RUN_MODE;
  93:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCounter(TCPWM_1_PWM_PR_INIT_VALUE);
  94:Generated_Source\PSoC4/TCPWM_1.c ****         #else
  95:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_ALIGN | TCPWM_1_CTRL_PWM_KILL_EVENT;
  96:Generated_Source\PSoC4/TCPWM_1.c ****             
  97:Generated_Source\PSoC4/TCPWM_1.c ****             /* Initialize counter value */
  98:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_4000)
  99:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(1u);
 100:Generated_Source\PSoC4/TCPWM_1.c ****             #elif (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
 101:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(TCPWM_1_PWM_PERIOD_VALUE);
 102:Generated_Source\PSoC4/TCPWM_1.c ****             #else 
 103:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_WriteCounter(0u);
 104:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1_CY_TCPWM_V2 && TCPWM_1_PWM_UPDOWN_CNT_USED && !TCPWM_1_CY_TCPWM_400
 105:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 106:Generated_Source\PSoC4/TCPWM_1.c **** 
 107:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE)
 108:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_DEAD_TIME_CYCLE;
 109:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_DT == TCPWM_1_PWM_MODE) */
 110:Generated_Source\PSoC4/TCPWM_1.c **** 
 111:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM == TCPWM_1_PWM_MODE)
 112:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_CONTROL_REG |= TCPWM_1_CTRL_PWM_PRESCALER;
 113:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM == TCPWM_1_PWM_MODE) */
 114:Generated_Source\PSoC4/TCPWM_1.c **** 
 115:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL1 */
 116:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_TRIG_CONTROL1_REG  = TCPWM_1_PWM_SIGNALS_MODES;
 117:Generated_Source\PSoC4/TCPWM_1.c ****     
 118:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to INTR */
 119:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_SetInterruptMode(TCPWM_1_PWM_INTERRUPT_MASK);
 120:Generated_Source\PSoC4/TCPWM_1.c **** 
 121:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set values from customizer to CTRL2 */
 122:Generated_Source\PSoC4/TCPWM_1.c ****         #if (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE)
 123:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TRIG_CONTROL2_REG =
 124:Generated_Source\PSoC4/TCPWM_1.c ****                     (TCPWM_1_CC_MATCH_NO_CHANGE    |
 125:Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_OVERLOW_NO_CHANGE      |
 126:Generated_Source\PSoC4/TCPWM_1.c ****                     TCPWM_1_UNDERFLOW_NO_CHANGE);
 127:Generated_Source\PSoC4/TCPWM_1.c ****         #else
 128:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__LEFT == TCPWM_1_PWM_ALIGN)
 129:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_LEFT;
 130:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_LEFT == TCPWM_1_PWM_ALIGN) */
 131:Generated_Source\PSoC4/TCPWM_1.c **** 
 132:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__RIGHT == TCPWM_1_PWM_ALIGN)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 4


 133:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_RIGHT;
 134:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_RIGHT == TCPWM_1_PWM_ALIGN) */
 135:Generated_Source\PSoC4/TCPWM_1.c **** 
 136:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__CENTER == TCPWM_1_PWM_ALIGN)
 137:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_CENTER;
 138:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* ( TCPWM_1_PWM_CENTER == TCPWM_1_PWM_ALIGN) */
 139:Generated_Source\PSoC4/TCPWM_1.c **** 
 140:Generated_Source\PSoC4/TCPWM_1.c ****             #if (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN)
 141:Generated_Source\PSoC4/TCPWM_1.c ****                 TCPWM_1_TRIG_CONTROL2_REG = TCPWM_1_PWM_MODE_ASYM;
 142:Generated_Source\PSoC4/TCPWM_1.c ****             #endif  /* (TCPWM_1__ASYMMETRIC == TCPWM_1_PWM_ALIGN) */
 143:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (TCPWM_1__PWM_PR == TCPWM_1_PWM_MODE) */
 144:Generated_Source\PSoC4/TCPWM_1.c **** 
 145:Generated_Source\PSoC4/TCPWM_1.c ****         /* Set other values from customizer */
 146:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WritePeriod(TCPWM_1_PWM_PERIOD_VALUE );
 147:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_WriteCompare(TCPWM_1_PWM_COMPARE_VALUE);
 148:Generated_Source\PSoC4/TCPWM_1.c **** 
 149:Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_COMPARE_SWAP)
 150:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetCompareSwap(1u);
 151:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WriteCompareBuf(TCPWM_1_PWM_COMPARE_BUF_VALUE);
 152:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_COMPARE_SWAP) */
 153:Generated_Source\PSoC4/TCPWM_1.c **** 
 154:Generated_Source\PSoC4/TCPWM_1.c ****         #if (1u == TCPWM_1_PWM_PERIOD_SWAP)
 155:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_SetPeriodSwap(1u);
 156:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_WritePeriodBuf(TCPWM_1_PWM_PERIOD_BUF_VALUE);
 157:Generated_Source\PSoC4/TCPWM_1.c ****         #endif  /* (1u == TCPWM_1_PWM_PERIOD_SWAP) */
 158:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 159:Generated_Source\PSoC4/TCPWM_1.c ****     
 160:Generated_Source\PSoC4/TCPWM_1.c **** }
  40              		.loc 1 160 0
  41 0004 BD46     		mov	sp, r7
  42              		@ sp needed
  43 0006 80BD     		pop	{r7, pc}
  44              		.cfi_endproc
  45              	.LFE0:
  46              		.size	TCPWM_1_Init, .-TCPWM_1_Init
  47              		.section	.text.TCPWM_1_Enable,"ax",%progbits
  48              		.align	2
  49              		.global	TCPWM_1_Enable
  50              		.code	16
  51              		.thumb_func
  52              		.type	TCPWM_1_Enable, %function
  53              	TCPWM_1_Enable:
  54              	.LFB1:
 161:Generated_Source\PSoC4/TCPWM_1.c **** 
 162:Generated_Source\PSoC4/TCPWM_1.c **** 
 163:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 164:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Enable
 165:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 166:Generated_Source\PSoC4/TCPWM_1.c **** *
 167:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 168:Generated_Source\PSoC4/TCPWM_1.c **** *  Enables the TCPWM_1.
 169:Generated_Source\PSoC4/TCPWM_1.c **** *
 170:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 171:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 172:Generated_Source\PSoC4/TCPWM_1.c **** *
 173:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 174:Generated_Source\PSoC4/TCPWM_1.c **** *  None
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 5


 175:Generated_Source\PSoC4/TCPWM_1.c **** *
 176:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 177:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Enable(void)
 178:Generated_Source\PSoC4/TCPWM_1.c **** {
  55              		.loc 1 178 0
  56              		.cfi_startproc
  57 0000 90B5     		push	{r4, r7, lr}
  58              		.cfi_def_cfa_offset 12
  59              		.cfi_offset 4, -12
  60              		.cfi_offset 7, -8
  61              		.cfi_offset 14, -4
  62 0002 83B0     		sub	sp, sp, #12
  63              		.cfi_def_cfa_offset 24
  64 0004 00AF     		add	r7, sp, #0
  65              		.cfi_def_cfa_register 7
 179:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 180:Generated_Source\PSoC4/TCPWM_1.c **** 
 181:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
  66              		.loc 1 181 0
  67 0006 FC1D     		add	r4, r7, #7
  68 0008 FFF7FEFF 		bl	CyEnterCriticalSection
  69 000c 031C     		mov	r3, r0
  70 000e 2370     		strb	r3, [r4]
 182:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG |= TCPWM_1_MASK;
  71              		.loc 1 182 0
  72 0010 064B     		ldr	r3, .L3
  73 0012 064A     		ldr	r2, .L3
  74 0014 1268     		ldr	r2, [r2]
  75 0016 0121     		mov	r1, #1
  76 0018 0A43     		orr	r2, r1
  77 001a 1A60     		str	r2, [r3]
 183:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
  78              		.loc 1 183 0
  79 001c FB1D     		add	r3, r7, #7
  80 001e 1B78     		ldrb	r3, [r3]
  81 0020 181C     		mov	r0, r3
  82 0022 FFF7FEFF 		bl	CyExitCriticalSection
 184:Generated_Source\PSoC4/TCPWM_1.c **** 
 185:Generated_Source\PSoC4/TCPWM_1.c ****     /* Start Timer or PWM if start input is absent */
 186:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG)
 187:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT)
 188:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 189:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_PWM_START_SIGNAL_PRESENT) */
 190:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__PWM_SEL == TCPWM_1_CONFIG) */
 191:Generated_Source\PSoC4/TCPWM_1.c **** 
 192:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__TIMER == TCPWM_1_CONFIG)
 193:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u == TCPWM_1_TC_START_SIGNAL_PRESENT)
 194:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_START);
 195:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u == TCPWM_1_TC_START_SIGNAL_PRESENT) */
 196:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1__TIMER == TCPWM_1_CONFIG) */
 197:Generated_Source\PSoC4/TCPWM_1.c ****     
 198:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1__QUAD == TCPWM_1_CONFIG)
 199:Generated_Source\PSoC4/TCPWM_1.c ****         #if (0u != TCPWM_1_QUAD_AUTO_START)
 200:Generated_Source\PSoC4/TCPWM_1.c ****             TCPWM_1_TriggerCommand(TCPWM_1_MASK, TCPWM_1_CMD_RELOAD);
 201:Generated_Source\PSoC4/TCPWM_1.c ****         #endif /* (0u != TCPWM_1_QUAD_AUTO_START) */
 202:Generated_Source\PSoC4/TCPWM_1.c ****     #endif  /* (TCPWM_1__QUAD == TCPWM_1_CONFIG) */
 203:Generated_Source\PSoC4/TCPWM_1.c **** }
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 6


  83              		.loc 1 203 0
  84 0026 BD46     		mov	sp, r7
  85 0028 03B0     		add	sp, sp, #12
  86              		@ sp needed
  87 002a 90BD     		pop	{r4, r7, pc}
  88              	.L4:
  89              		.align	2
  90              	.L3:
  91 002c 00000540 		.word	1074069504
  92              		.cfi_endproc
  93              	.LFE1:
  94              		.size	TCPWM_1_Enable, .-TCPWM_1_Enable
  95              		.section	.text.TCPWM_1_Start,"ax",%progbits
  96              		.align	2
  97              		.global	TCPWM_1_Start
  98              		.code	16
  99              		.thumb_func
 100              		.type	TCPWM_1_Start, %function
 101              	TCPWM_1_Start:
 102              	.LFB2:
 204:Generated_Source\PSoC4/TCPWM_1.c **** 
 205:Generated_Source\PSoC4/TCPWM_1.c **** 
 206:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 207:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Start
 208:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 209:Generated_Source\PSoC4/TCPWM_1.c **** *
 210:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 211:Generated_Source\PSoC4/TCPWM_1.c **** *  Initializes the TCPWM_1 with default customizer
 212:Generated_Source\PSoC4/TCPWM_1.c **** *  values when called the first time and enables the TCPWM_1.
 213:Generated_Source\PSoC4/TCPWM_1.c **** *  For subsequent calls the configuration is left unchanged and the component is
 214:Generated_Source\PSoC4/TCPWM_1.c **** *  just enabled.
 215:Generated_Source\PSoC4/TCPWM_1.c **** *
 216:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 217:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 218:Generated_Source\PSoC4/TCPWM_1.c **** *
 219:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 220:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 221:Generated_Source\PSoC4/TCPWM_1.c **** *
 222:Generated_Source\PSoC4/TCPWM_1.c **** * Global variables:
 223:Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1_initVar: global variable is used to indicate initial
 224:Generated_Source\PSoC4/TCPWM_1.c **** *  configuration of this component.  The variable is initialized to zero and set
 225:Generated_Source\PSoC4/TCPWM_1.c **** *  to 1 the first time TCPWM_1_Start() is called. This allows
 226:Generated_Source\PSoC4/TCPWM_1.c **** *  enabling/disabling a component without re-initialization in all subsequent
 227:Generated_Source\PSoC4/TCPWM_1.c **** *  calls to the TCPWM_1_Start() routine.
 228:Generated_Source\PSoC4/TCPWM_1.c **** *
 229:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 230:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Start(void)
 231:Generated_Source\PSoC4/TCPWM_1.c **** {
 103              		.loc 1 231 0
 104              		.cfi_startproc
 105 0000 80B5     		push	{r7, lr}
 106              		.cfi_def_cfa_offset 8
 107              		.cfi_offset 7, -8
 108              		.cfi_offset 14, -4
 109 0002 00AF     		add	r7, sp, #0
 110              		.cfi_def_cfa_register 7
 232:Generated_Source\PSoC4/TCPWM_1.c ****     if (0u == TCPWM_1_initVar)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 7


 111              		.loc 1 232 0
 112 0004 064B     		ldr	r3, .L7
 113 0006 1B78     		ldrb	r3, [r3]
 114 0008 002B     		cmp	r3, #0
 115 000a 04D1     		bne	.L6
 233:Generated_Source\PSoC4/TCPWM_1.c ****     {
 234:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_Init();
 116              		.loc 1 234 0
 117 000c FFF7FEFF 		bl	TCPWM_1_Init
 235:Generated_Source\PSoC4/TCPWM_1.c ****         TCPWM_1_initVar = 1u;
 118              		.loc 1 235 0
 119 0010 034B     		ldr	r3, .L7
 120 0012 0122     		mov	r2, #1
 121 0014 1A70     		strb	r2, [r3]
 122              	.L6:
 236:Generated_Source\PSoC4/TCPWM_1.c ****     }
 237:Generated_Source\PSoC4/TCPWM_1.c **** 
 238:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_Enable();
 123              		.loc 1 238 0
 124 0016 FFF7FEFF 		bl	TCPWM_1_Enable
 239:Generated_Source\PSoC4/TCPWM_1.c **** }
 125              		.loc 1 239 0
 126 001a BD46     		mov	sp, r7
 127              		@ sp needed
 128 001c 80BD     		pop	{r7, pc}
 129              	.L8:
 130 001e C046     		.align	2
 131              	.L7:
 132 0020 00000000 		.word	TCPWM_1_initVar
 133              		.cfi_endproc
 134              	.LFE2:
 135              		.size	TCPWM_1_Start, .-TCPWM_1_Start
 136              		.section	.text.TCPWM_1_Stop,"ax",%progbits
 137              		.align	2
 138              		.global	TCPWM_1_Stop
 139              		.code	16
 140              		.thumb_func
 141              		.type	TCPWM_1_Stop, %function
 142              	TCPWM_1_Stop:
 143              	.LFB3:
 240:Generated_Source\PSoC4/TCPWM_1.c **** 
 241:Generated_Source\PSoC4/TCPWM_1.c **** 
 242:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 243:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_Stop
 244:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 245:Generated_Source\PSoC4/TCPWM_1.c **** *
 246:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 247:Generated_Source\PSoC4/TCPWM_1.c **** *  Disables the TCPWM_1.
 248:Generated_Source\PSoC4/TCPWM_1.c **** *
 249:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 250:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 251:Generated_Source\PSoC4/TCPWM_1.c **** *
 252:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 253:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 254:Generated_Source\PSoC4/TCPWM_1.c **** *
 255:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 256:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_Stop(void)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 8


 257:Generated_Source\PSoC4/TCPWM_1.c **** {
 144              		.loc 1 257 0
 145              		.cfi_startproc
 146 0000 90B5     		push	{r4, r7, lr}
 147              		.cfi_def_cfa_offset 12
 148              		.cfi_offset 4, -12
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 83B0     		sub	sp, sp, #12
 152              		.cfi_def_cfa_offset 24
 153 0004 00AF     		add	r7, sp, #0
 154              		.cfi_def_cfa_register 7
 258:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 259:Generated_Source\PSoC4/TCPWM_1.c **** 
 260:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 155              		.loc 1 260 0
 156 0006 FC1D     		add	r4, r7, #7
 157 0008 FFF7FEFF 		bl	CyEnterCriticalSection
 158 000c 031C     		mov	r3, r0
 159 000e 2370     		strb	r3, [r4]
 261:Generated_Source\PSoC4/TCPWM_1.c **** 
 262:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_BLOCK_CONTROL_REG &= (uint32)~TCPWM_1_MASK;
 160              		.loc 1 262 0
 161 0010 064B     		ldr	r3, .L10
 162 0012 064A     		ldr	r2, .L10
 163 0014 1268     		ldr	r2, [r2]
 164 0016 0121     		mov	r1, #1
 165 0018 8A43     		bic	r2, r1
 166 001a 1A60     		str	r2, [r3]
 263:Generated_Source\PSoC4/TCPWM_1.c **** 
 264:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 167              		.loc 1 264 0
 168 001c FB1D     		add	r3, r7, #7
 169 001e 1B78     		ldrb	r3, [r3]
 170 0020 181C     		mov	r0, r3
 171 0022 FFF7FEFF 		bl	CyExitCriticalSection
 265:Generated_Source\PSoC4/TCPWM_1.c **** }
 172              		.loc 1 265 0
 173 0026 BD46     		mov	sp, r7
 174 0028 03B0     		add	sp, sp, #12
 175              		@ sp needed
 176 002a 90BD     		pop	{r4, r7, pc}
 177              	.L11:
 178              		.align	2
 179              	.L10:
 180 002c 00000540 		.word	1074069504
 181              		.cfi_endproc
 182              	.LFE3:
 183              		.size	TCPWM_1_Stop, .-TCPWM_1_Stop
 184              		.section	.text.TCPWM_1_SetMode,"ax",%progbits
 185              		.align	2
 186              		.global	TCPWM_1_SetMode
 187              		.code	16
 188              		.thumb_func
 189              		.type	TCPWM_1_SetMode, %function
 190              	TCPWM_1_SetMode:
 191              	.LFB4:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 9


 266:Generated_Source\PSoC4/TCPWM_1.c **** 
 267:Generated_Source\PSoC4/TCPWM_1.c **** 
 268:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 269:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetMode
 270:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 271:Generated_Source\PSoC4/TCPWM_1.c **** *
 272:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 273:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the operation mode of the TCPWM_1. This function is used when
 274:Generated_Source\PSoC4/TCPWM_1.c **** *  configured as a generic TCPWM_1 and the actual mode of operation is
 275:Generated_Source\PSoC4/TCPWM_1.c **** *  set at runtime. The mode must be set while the component is disabled.
 276:Generated_Source\PSoC4/TCPWM_1.c **** *
 277:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 278:Generated_Source\PSoC4/TCPWM_1.c **** *  mode: Mode for the TCPWM_1 to operate in
 279:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 280:Generated_Source\PSoC4/TCPWM_1.c **** *   - TCPWM_1_MODE_TIMER_COMPARE - Timer / Counter with
 281:Generated_Source\PSoC4/TCPWM_1.c **** *                                                 compare capability
 282:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_TIMER_CAPTURE - Timer / Counter with
 283:Generated_Source\PSoC4/TCPWM_1.c **** *                                                 capture capability
 284:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_QUAD - Quadrature decoder
 285:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM - PWM
 286:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_DT - PWM with dead time
 287:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_PWM_PR - PWM with pseudo random capability
 288:Generated_Source\PSoC4/TCPWM_1.c **** *
 289:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 290:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 291:Generated_Source\PSoC4/TCPWM_1.c **** *
 292:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 293:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetMode(uint32 mode)
 294:Generated_Source\PSoC4/TCPWM_1.c **** {
 192              		.loc 1 294 0
 193              		.cfi_startproc
 194 0000 90B5     		push	{r4, r7, lr}
 195              		.cfi_def_cfa_offset 12
 196              		.cfi_offset 4, -12
 197              		.cfi_offset 7, -8
 198              		.cfi_offset 14, -4
 199 0002 85B0     		sub	sp, sp, #20
 200              		.cfi_def_cfa_offset 32
 201 0004 00AF     		add	r7, sp, #0
 202              		.cfi_def_cfa_register 7
 203 0006 7860     		str	r0, [r7, #4]
 295:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 296:Generated_Source\PSoC4/TCPWM_1.c **** 
 297:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 204              		.loc 1 297 0
 205 0008 0F23     		mov	r3, #15
 206 000a FC18     		add	r4, r7, r3
 207 000c FFF7FEFF 		bl	CyEnterCriticalSection
 208 0010 031C     		mov	r3, r0
 209 0012 2370     		strb	r3, [r4]
 298:Generated_Source\PSoC4/TCPWM_1.c **** 
 299:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_MODE_MASK;
 210              		.loc 1 299 0
 211 0014 0A4B     		ldr	r3, .L13
 212 0016 0A4A     		ldr	r2, .L13
 213 0018 1268     		ldr	r2, [r2]
 214 001a 0A49     		ldr	r1, .L13+4
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 10


 215 001c 0A40     		and	r2, r1
 216 001e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mode;
 217              		.loc 1 300 0
 218 0020 074B     		ldr	r3, .L13
 219 0022 074A     		ldr	r2, .L13
 220 0024 1168     		ldr	r1, [r2]
 221 0026 7A68     		ldr	r2, [r7, #4]
 222 0028 0A43     		orr	r2, r1
 223 002a 1A60     		str	r2, [r3]
 301:Generated_Source\PSoC4/TCPWM_1.c **** 
 302:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 224              		.loc 1 302 0
 225 002c 0F23     		mov	r3, #15
 226 002e FB18     		add	r3, r7, r3
 227 0030 1B78     		ldrb	r3, [r3]
 228 0032 181C     		mov	r0, r3
 229 0034 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC4/TCPWM_1.c **** }
 230              		.loc 1 303 0
 231 0038 BD46     		mov	sp, r7
 232 003a 05B0     		add	sp, sp, #20
 233              		@ sp needed
 234 003c 90BD     		pop	{r4, r7, pc}
 235              	.L14:
 236 003e C046     		.align	2
 237              	.L13:
 238 0040 00010540 		.word	1074069760
 239 0044 FFFFFFF8 		.word	-117440513
 240              		.cfi_endproc
 241              	.LFE4:
 242              		.size	TCPWM_1_SetMode, .-TCPWM_1_SetMode
 243              		.section	.text.TCPWM_1_SetQDMode,"ax",%progbits
 244              		.align	2
 245              		.global	TCPWM_1_SetQDMode
 246              		.code	16
 247              		.thumb_func
 248              		.type	TCPWM_1_SetQDMode, %function
 249              	TCPWM_1_SetQDMode:
 250              	.LFB5:
 304:Generated_Source\PSoC4/TCPWM_1.c **** 
 305:Generated_Source\PSoC4/TCPWM_1.c **** 
 306:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 307:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetQDMode
 308:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 309:Generated_Source\PSoC4/TCPWM_1.c **** *
 310:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 311:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the the Quadrature Decoder to one of the 3 supported modes.
 312:Generated_Source\PSoC4/TCPWM_1.c **** *  Its functionality is only applicable to Quadrature Decoder operation.
 313:Generated_Source\PSoC4/TCPWM_1.c **** *
 314:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 315:Generated_Source\PSoC4/TCPWM_1.c **** *  qdMode: Quadrature Decoder mode
 316:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 317:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X1 - Counts on phi 1 rising
 318:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X2 - Counts on both edges of phi1 (2x faster)
 319:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_MODE_X4 - Counts on both edges of phi1 and phi2
 320:Generated_Source\PSoC4/TCPWM_1.c **** *                                        (4x faster)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 11


 321:Generated_Source\PSoC4/TCPWM_1.c **** *
 322:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 323:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 324:Generated_Source\PSoC4/TCPWM_1.c **** *
 325:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 326:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetQDMode(uint32 qdMode)
 327:Generated_Source\PSoC4/TCPWM_1.c **** {
 251              		.loc 1 327 0
 252              		.cfi_startproc
 253 0000 90B5     		push	{r4, r7, lr}
 254              		.cfi_def_cfa_offset 12
 255              		.cfi_offset 4, -12
 256              		.cfi_offset 7, -8
 257              		.cfi_offset 14, -4
 258 0002 85B0     		sub	sp, sp, #20
 259              		.cfi_def_cfa_offset 32
 260 0004 00AF     		add	r7, sp, #0
 261              		.cfi_def_cfa_register 7
 262 0006 7860     		str	r0, [r7, #4]
 328:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 329:Generated_Source\PSoC4/TCPWM_1.c **** 
 330:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 263              		.loc 1 330 0
 264 0008 0F23     		mov	r3, #15
 265 000a FC18     		add	r4, r7, r3
 266 000c FFF7FEFF 		bl	CyEnterCriticalSection
 267 0010 031C     		mov	r3, r0
 268 0012 2370     		strb	r3, [r4]
 331:Generated_Source\PSoC4/TCPWM_1.c **** 
 332:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_QUAD_MODE_MASK;
 269              		.loc 1 332 0
 270 0014 0A4B     		ldr	r3, .L16
 271 0016 0A4A     		ldr	r2, .L16
 272 0018 1268     		ldr	r2, [r2]
 273 001a 0A49     		ldr	r1, .L16+4
 274 001c 0A40     		and	r2, r1
 275 001e 1A60     		str	r2, [r3]
 333:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= qdMode;
 276              		.loc 1 333 0
 277 0020 074B     		ldr	r3, .L16
 278 0022 074A     		ldr	r2, .L16
 279 0024 1168     		ldr	r1, [r2]
 280 0026 7A68     		ldr	r2, [r7, #4]
 281 0028 0A43     		orr	r2, r1
 282 002a 1A60     		str	r2, [r3]
 334:Generated_Source\PSoC4/TCPWM_1.c **** 
 335:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 283              		.loc 1 335 0
 284 002c 0F23     		mov	r3, #15
 285 002e FB18     		add	r3, r7, r3
 286 0030 1B78     		ldrb	r3, [r3]
 287 0032 181C     		mov	r0, r3
 288 0034 FFF7FEFF 		bl	CyExitCriticalSection
 336:Generated_Source\PSoC4/TCPWM_1.c **** }
 289              		.loc 1 336 0
 290 0038 BD46     		mov	sp, r7
 291 003a 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 12


 292              		@ sp needed
 293 003c 90BD     		pop	{r4, r7, pc}
 294              	.L17:
 295 003e C046     		.align	2
 296              	.L16:
 297 0040 00010540 		.word	1074069760
 298 0044 FFFF8FFF 		.word	-7340033
 299              		.cfi_endproc
 300              	.LFE5:
 301              		.size	TCPWM_1_SetQDMode, .-TCPWM_1_SetQDMode
 302              		.section	.text.TCPWM_1_SetPrescaler,"ax",%progbits
 303              		.align	2
 304              		.global	TCPWM_1_SetPrescaler
 305              		.code	16
 306              		.thumb_func
 307              		.type	TCPWM_1_SetPrescaler, %function
 308              	TCPWM_1_SetPrescaler:
 309              	.LFB6:
 337:Generated_Source\PSoC4/TCPWM_1.c **** 
 338:Generated_Source\PSoC4/TCPWM_1.c **** 
 339:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 340:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPrescaler
 341:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 342:Generated_Source\PSoC4/TCPWM_1.c **** *
 343:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 344:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the prescaler value that is applied to the clock input.  Not applicable
 345:Generated_Source\PSoC4/TCPWM_1.c **** *  to a PWM with the dead time mode or Quadrature Decoder mode.
 346:Generated_Source\PSoC4/TCPWM_1.c **** *
 347:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 348:Generated_Source\PSoC4/TCPWM_1.c **** *  prescaler: Prescaler divider value
 349:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 350:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY1    - Divide by 1 (no prescaling)
 351:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY2    - Divide by 2
 352:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY4    - Divide by 4
 353:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY8    - Divide by 8
 354:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY16   - Divide by 16
 355:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY32   - Divide by 32
 356:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY64   - Divide by 64
 357:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_PRESCALE_DIVBY128  - Divide by 128
 358:Generated_Source\PSoC4/TCPWM_1.c **** *
 359:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 360:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 361:Generated_Source\PSoC4/TCPWM_1.c **** *
 362:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 363:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPrescaler(uint32 prescaler)
 364:Generated_Source\PSoC4/TCPWM_1.c **** {
 310              		.loc 1 364 0
 311              		.cfi_startproc
 312 0000 90B5     		push	{r4, r7, lr}
 313              		.cfi_def_cfa_offset 12
 314              		.cfi_offset 4, -12
 315              		.cfi_offset 7, -8
 316              		.cfi_offset 14, -4
 317 0002 85B0     		sub	sp, sp, #20
 318              		.cfi_def_cfa_offset 32
 319 0004 00AF     		add	r7, sp, #0
 320              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 13


 321 0006 7860     		str	r0, [r7, #4]
 365:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 366:Generated_Source\PSoC4/TCPWM_1.c **** 
 367:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 322              		.loc 1 367 0
 323 0008 0F23     		mov	r3, #15
 324 000a FC18     		add	r4, r7, r3
 325 000c FFF7FEFF 		bl	CyEnterCriticalSection
 326 0010 031C     		mov	r3, r0
 327 0012 2370     		strb	r3, [r4]
 368:Generated_Source\PSoC4/TCPWM_1.c **** 
 369:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 328              		.loc 1 369 0
 329 0014 0A4B     		ldr	r3, .L19
 330 0016 0A4A     		ldr	r2, .L19
 331 0018 1268     		ldr	r2, [r2]
 332 001a 0A49     		ldr	r1, .L19+4
 333 001c 0A40     		and	r2, r1
 334 001e 1A60     		str	r2, [r3]
 370:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= prescaler;
 335              		.loc 1 370 0
 336 0020 074B     		ldr	r3, .L19
 337 0022 074A     		ldr	r2, .L19
 338 0024 1168     		ldr	r1, [r2]
 339 0026 7A68     		ldr	r2, [r7, #4]
 340 0028 0A43     		orr	r2, r1
 341 002a 1A60     		str	r2, [r3]
 371:Generated_Source\PSoC4/TCPWM_1.c **** 
 372:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 342              		.loc 1 372 0
 343 002c 0F23     		mov	r3, #15
 344 002e FB18     		add	r3, r7, r3
 345 0030 1B78     		ldrb	r3, [r3]
 346 0032 181C     		mov	r0, r3
 347 0034 FFF7FEFF 		bl	CyExitCriticalSection
 373:Generated_Source\PSoC4/TCPWM_1.c **** }
 348              		.loc 1 373 0
 349 0038 BD46     		mov	sp, r7
 350 003a 05B0     		add	sp, sp, #20
 351              		@ sp needed
 352 003c 90BD     		pop	{r4, r7, pc}
 353              	.L20:
 354 003e C046     		.align	2
 355              	.L19:
 356 0040 00010540 		.word	1074069760
 357 0044 FF00FFFF 		.word	-65281
 358              		.cfi_endproc
 359              	.LFE6:
 360              		.size	TCPWM_1_SetPrescaler, .-TCPWM_1_SetPrescaler
 361              		.section	.text.TCPWM_1_SetOneShot,"ax",%progbits
 362              		.align	2
 363              		.global	TCPWM_1_SetOneShot
 364              		.code	16
 365              		.thumb_func
 366              		.type	TCPWM_1_SetOneShot, %function
 367              	TCPWM_1_SetOneShot:
 368              	.LFB7:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 14


 374:Generated_Source\PSoC4/TCPWM_1.c **** 
 375:Generated_Source\PSoC4/TCPWM_1.c **** 
 376:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 377:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetOneShot
 378:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 379:Generated_Source\PSoC4/TCPWM_1.c **** *
 380:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 381:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the TCPWM_1 runs
 382:Generated_Source\PSoC4/TCPWM_1.c **** *  continuously or stops when terminal count is reached.  By default the
 383:Generated_Source\PSoC4/TCPWM_1.c **** *  TCPWM_1 operates in the continuous mode.
 384:Generated_Source\PSoC4/TCPWM_1.c **** *
 385:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 386:Generated_Source\PSoC4/TCPWM_1.c **** *  oneShotEnable
 387:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 388:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Continuous
 389:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable One Shot
 390:Generated_Source\PSoC4/TCPWM_1.c **** *
 391:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 392:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 393:Generated_Source\PSoC4/TCPWM_1.c **** *
 394:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 395:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetOneShot(uint32 oneShotEnable)
 396:Generated_Source\PSoC4/TCPWM_1.c **** {
 369              		.loc 1 396 0
 370              		.cfi_startproc
 371 0000 90B5     		push	{r4, r7, lr}
 372              		.cfi_def_cfa_offset 12
 373              		.cfi_offset 4, -12
 374              		.cfi_offset 7, -8
 375              		.cfi_offset 14, -4
 376 0002 85B0     		sub	sp, sp, #20
 377              		.cfi_def_cfa_offset 32
 378 0004 00AF     		add	r7, sp, #0
 379              		.cfi_def_cfa_register 7
 380 0006 7860     		str	r0, [r7, #4]
 397:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 398:Generated_Source\PSoC4/TCPWM_1.c **** 
 399:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 381              		.loc 1 399 0
 382 0008 0F23     		mov	r3, #15
 383 000a FC18     		add	r4, r7, r3
 384 000c FFF7FEFF 		bl	CyEnterCriticalSection
 385 0010 031C     		mov	r3, r0
 386 0012 2370     		strb	r3, [r4]
 400:Generated_Source\PSoC4/TCPWM_1.c **** 
 401:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_ONESHOT_MASK;
 387              		.loc 1 401 0
 388 0014 0B4B     		ldr	r3, .L22
 389 0016 0B4A     		ldr	r2, .L22
 390 0018 1268     		ldr	r2, [r2]
 391 001a 0B49     		ldr	r1, .L22+4
 392 001c 0A40     		and	r2, r1
 393 001e 1A60     		str	r2, [r3]
 402:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((oneShotEnable & TCPWM_1_1BIT_MASK) <<
 394              		.loc 1 402 0
 395 0020 084B     		ldr	r3, .L22
 396 0022 084A     		ldr	r2, .L22
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 15


 397 0024 1168     		ldr	r1, [r2]
 398 0026 7A68     		ldr	r2, [r7, #4]
 399 0028 0120     		mov	r0, #1
 400 002a 0240     		and	r2, r0
 401 002c 9204     		lsl	r2, r2, #18
 402 002e 0A43     		orr	r2, r1
 403 0030 1A60     		str	r2, [r3]
 403:Generated_Source\PSoC4/TCPWM_1.c ****                                                                TCPWM_1_ONESHOT_SHIFT));
 404:Generated_Source\PSoC4/TCPWM_1.c **** 
 405:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 404              		.loc 1 405 0
 405 0032 0F23     		mov	r3, #15
 406 0034 FB18     		add	r3, r7, r3
 407 0036 1B78     		ldrb	r3, [r3]
 408 0038 181C     		mov	r0, r3
 409 003a FFF7FEFF 		bl	CyExitCriticalSection
 406:Generated_Source\PSoC4/TCPWM_1.c **** }
 410              		.loc 1 406 0
 411 003e BD46     		mov	sp, r7
 412 0040 05B0     		add	sp, sp, #20
 413              		@ sp needed
 414 0042 90BD     		pop	{r4, r7, pc}
 415              	.L23:
 416              		.align	2
 417              	.L22:
 418 0044 00010540 		.word	1074069760
 419 0048 FFFFFBFF 		.word	-262145
 420              		.cfi_endproc
 421              	.LFE7:
 422              		.size	TCPWM_1_SetOneShot, .-TCPWM_1_SetOneShot
 423              		.section	.text.TCPWM_1_SetPWMMode,"ax",%progbits
 424              		.align	2
 425              		.global	TCPWM_1_SetPWMMode
 426              		.code	16
 427              		.thumb_func
 428              		.type	TCPWM_1_SetPWMMode, %function
 429              	TCPWM_1_SetPWMMode:
 430              	.LFB8:
 407:Generated_Source\PSoC4/TCPWM_1.c **** 
 408:Generated_Source\PSoC4/TCPWM_1.c **** 
 409:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 410:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMMode
 411:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 412:Generated_Source\PSoC4/TCPWM_1.c **** *
 413:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 414:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the control register that determines what mode of operation the PWM
 415:Generated_Source\PSoC4/TCPWM_1.c **** *  output lines are driven in.  There is a setting for what to do on a
 416:Generated_Source\PSoC4/TCPWM_1.c **** *  comparison match (CC_MATCH), on an overflow (OVERFLOW) and on an underflow
 417:Generated_Source\PSoC4/TCPWM_1.c **** *  (UNDERFLOW).  The value for each of the three must be ORed together to form
 418:Generated_Source\PSoC4/TCPWM_1.c **** *  the mode.
 419:Generated_Source\PSoC4/TCPWM_1.c **** *
 420:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 421:Generated_Source\PSoC4/TCPWM_1.c **** *  modeMask: A combination of three mode settings.  Mask must include a value
 422:Generated_Source\PSoC4/TCPWM_1.c **** *  for each of the three or use one of the preconfigured PWM settings.
 423:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 424:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_SET        - Set on comparison match
 425:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_CLEAR      - Clear on comparison match
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 16


 426:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_INVERT     - Invert on comparison match
 427:Generated_Source\PSoC4/TCPWM_1.c **** *     - CC_MATCH_NO_CHANGE  - No change on comparison match
 428:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_SET         - Set on overflow
 429:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_CLEAR       - Clear on  overflow
 430:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_INVERT      - Invert on overflow
 431:Generated_Source\PSoC4/TCPWM_1.c **** *     - OVERLOW_NO_CHANGE   - No change on overflow
 432:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_SET       - Set on underflow
 433:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_CLEAR     - Clear on underflow
 434:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_INVERT    - Invert on underflow
 435:Generated_Source\PSoC4/TCPWM_1.c **** *     - UNDERFLOW_NO_CHANGE - No change on underflow
 436:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_LEFT       - Setting for left aligned PWM.  Should be combined
 437:Generated_Source\PSoC4/TCPWM_1.c **** *                             with up counting mode
 438:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_RIGHT      - Setting for right aligned PWM.  Should be combined
 439:Generated_Source\PSoC4/TCPWM_1.c **** *                             with down counting mode
 440:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_CENTER     - Setting for center aligned PWM.  Should be
 441:Generated_Source\PSoC4/TCPWM_1.c **** *                             combined with up/down 0 mode
 442:Generated_Source\PSoC4/TCPWM_1.c **** *     - PWM_MODE_ASYM       - Setting for asymmetric PWM.  Should be combined
 443:Generated_Source\PSoC4/TCPWM_1.c **** *                             with up/down 1 mode
 444:Generated_Source\PSoC4/TCPWM_1.c **** *
 445:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 446:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 447:Generated_Source\PSoC4/TCPWM_1.c **** *
 448:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 449:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMMode(uint32 modeMask)
 450:Generated_Source\PSoC4/TCPWM_1.c **** {
 431              		.loc 1 450 0
 432              		.cfi_startproc
 433 0000 80B5     		push	{r7, lr}
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 7, -8
 436              		.cfi_offset 14, -4
 437 0002 82B0     		sub	sp, sp, #8
 438              		.cfi_def_cfa_offset 16
 439 0004 00AF     		add	r7, sp, #0
 440              		.cfi_def_cfa_register 7
 441 0006 7860     		str	r0, [r7, #4]
 451:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL2_REG = (modeMask & TCPWM_1_6BIT_MASK);
 442              		.loc 1 451 0
 443 0008 034B     		ldr	r3, .L25
 444 000a 7A68     		ldr	r2, [r7, #4]
 445 000c 3F21     		mov	r1, #63
 446 000e 0A40     		and	r2, r1
 447 0010 1A60     		str	r2, [r3]
 452:Generated_Source\PSoC4/TCPWM_1.c **** }
 448              		.loc 1 452 0
 449 0012 BD46     		mov	sp, r7
 450 0014 02B0     		add	sp, sp, #8
 451              		@ sp needed
 452 0016 80BD     		pop	{r7, pc}
 453              	.L26:
 454              		.align	2
 455              	.L25:
 456 0018 28010540 		.word	1074069800
 457              		.cfi_endproc
 458              	.LFE8:
 459              		.size	TCPWM_1_SetPWMMode, .-TCPWM_1_SetPWMMode
 460              		.section	.text.TCPWM_1_SetPWMSyncKill,"ax",%progbits
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 17


 461              		.align	2
 462              		.global	TCPWM_1_SetPWMSyncKill
 463              		.code	16
 464              		.thumb_func
 465              		.type	TCPWM_1_SetPWMSyncKill, %function
 466              	TCPWM_1_SetPWMSyncKill:
 467              	.LFB9:
 453:Generated_Source\PSoC4/TCPWM_1.c **** 
 454:Generated_Source\PSoC4/TCPWM_1.c **** 
 455:Generated_Source\PSoC4/TCPWM_1.c **** 
 456:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 457:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMSyncKill
 458:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 459:Generated_Source\PSoC4/TCPWM_1.c **** *
 460:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 461:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 462:Generated_Source\PSoC4/TCPWM_1.c **** *  causes asynchronous or synchronous kill operation.  By default the kill
 463:Generated_Source\PSoC4/TCPWM_1.c **** *  operation is asynchronous.  This functionality is only applicable to the PWM
 464:Generated_Source\PSoC4/TCPWM_1.c **** *  and PWM with dead time modes.
 465:Generated_Source\PSoC4/TCPWM_1.c **** *
 466:Generated_Source\PSoC4/TCPWM_1.c **** *  For Synchronous mode the kill signal disables both the line and line_n
 467:Generated_Source\PSoC4/TCPWM_1.c **** *  signals until the next terminal count.
 468:Generated_Source\PSoC4/TCPWM_1.c **** *
 469:Generated_Source\PSoC4/TCPWM_1.c **** *  For Asynchronous mode the kill signal disables both the line and line_n
 470:Generated_Source\PSoC4/TCPWM_1.c **** *  signals when the kill signal is present.  This mode should only be used
 471:Generated_Source\PSoC4/TCPWM_1.c **** *  when the kill signal (stop input) is configured in the pass through mode
 472:Generated_Source\PSoC4/TCPWM_1.c **** *  (Level sensitive signal).
 473:Generated_Source\PSoC4/TCPWM_1.c **** 
 474:Generated_Source\PSoC4/TCPWM_1.c **** *
 475:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 476:Generated_Source\PSoC4/TCPWM_1.c **** *  syncKillEnable
 477:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 478:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Asynchronous
 479:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Synchronous
 480:Generated_Source\PSoC4/TCPWM_1.c **** *
 481:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 482:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 483:Generated_Source\PSoC4/TCPWM_1.c **** *
 484:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 485:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMSyncKill(uint32 syncKillEnable)
 486:Generated_Source\PSoC4/TCPWM_1.c **** {
 468              		.loc 1 486 0
 469              		.cfi_startproc
 470 0000 90B5     		push	{r4, r7, lr}
 471              		.cfi_def_cfa_offset 12
 472              		.cfi_offset 4, -12
 473              		.cfi_offset 7, -8
 474              		.cfi_offset 14, -4
 475 0002 85B0     		sub	sp, sp, #20
 476              		.cfi_def_cfa_offset 32
 477 0004 00AF     		add	r7, sp, #0
 478              		.cfi_def_cfa_register 7
 479 0006 7860     		str	r0, [r7, #4]
 487:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 488:Generated_Source\PSoC4/TCPWM_1.c **** 
 489:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 480              		.loc 1 489 0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 18


 481 0008 0F23     		mov	r3, #15
 482 000a FC18     		add	r4, r7, r3
 483 000c FFF7FEFF 		bl	CyEnterCriticalSection
 484 0010 031C     		mov	r3, r0
 485 0012 2370     		strb	r3, [r4]
 490:Generated_Source\PSoC4/TCPWM_1.c **** 
 491:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_SYNC_KILL_MASK;
 486              		.loc 1 491 0
 487 0014 0B4B     		ldr	r3, .L28
 488 0016 0B4A     		ldr	r2, .L28
 489 0018 1268     		ldr	r2, [r2]
 490 001a 0421     		mov	r1, #4
 491 001c 8A43     		bic	r2, r1
 492 001e 1A60     		str	r2, [r3]
 492:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((syncKillEnable & TCPWM_1_1BIT_MASK)  <<
 493              		.loc 1 492 0
 494 0020 084B     		ldr	r3, .L28
 495 0022 084A     		ldr	r2, .L28
 496 0024 1168     		ldr	r1, [r2]
 497 0026 7A68     		ldr	r2, [r7, #4]
 498 0028 0120     		mov	r0, #1
 499 002a 0240     		and	r2, r0
 500 002c 9200     		lsl	r2, r2, #2
 501 002e 0A43     		orr	r2, r1
 502 0030 1A60     		str	r2, [r3]
 493:Generated_Source\PSoC4/TCPWM_1.c ****                                                TCPWM_1_PWM_SYNC_KILL_SHIFT));
 494:Generated_Source\PSoC4/TCPWM_1.c **** 
 495:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 503              		.loc 1 495 0
 504 0032 0F23     		mov	r3, #15
 505 0034 FB18     		add	r3, r7, r3
 506 0036 1B78     		ldrb	r3, [r3]
 507 0038 181C     		mov	r0, r3
 508 003a FFF7FEFF 		bl	CyExitCriticalSection
 496:Generated_Source\PSoC4/TCPWM_1.c **** }
 509              		.loc 1 496 0
 510 003e BD46     		mov	sp, r7
 511 0040 05B0     		add	sp, sp, #20
 512              		@ sp needed
 513 0042 90BD     		pop	{r4, r7, pc}
 514              	.L29:
 515              		.align	2
 516              	.L28:
 517 0044 00010540 		.word	1074069760
 518              		.cfi_endproc
 519              	.LFE9:
 520              		.size	TCPWM_1_SetPWMSyncKill, .-TCPWM_1_SetPWMSyncKill
 521              		.section	.text.TCPWM_1_SetPWMStopOnKill,"ax",%progbits
 522              		.align	2
 523              		.global	TCPWM_1_SetPWMStopOnKill
 524              		.code	16
 525              		.thumb_func
 526              		.type	TCPWM_1_SetPWMStopOnKill, %function
 527              	TCPWM_1_SetPWMStopOnKill:
 528              	.LFB10:
 497:Generated_Source\PSoC4/TCPWM_1.c **** 
 498:Generated_Source\PSoC4/TCPWM_1.c **** 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 19


 499:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 500:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMStopOnKill
 501:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 502:Generated_Source\PSoC4/TCPWM_1.c **** *
 503:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 504:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the PWM kill signal (stop input)
 505:Generated_Source\PSoC4/TCPWM_1.c **** *  causes the PWM counter to stop.  By default the kill operation does not stop
 506:Generated_Source\PSoC4/TCPWM_1.c **** *  the counter.  This functionality is only applicable to the three PWM modes.
 507:Generated_Source\PSoC4/TCPWM_1.c **** *
 508:Generated_Source\PSoC4/TCPWM_1.c **** *
 509:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 510:Generated_Source\PSoC4/TCPWM_1.c **** *  stopOnKillEnable
 511:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 512:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Don't stop
 513:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Stop
 514:Generated_Source\PSoC4/TCPWM_1.c **** *
 515:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 516:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 517:Generated_Source\PSoC4/TCPWM_1.c **** *
 518:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 519:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMStopOnKill(uint32 stopOnKillEnable)
 520:Generated_Source\PSoC4/TCPWM_1.c **** {
 529              		.loc 1 520 0
 530              		.cfi_startproc
 531 0000 90B5     		push	{r4, r7, lr}
 532              		.cfi_def_cfa_offset 12
 533              		.cfi_offset 4, -12
 534              		.cfi_offset 7, -8
 535              		.cfi_offset 14, -4
 536 0002 85B0     		sub	sp, sp, #20
 537              		.cfi_def_cfa_offset 32
 538 0004 00AF     		add	r7, sp, #0
 539              		.cfi_def_cfa_register 7
 540 0006 7860     		str	r0, [r7, #4]
 521:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 522:Generated_Source\PSoC4/TCPWM_1.c **** 
 523:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 541              		.loc 1 523 0
 542 0008 0F23     		mov	r3, #15
 543 000a FC18     		add	r4, r7, r3
 544 000c FFF7FEFF 		bl	CyEnterCriticalSection
 545 0010 031C     		mov	r3, r0
 546 0012 2370     		strb	r3, [r4]
 524:Generated_Source\PSoC4/TCPWM_1.c **** 
 525:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PWM_STOP_KILL_MASK;
 547              		.loc 1 525 0
 548 0014 0B4B     		ldr	r3, .L31
 549 0016 0B4A     		ldr	r2, .L31
 550 0018 1268     		ldr	r2, [r2]
 551 001a 0821     		mov	r1, #8
 552 001c 8A43     		bic	r2, r1
 553 001e 1A60     		str	r2, [r3]
 526:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((stopOnKillEnable & TCPWM_1_1BIT_MASK)  <<
 554              		.loc 1 526 0
 555 0020 084B     		ldr	r3, .L31
 556 0022 084A     		ldr	r2, .L31
 557 0024 1168     		ldr	r1, [r2]
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 20


 558 0026 7A68     		ldr	r2, [r7, #4]
 559 0028 0120     		mov	r0, #1
 560 002a 0240     		and	r2, r0
 561 002c D200     		lsl	r2, r2, #3
 562 002e 0A43     		orr	r2, r1
 563 0030 1A60     		str	r2, [r3]
 527:Generated_Source\PSoC4/TCPWM_1.c ****                                                          TCPWM_1_PWM_STOP_KILL_SHIFT));
 528:Generated_Source\PSoC4/TCPWM_1.c **** 
 529:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 564              		.loc 1 529 0
 565 0032 0F23     		mov	r3, #15
 566 0034 FB18     		add	r3, r7, r3
 567 0036 1B78     		ldrb	r3, [r3]
 568 0038 181C     		mov	r0, r3
 569 003a FFF7FEFF 		bl	CyExitCriticalSection
 530:Generated_Source\PSoC4/TCPWM_1.c **** }
 570              		.loc 1 530 0
 571 003e BD46     		mov	sp, r7
 572 0040 05B0     		add	sp, sp, #20
 573              		@ sp needed
 574 0042 90BD     		pop	{r4, r7, pc}
 575              	.L32:
 576              		.align	2
 577              	.L31:
 578 0044 00010540 		.word	1074069760
 579              		.cfi_endproc
 580              	.LFE10:
 581              		.size	TCPWM_1_SetPWMStopOnKill, .-TCPWM_1_SetPWMStopOnKill
 582              		.section	.text.TCPWM_1_SetPWMDeadTime,"ax",%progbits
 583              		.align	2
 584              		.global	TCPWM_1_SetPWMDeadTime
 585              		.code	16
 586              		.thumb_func
 587              		.type	TCPWM_1_SetPWMDeadTime, %function
 588              	TCPWM_1_SetPWMDeadTime:
 589              	.LFB11:
 531:Generated_Source\PSoC4/TCPWM_1.c **** 
 532:Generated_Source\PSoC4/TCPWM_1.c **** 
 533:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 534:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMDeadTime
 535:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 536:Generated_Source\PSoC4/TCPWM_1.c **** *
 537:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 538:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the dead time control value.  This value delays the rising edge of
 539:Generated_Source\PSoC4/TCPWM_1.c **** *  both the line and line_n signals the designated number of cycles resulting
 540:Generated_Source\PSoC4/TCPWM_1.c **** *  in both signals being inactive for that many cycles.  This functionality is
 541:Generated_Source\PSoC4/TCPWM_1.c **** *  only applicable to the PWM in the dead time mode.
 542:Generated_Source\PSoC4/TCPWM_1.c **** 
 543:Generated_Source\PSoC4/TCPWM_1.c **** *
 544:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 545:Generated_Source\PSoC4/TCPWM_1.c **** *  Dead time to insert
 546:Generated_Source\PSoC4/TCPWM_1.c **** *   Values: 0 to 255
 547:Generated_Source\PSoC4/TCPWM_1.c **** *
 548:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 549:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 550:Generated_Source\PSoC4/TCPWM_1.c **** *
 551:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 21


 552:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMDeadTime(uint32 deadTime)
 553:Generated_Source\PSoC4/TCPWM_1.c **** {
 590              		.loc 1 553 0
 591              		.cfi_startproc
 592 0000 90B5     		push	{r4, r7, lr}
 593              		.cfi_def_cfa_offset 12
 594              		.cfi_offset 4, -12
 595              		.cfi_offset 7, -8
 596              		.cfi_offset 14, -4
 597 0002 85B0     		sub	sp, sp, #20
 598              		.cfi_def_cfa_offset 32
 599 0004 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 554:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 555:Generated_Source\PSoC4/TCPWM_1.c **** 
 556:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 602              		.loc 1 556 0
 603 0008 0F23     		mov	r3, #15
 604 000a FC18     		add	r4, r7, r3
 605 000c FFF7FEFF 		bl	CyEnterCriticalSection
 606 0010 031C     		mov	r3, r0
 607 0012 2370     		strb	r3, [r4]
 557:Generated_Source\PSoC4/TCPWM_1.c **** 
 558:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_PRESCALER_MASK;
 608              		.loc 1 558 0
 609 0014 0B4B     		ldr	r3, .L34
 610 0016 0B4A     		ldr	r2, .L34
 611 0018 1268     		ldr	r2, [r2]
 612 001a 0B49     		ldr	r1, .L34+4
 613 001c 0A40     		and	r2, r1
 614 001e 1A60     		str	r2, [r3]
 559:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((deadTime & TCPWM_1_8BIT_MASK) <<
 615              		.loc 1 559 0
 616 0020 084B     		ldr	r3, .L34
 617 0022 084A     		ldr	r2, .L34
 618 0024 1168     		ldr	r1, [r2]
 619 0026 7A68     		ldr	r2, [r7, #4]
 620 0028 1202     		lsl	r2, r2, #8
 621 002a 1204     		lsl	r2, r2, #16
 622 002c 120C     		lsr	r2, r2, #16
 623 002e 0A43     		orr	r2, r1
 624 0030 1A60     		str	r2, [r3]
 560:Generated_Source\PSoC4/TCPWM_1.c ****                                                           TCPWM_1_PRESCALER_SHIFT));
 561:Generated_Source\PSoC4/TCPWM_1.c **** 
 562:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 625              		.loc 1 562 0
 626 0032 0F23     		mov	r3, #15
 627 0034 FB18     		add	r3, r7, r3
 628 0036 1B78     		ldrb	r3, [r3]
 629 0038 181C     		mov	r0, r3
 630 003a FFF7FEFF 		bl	CyExitCriticalSection
 563:Generated_Source\PSoC4/TCPWM_1.c **** }
 631              		.loc 1 563 0
 632 003e BD46     		mov	sp, r7
 633 0040 05B0     		add	sp, sp, #20
 634              		@ sp needed
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 22


 635 0042 90BD     		pop	{r4, r7, pc}
 636              	.L35:
 637              		.align	2
 638              	.L34:
 639 0044 00010540 		.word	1074069760
 640 0048 FF00FFFF 		.word	-65281
 641              		.cfi_endproc
 642              	.LFE11:
 643              		.size	TCPWM_1_SetPWMDeadTime, .-TCPWM_1_SetPWMDeadTime
 644              		.section	.text.TCPWM_1_SetPWMInvert,"ax",%progbits
 645              		.align	2
 646              		.global	TCPWM_1_SetPWMInvert
 647              		.code	16
 648              		.thumb_func
 649              		.type	TCPWM_1_SetPWMInvert, %function
 650              	TCPWM_1_SetPWMInvert:
 651              	.LFB12:
 564:Generated_Source\PSoC4/TCPWM_1.c **** 
 565:Generated_Source\PSoC4/TCPWM_1.c **** 
 566:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 567:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPWMInvert
 568:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 569:Generated_Source\PSoC4/TCPWM_1.c **** *
 570:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 571:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the bits that control whether the line and line_n outputs are
 572:Generated_Source\PSoC4/TCPWM_1.c **** *  inverted from their normal output values.  This functionality is only
 573:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable to the three PWM modes.
 574:Generated_Source\PSoC4/TCPWM_1.c **** *
 575:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 576:Generated_Source\PSoC4/TCPWM_1.c **** *  mask: Mask of outputs to invert.
 577:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 578:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE   - Inverts the line output
 579:Generated_Source\PSoC4/TCPWM_1.c **** *         - TCPWM_1_INVERT_LINE_N - Inverts the line_n output
 580:Generated_Source\PSoC4/TCPWM_1.c **** *
 581:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 582:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 583:Generated_Source\PSoC4/TCPWM_1.c **** *
 584:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPWMInvert(uint32 mask)
 586:Generated_Source\PSoC4/TCPWM_1.c **** {
 652              		.loc 1 586 0
 653              		.cfi_startproc
 654 0000 90B5     		push	{r4, r7, lr}
 655              		.cfi_def_cfa_offset 12
 656              		.cfi_offset 4, -12
 657              		.cfi_offset 7, -8
 658              		.cfi_offset 14, -4
 659 0002 85B0     		sub	sp, sp, #20
 660              		.cfi_def_cfa_offset 32
 661 0004 00AF     		add	r7, sp, #0
 662              		.cfi_def_cfa_register 7
 663 0006 7860     		str	r0, [r7, #4]
 587:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 588:Generated_Source\PSoC4/TCPWM_1.c **** 
 589:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 664              		.loc 1 589 0
 665 0008 0F23     		mov	r3, #15
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 23


 666 000a FC18     		add	r4, r7, r3
 667 000c FFF7FEFF 		bl	CyEnterCriticalSection
 668 0010 031C     		mov	r3, r0
 669 0012 2370     		strb	r3, [r4]
 590:Generated_Source\PSoC4/TCPWM_1.c **** 
 591:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_INV_OUT_MASK;
 670              		.loc 1 591 0
 671 0014 0A4B     		ldr	r3, .L37
 672 0016 0A4A     		ldr	r2, .L37
 673 0018 1268     		ldr	r2, [r2]
 674 001a 0A49     		ldr	r1, .L37+4
 675 001c 0A40     		and	r2, r1
 676 001e 1A60     		str	r2, [r3]
 592:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= mask;
 677              		.loc 1 592 0
 678 0020 074B     		ldr	r3, .L37
 679 0022 074A     		ldr	r2, .L37
 680 0024 1168     		ldr	r1, [r2]
 681 0026 7A68     		ldr	r2, [r7, #4]
 682 0028 0A43     		orr	r2, r1
 683 002a 1A60     		str	r2, [r3]
 593:Generated_Source\PSoC4/TCPWM_1.c **** 
 594:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 684              		.loc 1 594 0
 685 002c 0F23     		mov	r3, #15
 686 002e FB18     		add	r3, r7, r3
 687 0030 1B78     		ldrb	r3, [r3]
 688 0032 181C     		mov	r0, r3
 689 0034 FFF7FEFF 		bl	CyExitCriticalSection
 595:Generated_Source\PSoC4/TCPWM_1.c **** }
 690              		.loc 1 595 0
 691 0038 BD46     		mov	sp, r7
 692 003a 05B0     		add	sp, sp, #20
 693              		@ sp needed
 694 003c 90BD     		pop	{r4, r7, pc}
 695              	.L38:
 696 003e C046     		.align	2
 697              	.L37:
 698 0040 00010540 		.word	1074069760
 699 0044 FFFFCFFF 		.word	-3145729
 700              		.cfi_endproc
 701              	.LFE12:
 702              		.size	TCPWM_1_SetPWMInvert, .-TCPWM_1_SetPWMInvert
 703              		.section	.text.TCPWM_1_WriteCounter,"ax",%progbits
 704              		.align	2
 705              		.global	TCPWM_1_WriteCounter
 706              		.code	16
 707              		.thumb_func
 708              		.type	TCPWM_1_WriteCounter, %function
 709              	TCPWM_1_WriteCounter:
 710              	.LFB13:
 596:Generated_Source\PSoC4/TCPWM_1.c **** 
 597:Generated_Source\PSoC4/TCPWM_1.c **** 
 598:Generated_Source\PSoC4/TCPWM_1.c **** 
 599:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 600:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCounter
 601:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 24


 602:Generated_Source\PSoC4/TCPWM_1.c **** *
 603:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 604:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes a new 16bit counter value directly into the counter register, thus
 605:Generated_Source\PSoC4/TCPWM_1.c **** *  setting the counter (not the period) to the value written. It is not
 606:Generated_Source\PSoC4/TCPWM_1.c **** *  advised to write to this field when the counter is running.
 607:Generated_Source\PSoC4/TCPWM_1.c **** *
 608:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 609:Generated_Source\PSoC4/TCPWM_1.c **** *  count: value to write
 610:Generated_Source\PSoC4/TCPWM_1.c **** *
 611:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 612:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 613:Generated_Source\PSoC4/TCPWM_1.c **** *
 614:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 615:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCounter(uint32 count)
 616:Generated_Source\PSoC4/TCPWM_1.c **** {
 711              		.loc 1 616 0
 712              		.cfi_startproc
 713 0000 80B5     		push	{r7, lr}
 714              		.cfi_def_cfa_offset 8
 715              		.cfi_offset 7, -8
 716              		.cfi_offset 14, -4
 717 0002 82B0     		sub	sp, sp, #8
 718              		.cfi_def_cfa_offset 16
 719 0004 00AF     		add	r7, sp, #0
 720              		.cfi_def_cfa_register 7
 721 0006 7860     		str	r0, [r7, #4]
 617:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COUNTER_REG = (count & TCPWM_1_16BIT_MASK);
 722              		.loc 1 617 0
 723 0008 034B     		ldr	r3, .L40
 724 000a 7A68     		ldr	r2, [r7, #4]
 725 000c 1204     		lsl	r2, r2, #16
 726 000e 120C     		lsr	r2, r2, #16
 727 0010 1A60     		str	r2, [r3]
 618:Generated_Source\PSoC4/TCPWM_1.c **** }
 728              		.loc 1 618 0
 729 0012 BD46     		mov	sp, r7
 730 0014 02B0     		add	sp, sp, #8
 731              		@ sp needed
 732 0016 80BD     		pop	{r7, pc}
 733              	.L41:
 734              		.align	2
 735              	.L40:
 736 0018 08010540 		.word	1074069768
 737              		.cfi_endproc
 738              	.LFE13:
 739              		.size	TCPWM_1_WriteCounter, .-TCPWM_1_WriteCounter
 740              		.section	.text.TCPWM_1_ReadCounter,"ax",%progbits
 741              		.align	2
 742              		.global	TCPWM_1_ReadCounter
 743              		.code	16
 744              		.thumb_func
 745              		.type	TCPWM_1_ReadCounter, %function
 746              	TCPWM_1_ReadCounter:
 747              	.LFB14:
 619:Generated_Source\PSoC4/TCPWM_1.c **** 
 620:Generated_Source\PSoC4/TCPWM_1.c **** 
 621:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 25


 622:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCounter
 623:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 624:Generated_Source\PSoC4/TCPWM_1.c **** *
 625:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 626:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the current counter value.
 627:Generated_Source\PSoC4/TCPWM_1.c **** *
 628:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 629:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 630:Generated_Source\PSoC4/TCPWM_1.c **** *
 631:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 632:Generated_Source\PSoC4/TCPWM_1.c **** *  Current counter value
 633:Generated_Source\PSoC4/TCPWM_1.c **** *
 634:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 635:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCounter(void)
 636:Generated_Source\PSoC4/TCPWM_1.c **** {
 748              		.loc 1 636 0
 749              		.cfi_startproc
 750 0000 80B5     		push	{r7, lr}
 751              		.cfi_def_cfa_offset 8
 752              		.cfi_offset 7, -8
 753              		.cfi_offset 14, -4
 754 0002 00AF     		add	r7, sp, #0
 755              		.cfi_def_cfa_register 7
 637:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COUNTER_REG & TCPWM_1_16BIT_MASK);
 756              		.loc 1 637 0
 757 0004 034B     		ldr	r3, .L44
 758 0006 1B68     		ldr	r3, [r3]
 759 0008 1B04     		lsl	r3, r3, #16
 760 000a 1B0C     		lsr	r3, r3, #16
 638:Generated_Source\PSoC4/TCPWM_1.c **** }
 761              		.loc 1 638 0
 762 000c 181C     		mov	r0, r3
 763 000e BD46     		mov	sp, r7
 764              		@ sp needed
 765 0010 80BD     		pop	{r7, pc}
 766              	.L45:
 767 0012 C046     		.align	2
 768              	.L44:
 769 0014 08010540 		.word	1074069768
 770              		.cfi_endproc
 771              	.LFE14:
 772              		.size	TCPWM_1_ReadCounter, .-TCPWM_1_ReadCounter
 773              		.section	.text.TCPWM_1_SetCounterMode,"ax",%progbits
 774              		.align	2
 775              		.global	TCPWM_1_SetCounterMode
 776              		.code	16
 777              		.thumb_func
 778              		.type	TCPWM_1_SetCounterMode, %function
 779              	TCPWM_1_SetCounterMode:
 780              	.LFB15:
 639:Generated_Source\PSoC4/TCPWM_1.c **** 
 640:Generated_Source\PSoC4/TCPWM_1.c **** 
 641:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 642:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCounterMode
 643:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 644:Generated_Source\PSoC4/TCPWM_1.c **** *
 645:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 26


 646:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the counter mode.  Applicable to all modes except Quadrature Decoder
 647:Generated_Source\PSoC4/TCPWM_1.c **** *  and the PWM with a pseudo random output.
 648:Generated_Source\PSoC4/TCPWM_1.c **** *
 649:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 650:Generated_Source\PSoC4/TCPWM_1.c **** *  counterMode: Enumerated counter type values
 651:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 652:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UP       - Counts up
 653:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_DOWN     - Counts down
 654:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN0  - Counts up and down. Terminal count
 655:Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated when counter reaches 0
 656:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_COUNT_UPDOWN1  - Counts up and down. Terminal count
 657:Generated_Source\PSoC4/TCPWM_1.c **** *                                         generated both when counter reaches 0
 658:Generated_Source\PSoC4/TCPWM_1.c **** *                                         and period
 659:Generated_Source\PSoC4/TCPWM_1.c **** *
 660:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 661:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 662:Generated_Source\PSoC4/TCPWM_1.c **** *
 663:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 664:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCounterMode(uint32 counterMode)
 665:Generated_Source\PSoC4/TCPWM_1.c **** {
 781              		.loc 1 665 0
 782              		.cfi_startproc
 783 0000 90B5     		push	{r4, r7, lr}
 784              		.cfi_def_cfa_offset 12
 785              		.cfi_offset 4, -12
 786              		.cfi_offset 7, -8
 787              		.cfi_offset 14, -4
 788 0002 85B0     		sub	sp, sp, #20
 789              		.cfi_def_cfa_offset 32
 790 0004 00AF     		add	r7, sp, #0
 791              		.cfi_def_cfa_register 7
 792 0006 7860     		str	r0, [r7, #4]
 666:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 667:Generated_Source\PSoC4/TCPWM_1.c **** 
 668:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 793              		.loc 1 668 0
 794 0008 0F23     		mov	r3, #15
 795 000a FC18     		add	r4, r7, r3
 796 000c FFF7FEFF 		bl	CyEnterCriticalSection
 797 0010 031C     		mov	r3, r0
 798 0012 2370     		strb	r3, [r4]
 669:Generated_Source\PSoC4/TCPWM_1.c **** 
 670:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_UPDOWN_MASK;
 799              		.loc 1 670 0
 800 0014 0A4B     		ldr	r3, .L47
 801 0016 0A4A     		ldr	r2, .L47
 802 0018 1268     		ldr	r2, [r2]
 803 001a 0A49     		ldr	r1, .L47+4
 804 001c 0A40     		and	r2, r1
 805 001e 1A60     		str	r2, [r3]
 671:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= counterMode;
 806              		.loc 1 671 0
 807 0020 074B     		ldr	r3, .L47
 808 0022 074A     		ldr	r2, .L47
 809 0024 1168     		ldr	r1, [r2]
 810 0026 7A68     		ldr	r2, [r7, #4]
 811 0028 0A43     		orr	r2, r1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 27


 812 002a 1A60     		str	r2, [r3]
 672:Generated_Source\PSoC4/TCPWM_1.c **** 
 673:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 813              		.loc 1 673 0
 814 002c 0F23     		mov	r3, #15
 815 002e FB18     		add	r3, r7, r3
 816 0030 1B78     		ldrb	r3, [r3]
 817 0032 181C     		mov	r0, r3
 818 0034 FFF7FEFF 		bl	CyExitCriticalSection
 674:Generated_Source\PSoC4/TCPWM_1.c **** }
 819              		.loc 1 674 0
 820 0038 BD46     		mov	sp, r7
 821 003a 05B0     		add	sp, sp, #20
 822              		@ sp needed
 823 003c 90BD     		pop	{r4, r7, pc}
 824              	.L48:
 825 003e C046     		.align	2
 826              	.L47:
 827 0040 00010540 		.word	1074069760
 828 0044 FFFFFCFF 		.word	-196609
 829              		.cfi_endproc
 830              	.LFE15:
 831              		.size	TCPWM_1_SetCounterMode, .-TCPWM_1_SetCounterMode
 832              		.section	.text.TCPWM_1_WritePeriod,"ax",%progbits
 833              		.align	2
 834              		.global	TCPWM_1_WritePeriod
 835              		.code	16
 836              		.thumb_func
 837              		.type	TCPWM_1_WritePeriod, %function
 838              	TCPWM_1_WritePeriod:
 839              	.LFB16:
 675:Generated_Source\PSoC4/TCPWM_1.c **** 
 676:Generated_Source\PSoC4/TCPWM_1.c **** 
 677:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 678:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriod
 679:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 680:Generated_Source\PSoC4/TCPWM_1.c **** *
 681:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 682:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period register with the new period value.
 683:Generated_Source\PSoC4/TCPWM_1.c **** *  To cause the counter to count for N cycles this register should be written
 684:Generated_Source\PSoC4/TCPWM_1.c **** *  with N-1 (counts from 0 to period inclusive).
 685:Generated_Source\PSoC4/TCPWM_1.c **** *
 686:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 687:Generated_Source\PSoC4/TCPWM_1.c **** *  period: Period value
 688:Generated_Source\PSoC4/TCPWM_1.c **** *
 689:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 690:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 691:Generated_Source\PSoC4/TCPWM_1.c **** *
 692:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 693:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriod(uint32 period)
 694:Generated_Source\PSoC4/TCPWM_1.c **** {
 840              		.loc 1 694 0
 841              		.cfi_startproc
 842 0000 80B5     		push	{r7, lr}
 843              		.cfi_def_cfa_offset 8
 844              		.cfi_offset 7, -8
 845              		.cfi_offset 14, -4
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 28


 846 0002 82B0     		sub	sp, sp, #8
 847              		.cfi_def_cfa_offset 16
 848 0004 00AF     		add	r7, sp, #0
 849              		.cfi_def_cfa_register 7
 850 0006 7860     		str	r0, [r7, #4]
 695:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_REG = (period & TCPWM_1_16BIT_MASK);
 851              		.loc 1 695 0
 852 0008 034B     		ldr	r3, .L50
 853 000a 7A68     		ldr	r2, [r7, #4]
 854 000c 1204     		lsl	r2, r2, #16
 855 000e 120C     		lsr	r2, r2, #16
 856 0010 1A60     		str	r2, [r3]
 696:Generated_Source\PSoC4/TCPWM_1.c **** }
 857              		.loc 1 696 0
 858 0012 BD46     		mov	sp, r7
 859 0014 02B0     		add	sp, sp, #8
 860              		@ sp needed
 861 0016 80BD     		pop	{r7, pc}
 862              	.L51:
 863              		.align	2
 864              	.L50:
 865 0018 14010540 		.word	1074069780
 866              		.cfi_endproc
 867              	.LFE16:
 868              		.size	TCPWM_1_WritePeriod, .-TCPWM_1_WritePeriod
 869              		.section	.text.TCPWM_1_ReadPeriod,"ax",%progbits
 870              		.align	2
 871              		.global	TCPWM_1_ReadPeriod
 872              		.code	16
 873              		.thumb_func
 874              		.type	TCPWM_1_ReadPeriod, %function
 875              	TCPWM_1_ReadPeriod:
 876              	.LFB17:
 697:Generated_Source\PSoC4/TCPWM_1.c **** 
 698:Generated_Source\PSoC4/TCPWM_1.c **** 
 699:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 700:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriod
 701:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 702:Generated_Source\PSoC4/TCPWM_1.c **** *
 703:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 704:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period register.
 705:Generated_Source\PSoC4/TCPWM_1.c **** *
 706:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 707:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 708:Generated_Source\PSoC4/TCPWM_1.c **** *
 709:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 710:Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 711:Generated_Source\PSoC4/TCPWM_1.c **** *
 712:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 713:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriod(void)
 714:Generated_Source\PSoC4/TCPWM_1.c **** {
 877              		.loc 1 714 0
 878              		.cfi_startproc
 879 0000 80B5     		push	{r7, lr}
 880              		.cfi_def_cfa_offset 8
 881              		.cfi_offset 7, -8
 882              		.cfi_offset 14, -4
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 29


 883 0002 00AF     		add	r7, sp, #0
 884              		.cfi_def_cfa_register 7
 715:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_REG & TCPWM_1_16BIT_MASK);
 885              		.loc 1 715 0
 886 0004 034B     		ldr	r3, .L54
 887 0006 1B68     		ldr	r3, [r3]
 888 0008 1B04     		lsl	r3, r3, #16
 889 000a 1B0C     		lsr	r3, r3, #16
 716:Generated_Source\PSoC4/TCPWM_1.c **** }
 890              		.loc 1 716 0
 891 000c 181C     		mov	r0, r3
 892 000e BD46     		mov	sp, r7
 893              		@ sp needed
 894 0010 80BD     		pop	{r7, pc}
 895              	.L55:
 896 0012 C046     		.align	2
 897              	.L54:
 898 0014 14010540 		.word	1074069780
 899              		.cfi_endproc
 900              	.LFE17:
 901              		.size	TCPWM_1_ReadPeriod, .-TCPWM_1_ReadPeriod
 902              		.section	.text.TCPWM_1_SetCompareSwap,"ax",%progbits
 903              		.align	2
 904              		.global	TCPWM_1_SetCompareSwap
 905              		.code	16
 906              		.thumb_func
 907              		.type	TCPWM_1_SetCompareSwap, %function
 908              	TCPWM_1_SetCompareSwap:
 909              	.LFB18:
 717:Generated_Source\PSoC4/TCPWM_1.c **** 
 718:Generated_Source\PSoC4/TCPWM_1.c **** 
 719:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 720:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCompareSwap
 721:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 722:Generated_Source\PSoC4/TCPWM_1.c **** *
 723:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 724:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the compare registers are
 725:Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in the Timer/Counter mode(without capture) the swap
 726:Generated_Source\PSoC4/TCPWM_1.c **** *  occurs at a TC event. In the PWM mode the swap occurs at the next TC event
 727:Generated_Source\PSoC4/TCPWM_1.c **** *  following a hardware switch event.
 728:Generated_Source\PSoC4/TCPWM_1.c **** *
 729:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 730:Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 731:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 732:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 733:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 734:Generated_Source\PSoC4/TCPWM_1.c **** *
 735:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 736:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 737:Generated_Source\PSoC4/TCPWM_1.c **** *
 738:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 739:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCompareSwap(uint32 swapEnable)
 740:Generated_Source\PSoC4/TCPWM_1.c **** {
 910              		.loc 1 740 0
 911              		.cfi_startproc
 912 0000 90B5     		push	{r4, r7, lr}
 913              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 30


 914              		.cfi_offset 4, -12
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 85B0     		sub	sp, sp, #20
 918              		.cfi_def_cfa_offset 32
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]
 741:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 742:Generated_Source\PSoC4/TCPWM_1.c **** 
 743:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 922              		.loc 1 743 0
 923 0008 0F23     		mov	r3, #15
 924 000a FC18     		add	r4, r7, r3
 925 000c FFF7FEFF 		bl	CyEnterCriticalSection
 926 0010 031C     		mov	r3, r0
 927 0012 2370     		strb	r3, [r4]
 744:Generated_Source\PSoC4/TCPWM_1.c **** 
 745:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_CC_MASK;
 928              		.loc 1 745 0
 929 0014 0B4B     		ldr	r3, .L57
 930 0016 0B4A     		ldr	r2, .L57
 931 0018 1268     		ldr	r2, [r2]
 932 001a 0121     		mov	r1, #1
 933 001c 8A43     		bic	r2, r1
 934 001e 1A60     		str	r2, [r3]
 746:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= (swapEnable & TCPWM_1_1BIT_MASK);
 935              		.loc 1 746 0
 936 0020 084B     		ldr	r3, .L57
 937 0022 084A     		ldr	r2, .L57
 938 0024 1168     		ldr	r1, [r2]
 939 0026 7A68     		ldr	r2, [r7, #4]
 940 0028 0120     		mov	r0, #1
 941 002a 0240     		and	r2, r0
 942 002c 0A43     		orr	r2, r1
 943 002e 1A60     		str	r2, [r3]
 747:Generated_Source\PSoC4/TCPWM_1.c **** 
 748:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 944              		.loc 1 748 0
 945 0030 0F23     		mov	r3, #15
 946 0032 FB18     		add	r3, r7, r3
 947 0034 1B78     		ldrb	r3, [r3]
 948 0036 181C     		mov	r0, r3
 949 0038 FFF7FEFF 		bl	CyExitCriticalSection
 749:Generated_Source\PSoC4/TCPWM_1.c **** }
 950              		.loc 1 749 0
 951 003c BD46     		mov	sp, r7
 952 003e 05B0     		add	sp, sp, #20
 953              		@ sp needed
 954 0040 90BD     		pop	{r4, r7, pc}
 955              	.L58:
 956 0042 C046     		.align	2
 957              	.L57:
 958 0044 00010540 		.word	1074069760
 959              		.cfi_endproc
 960              	.LFE18:
 961              		.size	TCPWM_1_SetCompareSwap, .-TCPWM_1_SetCompareSwap
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 31


 962              		.section	.text.TCPWM_1_WritePeriodBuf,"ax",%progbits
 963              		.align	2
 964              		.global	TCPWM_1_WritePeriodBuf
 965              		.code	16
 966              		.thumb_func
 967              		.type	TCPWM_1_WritePeriodBuf, %function
 968              	TCPWM_1_WritePeriodBuf:
 969              	.LFB19:
 750:Generated_Source\PSoC4/TCPWM_1.c **** 
 751:Generated_Source\PSoC4/TCPWM_1.c **** 
 752:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 753:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WritePeriodBuf
 754:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 755:Generated_Source\PSoC4/TCPWM_1.c **** *
 756:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 757:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit period buf register with the new period value.
 758:Generated_Source\PSoC4/TCPWM_1.c **** *
 759:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 760:Generated_Source\PSoC4/TCPWM_1.c **** *  periodBuf: Period value
 761:Generated_Source\PSoC4/TCPWM_1.c **** *
 762:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 763:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 764:Generated_Source\PSoC4/TCPWM_1.c **** *
 765:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 766:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WritePeriodBuf(uint32 periodBuf)
 767:Generated_Source\PSoC4/TCPWM_1.c **** {
 970              		.loc 1 767 0
 971              		.cfi_startproc
 972 0000 80B5     		push	{r7, lr}
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 82B0     		sub	sp, sp, #8
 977              		.cfi_def_cfa_offset 16
 978 0004 00AF     		add	r7, sp, #0
 979              		.cfi_def_cfa_register 7
 980 0006 7860     		str	r0, [r7, #4]
 768:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_PERIOD_BUF_REG = (periodBuf & TCPWM_1_16BIT_MASK);
 981              		.loc 1 768 0
 982 0008 034B     		ldr	r3, .L60
 983 000a 7A68     		ldr	r2, [r7, #4]
 984 000c 1204     		lsl	r2, r2, #16
 985 000e 120C     		lsr	r2, r2, #16
 986 0010 1A60     		str	r2, [r3]
 769:Generated_Source\PSoC4/TCPWM_1.c **** }
 987              		.loc 1 769 0
 988 0012 BD46     		mov	sp, r7
 989 0014 02B0     		add	sp, sp, #8
 990              		@ sp needed
 991 0016 80BD     		pop	{r7, pc}
 992              	.L61:
 993              		.align	2
 994              	.L60:
 995 0018 18010540 		.word	1074069784
 996              		.cfi_endproc
 997              	.LFE19:
 998              		.size	TCPWM_1_WritePeriodBuf, .-TCPWM_1_WritePeriodBuf
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 32


 999              		.section	.text.TCPWM_1_ReadPeriodBuf,"ax",%progbits
 1000              		.align	2
 1001              		.global	TCPWM_1_ReadPeriodBuf
 1002              		.code	16
 1003              		.thumb_func
 1004              		.type	TCPWM_1_ReadPeriodBuf, %function
 1005              	TCPWM_1_ReadPeriodBuf:
 1006              	.LFB20:
 770:Generated_Source\PSoC4/TCPWM_1.c **** 
 771:Generated_Source\PSoC4/TCPWM_1.c **** 
 772:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 773:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadPeriodBuf
 774:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 775:Generated_Source\PSoC4/TCPWM_1.c **** *
 776:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 777:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the 16 bit period buf register.
 778:Generated_Source\PSoC4/TCPWM_1.c **** *
 779:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 780:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 781:Generated_Source\PSoC4/TCPWM_1.c **** *
 782:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 783:Generated_Source\PSoC4/TCPWM_1.c **** *  Period value
 784:Generated_Source\PSoC4/TCPWM_1.c **** *
 785:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 786:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadPeriodBuf(void)
 787:Generated_Source\PSoC4/TCPWM_1.c **** {
 1007              		.loc 1 787 0
 1008              		.cfi_startproc
 1009 0000 80B5     		push	{r7, lr}
 1010              		.cfi_def_cfa_offset 8
 1011              		.cfi_offset 7, -8
 1012              		.cfi_offset 14, -4
 1013 0002 00AF     		add	r7, sp, #0
 1014              		.cfi_def_cfa_register 7
 788:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_PERIOD_BUF_REG & TCPWM_1_16BIT_MASK);
 1015              		.loc 1 788 0
 1016 0004 034B     		ldr	r3, .L64
 1017 0006 1B68     		ldr	r3, [r3]
 1018 0008 1B04     		lsl	r3, r3, #16
 1019 000a 1B0C     		lsr	r3, r3, #16
 789:Generated_Source\PSoC4/TCPWM_1.c **** }
 1020              		.loc 1 789 0
 1021 000c 181C     		mov	r0, r3
 1022 000e BD46     		mov	sp, r7
 1023              		@ sp needed
 1024 0010 80BD     		pop	{r7, pc}
 1025              	.L65:
 1026 0012 C046     		.align	2
 1027              	.L64:
 1028 0014 18010540 		.word	1074069784
 1029              		.cfi_endproc
 1030              	.LFE20:
 1031              		.size	TCPWM_1_ReadPeriodBuf, .-TCPWM_1_ReadPeriodBuf
 1032              		.section	.text.TCPWM_1_SetPeriodSwap,"ax",%progbits
 1033              		.align	2
 1034              		.global	TCPWM_1_SetPeriodSwap
 1035              		.code	16
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 33


 1036              		.thumb_func
 1037              		.type	TCPWM_1_SetPeriodSwap, %function
 1038              	TCPWM_1_SetPeriodSwap:
 1039              	.LFB21:
 790:Generated_Source\PSoC4/TCPWM_1.c **** 
 791:Generated_Source\PSoC4/TCPWM_1.c **** 
 792:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 793:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetPeriodSwap
 794:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 795:Generated_Source\PSoC4/TCPWM_1.c **** *
 796:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 797:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the register that controls whether the period registers are
 798:Generated_Source\PSoC4/TCPWM_1.c **** *  swapped. When enabled in Timer/Counter mode the swap occurs at a TC event.
 799:Generated_Source\PSoC4/TCPWM_1.c **** *  In the PWM mode the swap occurs at the next TC event following a hardware
 800:Generated_Source\PSoC4/TCPWM_1.c **** *  switch event.
 801:Generated_Source\PSoC4/TCPWM_1.c **** *
 802:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 803:Generated_Source\PSoC4/TCPWM_1.c **** *  swapEnable
 804:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
 805:Generated_Source\PSoC4/TCPWM_1.c **** *     - 0 - Disable swap
 806:Generated_Source\PSoC4/TCPWM_1.c **** *     - 1 - Enable swap
 807:Generated_Source\PSoC4/TCPWM_1.c **** *
 808:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 809:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 810:Generated_Source\PSoC4/TCPWM_1.c **** *
 811:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 812:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetPeriodSwap(uint32 swapEnable)
 813:Generated_Source\PSoC4/TCPWM_1.c **** {
 1040              		.loc 1 813 0
 1041              		.cfi_startproc
 1042 0000 90B5     		push	{r4, r7, lr}
 1043              		.cfi_def_cfa_offset 12
 1044              		.cfi_offset 4, -12
 1045              		.cfi_offset 7, -8
 1046              		.cfi_offset 14, -4
 1047 0002 85B0     		sub	sp, sp, #20
 1048              		.cfi_def_cfa_offset 32
 1049 0004 00AF     		add	r7, sp, #0
 1050              		.cfi_def_cfa_register 7
 1051 0006 7860     		str	r0, [r7, #4]
 814:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
 815:Generated_Source\PSoC4/TCPWM_1.c **** 
 816:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1052              		.loc 1 816 0
 1053 0008 0F23     		mov	r3, #15
 1054 000a FC18     		add	r4, r7, r3
 1055 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1056 0010 031C     		mov	r3, r0
 1057 0012 2370     		strb	r3, [r4]
 817:Generated_Source\PSoC4/TCPWM_1.c **** 
 818:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG &= (uint32)~TCPWM_1_RELOAD_PERIOD_MASK;
 1058              		.loc 1 818 0
 1059 0014 0B4B     		ldr	r3, .L67
 1060 0016 0B4A     		ldr	r2, .L67
 1061 0018 1268     		ldr	r2, [r2]
 1062 001a 0221     		mov	r1, #2
 1063 001c 8A43     		bic	r2, r1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 34


 1064 001e 1A60     		str	r2, [r3]
 819:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_CONTROL_REG |= ((uint32)((swapEnable & TCPWM_1_1BIT_MASK) <<
 1065              		.loc 1 819 0
 1066 0020 084B     		ldr	r3, .L67
 1067 0022 084A     		ldr	r2, .L67
 1068 0024 1168     		ldr	r1, [r2]
 1069 0026 7A68     		ldr	r2, [r7, #4]
 1070 0028 0120     		mov	r0, #1
 1071 002a 0240     		and	r2, r0
 1072 002c 5200     		lsl	r2, r2, #1
 1073 002e 0A43     		orr	r2, r1
 1074 0030 1A60     		str	r2, [r3]
 820:Generated_Source\PSoC4/TCPWM_1.c ****                                                             TCPWM_1_RELOAD_PERIOD_SHIFT));
 821:Generated_Source\PSoC4/TCPWM_1.c **** 
 822:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1075              		.loc 1 822 0
 1076 0032 0F23     		mov	r3, #15
 1077 0034 FB18     		add	r3, r7, r3
 1078 0036 1B78     		ldrb	r3, [r3]
 1079 0038 181C     		mov	r0, r3
 1080 003a FFF7FEFF 		bl	CyExitCriticalSection
 823:Generated_Source\PSoC4/TCPWM_1.c **** }
 1081              		.loc 1 823 0
 1082 003e BD46     		mov	sp, r7
 1083 0040 05B0     		add	sp, sp, #20
 1084              		@ sp needed
 1085 0042 90BD     		pop	{r4, r7, pc}
 1086              	.L68:
 1087              		.align	2
 1088              	.L67:
 1089 0044 00010540 		.word	1074069760
 1090              		.cfi_endproc
 1091              	.LFE21:
 1092              		.size	TCPWM_1_SetPeriodSwap, .-TCPWM_1_SetPeriodSwap
 1093              		.section	.text.TCPWM_1_WriteCompare,"ax",%progbits
 1094              		.align	2
 1095              		.global	TCPWM_1_WriteCompare
 1096              		.code	16
 1097              		.thumb_func
 1098              		.type	TCPWM_1_WriteCompare, %function
 1099              	TCPWM_1_WriteCompare:
 1100              	.LFB22:
 824:Generated_Source\PSoC4/TCPWM_1.c **** 
 825:Generated_Source\PSoC4/TCPWM_1.c **** 
 826:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 827:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompare
 828:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 829:Generated_Source\PSoC4/TCPWM_1.c **** *
 830:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 831:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare register with the new compare value. Not
 832:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 833:Generated_Source\PSoC4/TCPWM_1.c **** *
 834:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 835:Generated_Source\PSoC4/TCPWM_1.c **** *  compare: Compare value
 836:Generated_Source\PSoC4/TCPWM_1.c **** *
 837:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 838:Generated_Source\PSoC4/TCPWM_1.c **** *  None
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 35


 839:Generated_Source\PSoC4/TCPWM_1.c **** *
 840:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 841:Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 842:Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 843:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 844:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 845:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 846:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 847:Generated_Source\PSoC4/TCPWM_1.c **** *
 848:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 849:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompare(uint32 compare)
 850:Generated_Source\PSoC4/TCPWM_1.c **** {
 1101              		.loc 1 850 0
 1102              		.cfi_startproc
 1103 0000 80B5     		push	{r7, lr}
 1104              		.cfi_def_cfa_offset 8
 1105              		.cfi_offset 7, -8
 1106              		.cfi_offset 14, -4
 1107 0002 82B0     		sub	sp, sp, #8
 1108              		.cfi_def_cfa_offset 16
 1109 0004 00AF     		add	r7, sp, #0
 1110              		.cfi_def_cfa_register 7
 1111 0006 7860     		str	r0, [r7, #4]
 851:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 852:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 853:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 854:Generated_Source\PSoC4/TCPWM_1.c **** 
 855:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 856:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 857:Generated_Source\PSoC4/TCPWM_1.c **** 
 858:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compare))
 859:Generated_Source\PSoC4/TCPWM_1.c ****         {
 860:Generated_Source\PSoC4/TCPWM_1.c ****             compare++;
 861:Generated_Source\PSoC4/TCPWM_1.c ****         }
 862:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compare))
 863:Generated_Source\PSoC4/TCPWM_1.c ****         {
 864:Generated_Source\PSoC4/TCPWM_1.c ****             compare--;
 865:Generated_Source\PSoC4/TCPWM_1.c ****         }
 866:Generated_Source\PSoC4/TCPWM_1.c ****         else
 867:Generated_Source\PSoC4/TCPWM_1.c ****         {
 868:Generated_Source\PSoC4/TCPWM_1.c ****         }
 869:Generated_Source\PSoC4/TCPWM_1.c ****         
 870:Generated_Source\PSoC4/TCPWM_1.c ****     
 871:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 872:Generated_Source\PSoC4/TCPWM_1.c ****     
 873:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_REG = (compare & TCPWM_1_16BIT_MASK);
 1112              		.loc 1 873 0
 1113 0008 034B     		ldr	r3, .L70
 1114 000a 7A68     		ldr	r2, [r7, #4]
 1115 000c 1204     		lsl	r2, r2, #16
 1116 000e 120C     		lsr	r2, r2, #16
 1117 0010 1A60     		str	r2, [r3]
 874:Generated_Source\PSoC4/TCPWM_1.c **** }
 1118              		.loc 1 874 0
 1119 0012 BD46     		mov	sp, r7
 1120 0014 02B0     		add	sp, sp, #8
 1121              		@ sp needed
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 36


 1122 0016 80BD     		pop	{r7, pc}
 1123              	.L71:
 1124              		.align	2
 1125              	.L70:
 1126 0018 0C010540 		.word	1074069772
 1127              		.cfi_endproc
 1128              	.LFE22:
 1129              		.size	TCPWM_1_WriteCompare, .-TCPWM_1_WriteCompare
 1130              		.section	.text.TCPWM_1_ReadCompare,"ax",%progbits
 1131              		.align	2
 1132              		.global	TCPWM_1_ReadCompare
 1133              		.code	16
 1134              		.thumb_func
 1135              		.type	TCPWM_1_ReadCompare, %function
 1136              	TCPWM_1_ReadCompare:
 1137              	.LFB23:
 875:Generated_Source\PSoC4/TCPWM_1.c **** 
 876:Generated_Source\PSoC4/TCPWM_1.c **** 
 877:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 878:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompare
 879:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 880:Generated_Source\PSoC4/TCPWM_1.c **** *
 881:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 882:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare register. Not applicable for Timer/Counter with Capture
 883:Generated_Source\PSoC4/TCPWM_1.c **** *  or in Quadrature Decoder modes.
 884:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 885:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 886:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 887:Generated_Source\PSoC4/TCPWM_1.c **** *
 888:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 889:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 890:Generated_Source\PSoC4/TCPWM_1.c **** *
 891:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 892:Generated_Source\PSoC4/TCPWM_1.c **** *  Compare value
 893:Generated_Source\PSoC4/TCPWM_1.c **** *
 894:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 895:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 896:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 897:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 898:Generated_Source\PSoC4/TCPWM_1.c **** *
 899:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 900:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompare(void)
 901:Generated_Source\PSoC4/TCPWM_1.c **** {
 1138              		.loc 1 901 0
 1139              		.cfi_startproc
 1140 0000 80B5     		push	{r7, lr}
 1141              		.cfi_def_cfa_offset 8
 1142              		.cfi_offset 7, -8
 1143              		.cfi_offset 14, -4
 1144 0002 00AF     		add	r7, sp, #0
 1145              		.cfi_def_cfa_register 7
 902:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 903:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 904:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
 905:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 906:Generated_Source\PSoC4/TCPWM_1.c **** 
 907:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 37


 908:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 909:Generated_Source\PSoC4/TCPWM_1.c ****         
 910:Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_REG;
 911:Generated_Source\PSoC4/TCPWM_1.c ****         
 912:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
 913:Generated_Source\PSoC4/TCPWM_1.c ****         {
 914:Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
 915:Generated_Source\PSoC4/TCPWM_1.c ****         }
 916:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
 917:Generated_Source\PSoC4/TCPWM_1.c ****         {
 918:Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
 919:Generated_Source\PSoC4/TCPWM_1.c ****         }
 920:Generated_Source\PSoC4/TCPWM_1.c ****         else
 921:Generated_Source\PSoC4/TCPWM_1.c ****         {
 922:Generated_Source\PSoC4/TCPWM_1.c ****         }
 923:Generated_Source\PSoC4/TCPWM_1.c **** 
 924:Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
 925:Generated_Source\PSoC4/TCPWM_1.c ****     #else
 926:Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1146              		.loc 1 926 0
 1147 0004 034B     		ldr	r3, .L74
 1148 0006 1B68     		ldr	r3, [r3]
 1149 0008 1B04     		lsl	r3, r3, #16
 1150 000a 1B0C     		lsr	r3, r3, #16
 927:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 928:Generated_Source\PSoC4/TCPWM_1.c **** }
 1151              		.loc 1 928 0
 1152 000c 181C     		mov	r0, r3
 1153 000e BD46     		mov	sp, r7
 1154              		@ sp needed
 1155 0010 80BD     		pop	{r7, pc}
 1156              	.L75:
 1157 0012 C046     		.align	2
 1158              	.L74:
 1159 0014 0C010540 		.word	1074069772
 1160              		.cfi_endproc
 1161              	.LFE23:
 1162              		.size	TCPWM_1_ReadCompare, .-TCPWM_1_ReadCompare
 1163              		.section	.text.TCPWM_1_WriteCompareBuf,"ax",%progbits
 1164              		.align	2
 1165              		.global	TCPWM_1_WriteCompareBuf
 1166              		.code	16
 1167              		.thumb_func
 1168              		.type	TCPWM_1_WriteCompareBuf, %function
 1169              	TCPWM_1_WriteCompareBuf:
 1170              	.LFB24:
 929:Generated_Source\PSoC4/TCPWM_1.c **** 
 930:Generated_Source\PSoC4/TCPWM_1.c **** 
 931:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 932:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_WriteCompareBuf
 933:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 934:Generated_Source\PSoC4/TCPWM_1.c **** *
 935:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 936:Generated_Source\PSoC4/TCPWM_1.c **** *  Writes the 16 bit compare buffer register with the new compare value. Not
 937:Generated_Source\PSoC4/TCPWM_1.c **** *  applicable for Timer/Counter with Capture or in Quadrature Decoder modes.
 938:Generated_Source\PSoC4/TCPWM_1.c **** *
 939:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 38


 940:Generated_Source\PSoC4/TCPWM_1.c **** *  compareBuf: Compare value
 941:Generated_Source\PSoC4/TCPWM_1.c **** *
 942:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 943:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 944:Generated_Source\PSoC4/TCPWM_1.c **** *
 945:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 946:Generated_Source\PSoC4/TCPWM_1.c **** *  It is not recommended to use the value equal to "0" or equal to 
 947:Generated_Source\PSoC4/TCPWM_1.c **** *  "period value" in Center or Asymmetric align PWM modes on the 
 948:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4100/PSoC 4200 devices.
 949:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices write the 16 bit compare register with the decremented 
 950:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Up counting mode (except 0x0u), and the incremented 
 951:Generated_Source\PSoC4/TCPWM_1.c **** *  compare value in the Down counting mode (except 0xFFFFu).
 952:Generated_Source\PSoC4/TCPWM_1.c **** *
 953:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
 954:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_WriteCompareBuf(uint32 compareBuf)
 955:Generated_Source\PSoC4/TCPWM_1.c **** {
 1171              		.loc 1 955 0
 1172              		.cfi_startproc
 1173 0000 80B5     		push	{r7, lr}
 1174              		.cfi_def_cfa_offset 8
 1175              		.cfi_offset 7, -8
 1176              		.cfi_offset 14, -4
 1177 0002 82B0     		sub	sp, sp, #8
 1178              		.cfi_def_cfa_offset 16
 1179 0004 00AF     		add	r7, sp, #0
 1180              		.cfi_def_cfa_register 7
 1181 0006 7860     		str	r0, [r7, #4]
 956:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 957:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
 958:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 959:Generated_Source\PSoC4/TCPWM_1.c **** 
 960:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
 961:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
 962:Generated_Source\PSoC4/TCPWM_1.c **** 
 963:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0xFFFFu != compareBuf))
 964:Generated_Source\PSoC4/TCPWM_1.c ****         {
 965:Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf++;
 966:Generated_Source\PSoC4/TCPWM_1.c ****         }
 967:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0u != compareBuf))
 968:Generated_Source\PSoC4/TCPWM_1.c ****         {
 969:Generated_Source\PSoC4/TCPWM_1.c ****             compareBuf --;
 970:Generated_Source\PSoC4/TCPWM_1.c ****         }
 971:Generated_Source\PSoC4/TCPWM_1.c ****         else
 972:Generated_Source\PSoC4/TCPWM_1.c ****         {
 973:Generated_Source\PSoC4/TCPWM_1.c ****         }
 974:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
 975:Generated_Source\PSoC4/TCPWM_1.c ****     
 976:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMP_CAP_BUF_REG = (compareBuf & TCPWM_1_16BIT_MASK);
 1182              		.loc 1 976 0
 1183 0008 034B     		ldr	r3, .L77
 1184 000a 7A68     		ldr	r2, [r7, #4]
 1185 000c 1204     		lsl	r2, r2, #16
 1186 000e 120C     		lsr	r2, r2, #16
 1187 0010 1A60     		str	r2, [r3]
 977:Generated_Source\PSoC4/TCPWM_1.c **** }
 1188              		.loc 1 977 0
 1189 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 39


 1190 0014 02B0     		add	sp, sp, #8
 1191              		@ sp needed
 1192 0016 80BD     		pop	{r7, pc}
 1193              	.L78:
 1194              		.align	2
 1195              	.L77:
 1196 0018 10010540 		.word	1074069776
 1197              		.cfi_endproc
 1198              	.LFE24:
 1199              		.size	TCPWM_1_WriteCompareBuf, .-TCPWM_1_WriteCompareBuf
 1200              		.section	.text.TCPWM_1_ReadCompareBuf,"ax",%progbits
 1201              		.align	2
 1202              		.global	TCPWM_1_ReadCompareBuf
 1203              		.code	16
 1204              		.thumb_func
 1205              		.type	TCPWM_1_ReadCompareBuf, %function
 1206              	TCPWM_1_ReadCompareBuf:
 1207              	.LFB25:
 978:Generated_Source\PSoC4/TCPWM_1.c **** 
 979:Generated_Source\PSoC4/TCPWM_1.c **** 
 980:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
 981:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCompareBuf
 982:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
 983:Generated_Source\PSoC4/TCPWM_1.c **** *
 984:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
 985:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the compare buffer register. Not applicable for Timer/Counter with
 986:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture or in Quadrature Decoder modes.
 987:Generated_Source\PSoC4/TCPWM_1.c **** *
 988:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
 989:Generated_Source\PSoC4/TCPWM_1.c **** *  None
 990:Generated_Source\PSoC4/TCPWM_1.c **** *
 991:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
 992:Generated_Source\PSoC4/TCPWM_1.c **** *  Compare buffer value
 993:Generated_Source\PSoC4/TCPWM_1.c **** *
 994:Generated_Source\PSoC4/TCPWM_1.c **** * Note:
 995:Generated_Source\PSoC4/TCPWM_1.c **** *  PSoC 4000 devices read the incremented compare register value in the 
 996:Generated_Source\PSoC4/TCPWM_1.c **** *  Up counting mode (except 0xFFFFu), and the decremented value in the 
 997:Generated_Source\PSoC4/TCPWM_1.c **** *  Down counting mode (except 0x0u).
 998:Generated_Source\PSoC4/TCPWM_1.c **** *
 999:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCompareBuf(void)
1001:Generated_Source\PSoC4/TCPWM_1.c **** {
 1208              		.loc 1 1001 0
 1209              		.cfi_startproc
 1210 0000 80B5     		push	{r7, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 7, -8
 1213              		.cfi_offset 14, -4
 1214 0002 00AF     		add	r7, sp, #0
 1215              		.cfi_def_cfa_register 7
1002:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1003:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 currentMode;
1004:Generated_Source\PSoC4/TCPWM_1.c ****         uint32 regVal;
1005:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1006:Generated_Source\PSoC4/TCPWM_1.c **** 
1007:Generated_Source\PSoC4/TCPWM_1.c ****     #if (TCPWM_1_CY_TCPWM_4000)
1008:Generated_Source\PSoC4/TCPWM_1.c ****         currentMode = ((TCPWM_1_CONTROL_REG & TCPWM_1_UPDOWN_MASK) >> TCPWM_1_UPDOWN_SHIFT);
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 40


1009:Generated_Source\PSoC4/TCPWM_1.c **** 
1010:Generated_Source\PSoC4/TCPWM_1.c ****         regVal = TCPWM_1_COMP_CAP_BUF_REG;
1011:Generated_Source\PSoC4/TCPWM_1.c ****         
1012:Generated_Source\PSoC4/TCPWM_1.c ****         if (((uint32)TCPWM_1__COUNT_DOWN == currentMode) && (0u != regVal))
1013:Generated_Source\PSoC4/TCPWM_1.c ****         {
1014:Generated_Source\PSoC4/TCPWM_1.c ****             regVal--;
1015:Generated_Source\PSoC4/TCPWM_1.c ****         }
1016:Generated_Source\PSoC4/TCPWM_1.c ****         else if (((uint32)TCPWM_1__COUNT_UP == currentMode) && (0xFFFFu != regVal))
1017:Generated_Source\PSoC4/TCPWM_1.c ****         {
1018:Generated_Source\PSoC4/TCPWM_1.c ****             regVal++;
1019:Generated_Source\PSoC4/TCPWM_1.c ****         }
1020:Generated_Source\PSoC4/TCPWM_1.c ****         else
1021:Generated_Source\PSoC4/TCPWM_1.c ****         {
1022:Generated_Source\PSoC4/TCPWM_1.c ****         }
1023:Generated_Source\PSoC4/TCPWM_1.c **** 
1024:Generated_Source\PSoC4/TCPWM_1.c ****         return (regVal & TCPWM_1_16BIT_MASK);
1025:Generated_Source\PSoC4/TCPWM_1.c ****     #else
1026:Generated_Source\PSoC4/TCPWM_1.c ****         return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1216              		.loc 1 1026 0
 1217 0004 034B     		ldr	r3, .L81
 1218 0006 1B68     		ldr	r3, [r3]
 1219 0008 1B04     		lsl	r3, r3, #16
 1220 000a 1B0C     		lsr	r3, r3, #16
1027:Generated_Source\PSoC4/TCPWM_1.c ****     #endif /* (TCPWM_1_CY_TCPWM_4000) */
1028:Generated_Source\PSoC4/TCPWM_1.c **** }
 1221              		.loc 1 1028 0
 1222 000c 181C     		mov	r0, r3
 1223 000e BD46     		mov	sp, r7
 1224              		@ sp needed
 1225 0010 80BD     		pop	{r7, pc}
 1226              	.L82:
 1227 0012 C046     		.align	2
 1228              	.L81:
 1229 0014 10010540 		.word	1074069776
 1230              		.cfi_endproc
 1231              	.LFE25:
 1232              		.size	TCPWM_1_ReadCompareBuf, .-TCPWM_1_ReadCompareBuf
 1233              		.section	.text.TCPWM_1_ReadCapture,"ax",%progbits
 1234              		.align	2
 1235              		.global	TCPWM_1_ReadCapture
 1236              		.code	16
 1237              		.thumb_func
 1238              		.type	TCPWM_1_ReadCapture, %function
 1239              	TCPWM_1_ReadCapture:
 1240              	.LFB26:
1029:Generated_Source\PSoC4/TCPWM_1.c **** 
1030:Generated_Source\PSoC4/TCPWM_1.c **** 
1031:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1032:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCapture
1033:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1034:Generated_Source\PSoC4/TCPWM_1.c **** *
1035:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1036:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the captured counter value. This API is applicable only for
1037:Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1038:Generated_Source\PSoC4/TCPWM_1.c **** *
1039:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1040:Generated_Source\PSoC4/TCPWM_1.c **** *  None
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 41


1041:Generated_Source\PSoC4/TCPWM_1.c **** *
1042:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1043:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture value
1044:Generated_Source\PSoC4/TCPWM_1.c **** *
1045:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1046:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCapture(void)
1047:Generated_Source\PSoC4/TCPWM_1.c **** {
 1241              		.loc 1 1047 0
 1242              		.cfi_startproc
 1243 0000 80B5     		push	{r7, lr}
 1244              		.cfi_def_cfa_offset 8
 1245              		.cfi_offset 7, -8
 1246              		.cfi_offset 14, -4
 1247 0002 00AF     		add	r7, sp, #0
 1248              		.cfi_def_cfa_register 7
1048:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_REG & TCPWM_1_16BIT_MASK);
 1249              		.loc 1 1048 0
 1250 0004 034B     		ldr	r3, .L85
 1251 0006 1B68     		ldr	r3, [r3]
 1252 0008 1B04     		lsl	r3, r3, #16
 1253 000a 1B0C     		lsr	r3, r3, #16
1049:Generated_Source\PSoC4/TCPWM_1.c **** }
 1254              		.loc 1 1049 0
 1255 000c 181C     		mov	r0, r3
 1256 000e BD46     		mov	sp, r7
 1257              		@ sp needed
 1258 0010 80BD     		pop	{r7, pc}
 1259              	.L86:
 1260 0012 C046     		.align	2
 1261              	.L85:
 1262 0014 0C010540 		.word	1074069772
 1263              		.cfi_endproc
 1264              	.LFE26:
 1265              		.size	TCPWM_1_ReadCapture, .-TCPWM_1_ReadCapture
 1266              		.section	.text.TCPWM_1_ReadCaptureBuf,"ax",%progbits
 1267              		.align	2
 1268              		.global	TCPWM_1_ReadCaptureBuf
 1269              		.code	16
 1270              		.thumb_func
 1271              		.type	TCPWM_1_ReadCaptureBuf, %function
 1272              	TCPWM_1_ReadCaptureBuf:
 1273              	.LFB27:
1050:Generated_Source\PSoC4/TCPWM_1.c **** 
1051:Generated_Source\PSoC4/TCPWM_1.c **** 
1052:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1053:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadCaptureBuf
1054:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1055:Generated_Source\PSoC4/TCPWM_1.c **** *
1056:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1057:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the capture buffer register. This API is applicable only for
1058:Generated_Source\PSoC4/TCPWM_1.c **** *  Timer/Counter with the capture mode and Quadrature Decoder modes.
1059:Generated_Source\PSoC4/TCPWM_1.c **** *
1060:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1061:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1062:Generated_Source\PSoC4/TCPWM_1.c **** *
1063:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1064:Generated_Source\PSoC4/TCPWM_1.c **** *  Capture buffer value
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 42


1065:Generated_Source\PSoC4/TCPWM_1.c **** *
1066:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1067:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadCaptureBuf(void)
1068:Generated_Source\PSoC4/TCPWM_1.c **** {
 1274              		.loc 1 1068 0
 1275              		.cfi_startproc
 1276 0000 80B5     		push	{r7, lr}
 1277              		.cfi_def_cfa_offset 8
 1278              		.cfi_offset 7, -8
 1279              		.cfi_offset 14, -4
 1280 0002 00AF     		add	r7, sp, #0
 1281              		.cfi_def_cfa_register 7
1069:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_COMP_CAP_BUF_REG & TCPWM_1_16BIT_MASK);
 1282              		.loc 1 1069 0
 1283 0004 034B     		ldr	r3, .L89
 1284 0006 1B68     		ldr	r3, [r3]
 1285 0008 1B04     		lsl	r3, r3, #16
 1286 000a 1B0C     		lsr	r3, r3, #16
1070:Generated_Source\PSoC4/TCPWM_1.c **** }
 1287              		.loc 1 1070 0
 1288 000c 181C     		mov	r0, r3
 1289 000e BD46     		mov	sp, r7
 1290              		@ sp needed
 1291 0010 80BD     		pop	{r7, pc}
 1292              	.L90:
 1293 0012 C046     		.align	2
 1294              	.L89:
 1295 0014 10010540 		.word	1074069776
 1296              		.cfi_endproc
 1297              	.LFE27:
 1298              		.size	TCPWM_1_ReadCaptureBuf, .-TCPWM_1_ReadCaptureBuf
 1299              		.section	.text.TCPWM_1_SetCaptureMode,"ax",%progbits
 1300              		.align	2
 1301              		.global	TCPWM_1_SetCaptureMode
 1302              		.code	16
 1303              		.thumb_func
 1304              		.type	TCPWM_1_SetCaptureMode, %function
 1305              	TCPWM_1_SetCaptureMode:
 1306              	.LFB28:
1071:Generated_Source\PSoC4/TCPWM_1.c **** 
1072:Generated_Source\PSoC4/TCPWM_1.c **** 
1073:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1074:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCaptureMode
1075:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1076:Generated_Source\PSoC4/TCPWM_1.c **** *
1077:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1078:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the capture trigger mode. For PWM mode this is the switch input.
1079:Generated_Source\PSoC4/TCPWM_1.c **** *  This input is not applicable to the Timer/Counter without Capture and
1080:Generated_Source\PSoC4/TCPWM_1.c **** *  Quadrature Decoder modes.
1081:Generated_Source\PSoC4/TCPWM_1.c **** *
1082:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1083:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1084:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1085:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1086:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1087:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1088:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 43


1089:Generated_Source\PSoC4/TCPWM_1.c **** *
1090:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1091:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1092:Generated_Source\PSoC4/TCPWM_1.c **** *
1093:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1094:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCaptureMode(uint32 triggerMode)
1095:Generated_Source\PSoC4/TCPWM_1.c **** {
 1307              		.loc 1 1095 0
 1308              		.cfi_startproc
 1309 0000 90B5     		push	{r4, r7, lr}
 1310              		.cfi_def_cfa_offset 12
 1311              		.cfi_offset 4, -12
 1312              		.cfi_offset 7, -8
 1313              		.cfi_offset 14, -4
 1314 0002 85B0     		sub	sp, sp, #20
 1315              		.cfi_def_cfa_offset 32
 1316 0004 00AF     		add	r7, sp, #0
 1317              		.cfi_def_cfa_register 7
 1318 0006 7860     		str	r0, [r7, #4]
1096:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1097:Generated_Source\PSoC4/TCPWM_1.c **** 
1098:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1319              		.loc 1 1098 0
 1320 0008 0F23     		mov	r3, #15
 1321 000a FC18     		add	r4, r7, r3
 1322 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1323 0010 031C     		mov	r3, r0
 1324 0012 2370     		strb	r3, [r4]
1099:Generated_Source\PSoC4/TCPWM_1.c **** 
1100:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_CAPTURE_MASK;
 1325              		.loc 1 1100 0
 1326 0014 0A4B     		ldr	r3, .L92
 1327 0016 0A4A     		ldr	r2, .L92
 1328 0018 1268     		ldr	r2, [r2]
 1329 001a 0321     		mov	r1, #3
 1330 001c 8A43     		bic	r2, r1
 1331 001e 1A60     		str	r2, [r3]
1101:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= triggerMode;
 1332              		.loc 1 1101 0
 1333 0020 074B     		ldr	r3, .L92
 1334 0022 074A     		ldr	r2, .L92
 1335 0024 1168     		ldr	r1, [r2]
 1336 0026 7A68     		ldr	r2, [r7, #4]
 1337 0028 0A43     		orr	r2, r1
 1338 002a 1A60     		str	r2, [r3]
1102:Generated_Source\PSoC4/TCPWM_1.c **** 
1103:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1339              		.loc 1 1103 0
 1340 002c 0F23     		mov	r3, #15
 1341 002e FB18     		add	r3, r7, r3
 1342 0030 1B78     		ldrb	r3, [r3]
 1343 0032 181C     		mov	r0, r3
 1344 0034 FFF7FEFF 		bl	CyExitCriticalSection
1104:Generated_Source\PSoC4/TCPWM_1.c **** }
 1345              		.loc 1 1104 0
 1346 0038 BD46     		mov	sp, r7
 1347 003a 05B0     		add	sp, sp, #20
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 44


 1348              		@ sp needed
 1349 003c 90BD     		pop	{r4, r7, pc}
 1350              	.L93:
 1351 003e C046     		.align	2
 1352              	.L92:
 1353 0040 24010540 		.word	1074069796
 1354              		.cfi_endproc
 1355              	.LFE28:
 1356              		.size	TCPWM_1_SetCaptureMode, .-TCPWM_1_SetCaptureMode
 1357              		.section	.text.TCPWM_1_SetReloadMode,"ax",%progbits
 1358              		.align	2
 1359              		.global	TCPWM_1_SetReloadMode
 1360              		.code	16
 1361              		.thumb_func
 1362              		.type	TCPWM_1_SetReloadMode, %function
 1363              	TCPWM_1_SetReloadMode:
 1364              	.LFB29:
1105:Generated_Source\PSoC4/TCPWM_1.c **** 
1106:Generated_Source\PSoC4/TCPWM_1.c **** 
1107:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1108:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetReloadMode
1109:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1110:Generated_Source\PSoC4/TCPWM_1.c **** *
1111:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1112:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the reload trigger mode. For Quadrature Decoder mode this is the index
1113:Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1114:Generated_Source\PSoC4/TCPWM_1.c **** *
1115:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1116:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1117:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1118:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1119:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1120:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1121:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1122:Generated_Source\PSoC4/TCPWM_1.c **** *
1123:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1124:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1125:Generated_Source\PSoC4/TCPWM_1.c **** *
1126:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1127:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetReloadMode(uint32 triggerMode)
1128:Generated_Source\PSoC4/TCPWM_1.c **** {
 1365              		.loc 1 1128 0
 1366              		.cfi_startproc
 1367 0000 90B5     		push	{r4, r7, lr}
 1368              		.cfi_def_cfa_offset 12
 1369              		.cfi_offset 4, -12
 1370              		.cfi_offset 7, -8
 1371              		.cfi_offset 14, -4
 1372 0002 85B0     		sub	sp, sp, #20
 1373              		.cfi_def_cfa_offset 32
 1374 0004 00AF     		add	r7, sp, #0
 1375              		.cfi_def_cfa_register 7
 1376 0006 7860     		str	r0, [r7, #4]
1129:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1130:Generated_Source\PSoC4/TCPWM_1.c **** 
1131:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1377              		.loc 1 1131 0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 45


 1378 0008 0F23     		mov	r3, #15
 1379 000a FC18     		add	r4, r7, r3
 1380 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1381 0010 031C     		mov	r3, r0
 1382 0012 2370     		strb	r3, [r4]
1132:Generated_Source\PSoC4/TCPWM_1.c **** 
1133:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_RELOAD_MASK;
 1383              		.loc 1 1133 0
 1384 0014 0A4B     		ldr	r3, .L95
 1385 0016 0A4A     		ldr	r2, .L95
 1386 0018 1268     		ldr	r2, [r2]
 1387 001a 3021     		mov	r1, #48
 1388 001c 8A43     		bic	r2, r1
 1389 001e 1A60     		str	r2, [r3]
1134:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_RELOAD_SHIFT));
 1390              		.loc 1 1134 0
 1391 0020 074B     		ldr	r3, .L95
 1392 0022 074A     		ldr	r2, .L95
 1393 0024 1168     		ldr	r1, [r2]
 1394 0026 7A68     		ldr	r2, [r7, #4]
 1395 0028 1201     		lsl	r2, r2, #4
 1396 002a 0A43     		orr	r2, r1
 1397 002c 1A60     		str	r2, [r3]
1135:Generated_Source\PSoC4/TCPWM_1.c **** 
1136:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1398              		.loc 1 1136 0
 1399 002e 0F23     		mov	r3, #15
 1400 0030 FB18     		add	r3, r7, r3
 1401 0032 1B78     		ldrb	r3, [r3]
 1402 0034 181C     		mov	r0, r3
 1403 0036 FFF7FEFF 		bl	CyExitCriticalSection
1137:Generated_Source\PSoC4/TCPWM_1.c **** }
 1404              		.loc 1 1137 0
 1405 003a BD46     		mov	sp, r7
 1406 003c 05B0     		add	sp, sp, #20
 1407              		@ sp needed
 1408 003e 90BD     		pop	{r4, r7, pc}
 1409              	.L96:
 1410              		.align	2
 1411              	.L95:
 1412 0040 24010540 		.word	1074069796
 1413              		.cfi_endproc
 1414              	.LFE29:
 1415              		.size	TCPWM_1_SetReloadMode, .-TCPWM_1_SetReloadMode
 1416              		.section	.text.TCPWM_1_SetStartMode,"ax",%progbits
 1417              		.align	2
 1418              		.global	TCPWM_1_SetStartMode
 1419              		.code	16
 1420              		.thumb_func
 1421              		.type	TCPWM_1_SetStartMode, %function
 1422              	TCPWM_1_SetStartMode:
 1423              	.LFB30:
1138:Generated_Source\PSoC4/TCPWM_1.c **** 
1139:Generated_Source\PSoC4/TCPWM_1.c **** 
1140:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1141:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStartMode
1142:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 46


1143:Generated_Source\PSoC4/TCPWM_1.c **** *
1144:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1145:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the start trigger mode. For Quadrature Decoder mode this is the
1146:Generated_Source\PSoC4/TCPWM_1.c **** *  phiB input.
1147:Generated_Source\PSoC4/TCPWM_1.c **** *
1148:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1149:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1150:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1151:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1152:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1153:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1154:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1155:Generated_Source\PSoC4/TCPWM_1.c **** *
1156:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1157:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1158:Generated_Source\PSoC4/TCPWM_1.c **** *
1159:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1160:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStartMode(uint32 triggerMode)
1161:Generated_Source\PSoC4/TCPWM_1.c **** {
 1424              		.loc 1 1161 0
 1425              		.cfi_startproc
 1426 0000 90B5     		push	{r4, r7, lr}
 1427              		.cfi_def_cfa_offset 12
 1428              		.cfi_offset 4, -12
 1429              		.cfi_offset 7, -8
 1430              		.cfi_offset 14, -4
 1431 0002 85B0     		sub	sp, sp, #20
 1432              		.cfi_def_cfa_offset 32
 1433 0004 00AF     		add	r7, sp, #0
 1434              		.cfi_def_cfa_register 7
 1435 0006 7860     		str	r0, [r7, #4]
1162:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1163:Generated_Source\PSoC4/TCPWM_1.c **** 
1164:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1436              		.loc 1 1164 0
 1437 0008 0F23     		mov	r3, #15
 1438 000a FC18     		add	r4, r7, r3
 1439 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1440 0010 031C     		mov	r3, r0
 1441 0012 2370     		strb	r3, [r4]
1165:Generated_Source\PSoC4/TCPWM_1.c **** 
1166:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_START_MASK;
 1442              		.loc 1 1166 0
 1443 0014 0A4B     		ldr	r3, .L98
 1444 0016 0A4A     		ldr	r2, .L98
 1445 0018 1268     		ldr	r2, [r2]
 1446 001a 0A49     		ldr	r1, .L98+4
 1447 001c 0A40     		and	r2, r1
 1448 001e 1A60     		str	r2, [r3]
1167:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_START_SHIFT));
 1449              		.loc 1 1167 0
 1450 0020 074B     		ldr	r3, .L98
 1451 0022 074A     		ldr	r2, .L98
 1452 0024 1168     		ldr	r1, [r2]
 1453 0026 7A68     		ldr	r2, [r7, #4]
 1454 0028 1202     		lsl	r2, r2, #8
 1455 002a 0A43     		orr	r2, r1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 47


 1456 002c 1A60     		str	r2, [r3]
1168:Generated_Source\PSoC4/TCPWM_1.c **** 
1169:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1457              		.loc 1 1169 0
 1458 002e 0F23     		mov	r3, #15
 1459 0030 FB18     		add	r3, r7, r3
 1460 0032 1B78     		ldrb	r3, [r3]
 1461 0034 181C     		mov	r0, r3
 1462 0036 FFF7FEFF 		bl	CyExitCriticalSection
1170:Generated_Source\PSoC4/TCPWM_1.c **** }
 1463              		.loc 1 1170 0
 1464 003a BD46     		mov	sp, r7
 1465 003c 05B0     		add	sp, sp, #20
 1466              		@ sp needed
 1467 003e 90BD     		pop	{r4, r7, pc}
 1468              	.L99:
 1469              		.align	2
 1470              	.L98:
 1471 0040 24010540 		.word	1074069796
 1472 0044 FFFCFFFF 		.word	-769
 1473              		.cfi_endproc
 1474              	.LFE30:
 1475              		.size	TCPWM_1_SetStartMode, .-TCPWM_1_SetStartMode
 1476              		.section	.text.TCPWM_1_SetStopMode,"ax",%progbits
 1477              		.align	2
 1478              		.global	TCPWM_1_SetStopMode
 1479              		.code	16
 1480              		.thumb_func
 1481              		.type	TCPWM_1_SetStopMode, %function
 1482              	TCPWM_1_SetStopMode:
 1483              	.LFB31:
1171:Generated_Source\PSoC4/TCPWM_1.c **** 
1172:Generated_Source\PSoC4/TCPWM_1.c **** 
1173:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1174:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetStopMode
1175:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1176:Generated_Source\PSoC4/TCPWM_1.c **** *
1177:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1178:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the stop trigger mode. For PWM mode this is the kill input.
1179:Generated_Source\PSoC4/TCPWM_1.c **** *
1180:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1181:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1182:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1183:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1184:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1185:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1186:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1187:Generated_Source\PSoC4/TCPWM_1.c **** *
1188:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1189:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1190:Generated_Source\PSoC4/TCPWM_1.c **** *
1191:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1192:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetStopMode(uint32 triggerMode)
1193:Generated_Source\PSoC4/TCPWM_1.c **** {
 1484              		.loc 1 1193 0
 1485              		.cfi_startproc
 1486 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 48


 1487              		.cfi_def_cfa_offset 12
 1488              		.cfi_offset 4, -12
 1489              		.cfi_offset 7, -8
 1490              		.cfi_offset 14, -4
 1491 0002 85B0     		sub	sp, sp, #20
 1492              		.cfi_def_cfa_offset 32
 1493 0004 00AF     		add	r7, sp, #0
 1494              		.cfi_def_cfa_register 7
 1495 0006 7860     		str	r0, [r7, #4]
1194:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1195:Generated_Source\PSoC4/TCPWM_1.c **** 
1196:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1496              		.loc 1 1196 0
 1497 0008 0F23     		mov	r3, #15
 1498 000a FC18     		add	r4, r7, r3
 1499 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1500 0010 031C     		mov	r3, r0
 1501 0012 2370     		strb	r3, [r4]
1197:Generated_Source\PSoC4/TCPWM_1.c **** 
1198:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_STOP_MASK;
 1502              		.loc 1 1198 0
 1503 0014 0A4B     		ldr	r3, .L101
 1504 0016 0A4A     		ldr	r2, .L101
 1505 0018 1268     		ldr	r2, [r2]
 1506 001a C021     		mov	r1, #192
 1507 001c 8A43     		bic	r2, r1
 1508 001e 1A60     		str	r2, [r3]
1199:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_STOP_SHIFT));
 1509              		.loc 1 1199 0
 1510 0020 074B     		ldr	r3, .L101
 1511 0022 074A     		ldr	r2, .L101
 1512 0024 1168     		ldr	r1, [r2]
 1513 0026 7A68     		ldr	r2, [r7, #4]
 1514 0028 9201     		lsl	r2, r2, #6
 1515 002a 0A43     		orr	r2, r1
 1516 002c 1A60     		str	r2, [r3]
1200:Generated_Source\PSoC4/TCPWM_1.c **** 
1201:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1517              		.loc 1 1201 0
 1518 002e 0F23     		mov	r3, #15
 1519 0030 FB18     		add	r3, r7, r3
 1520 0032 1B78     		ldrb	r3, [r3]
 1521 0034 181C     		mov	r0, r3
 1522 0036 FFF7FEFF 		bl	CyExitCriticalSection
1202:Generated_Source\PSoC4/TCPWM_1.c **** }
 1523              		.loc 1 1202 0
 1524 003a BD46     		mov	sp, r7
 1525 003c 05B0     		add	sp, sp, #20
 1526              		@ sp needed
 1527 003e 90BD     		pop	{r4, r7, pc}
 1528              	.L102:
 1529              		.align	2
 1530              	.L101:
 1531 0040 24010540 		.word	1074069796
 1532              		.cfi_endproc
 1533              	.LFE31:
 1534              		.size	TCPWM_1_SetStopMode, .-TCPWM_1_SetStopMode
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 49


 1535              		.section	.text.TCPWM_1_SetCountMode,"ax",%progbits
 1536              		.align	2
 1537              		.global	TCPWM_1_SetCountMode
 1538              		.code	16
 1539              		.thumb_func
 1540              		.type	TCPWM_1_SetCountMode, %function
 1541              	TCPWM_1_SetCountMode:
 1542              	.LFB32:
1203:Generated_Source\PSoC4/TCPWM_1.c **** 
1204:Generated_Source\PSoC4/TCPWM_1.c **** 
1205:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetCountMode
1207:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1208:Generated_Source\PSoC4/TCPWM_1.c **** *
1209:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1210:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the count trigger mode. For Quadrature Decoder mode this is the phiA
1211:Generated_Source\PSoC4/TCPWM_1.c **** *  input.
1212:Generated_Source\PSoC4/TCPWM_1.c **** *
1213:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1214:Generated_Source\PSoC4/TCPWM_1.c **** *  triggerMode: Enumerated trigger mode value
1215:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1216:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_LEVEL     - Level
1217:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_RISING    - Rising edge
1218:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_FALLING   - Falling edge
1219:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_TRIG_BOTH      - Both rising and falling edge
1220:Generated_Source\PSoC4/TCPWM_1.c **** *
1221:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1222:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1223:Generated_Source\PSoC4/TCPWM_1.c **** *
1224:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1225:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetCountMode(uint32 triggerMode)
1226:Generated_Source\PSoC4/TCPWM_1.c **** {
 1543              		.loc 1 1226 0
 1544              		.cfi_startproc
 1545 0000 90B5     		push	{r4, r7, lr}
 1546              		.cfi_def_cfa_offset 12
 1547              		.cfi_offset 4, -12
 1548              		.cfi_offset 7, -8
 1549              		.cfi_offset 14, -4
 1550 0002 85B0     		sub	sp, sp, #20
 1551              		.cfi_def_cfa_offset 32
 1552 0004 00AF     		add	r7, sp, #0
 1553              		.cfi_def_cfa_register 7
 1554 0006 7860     		str	r0, [r7, #4]
1227:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1228:Generated_Source\PSoC4/TCPWM_1.c **** 
1229:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1555              		.loc 1 1229 0
 1556 0008 0F23     		mov	r3, #15
 1557 000a FC18     		add	r4, r7, r3
 1558 000c FFF7FEFF 		bl	CyEnterCriticalSection
 1559 0010 031C     		mov	r3, r0
 1560 0012 2370     		strb	r3, [r4]
1230:Generated_Source\PSoC4/TCPWM_1.c **** 
1231:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG &= (uint32)~TCPWM_1_COUNT_MASK;
 1561              		.loc 1 1231 0
 1562 0014 0A4B     		ldr	r3, .L104
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 50


 1563 0016 0A4A     		ldr	r2, .L104
 1564 0018 1268     		ldr	r2, [r2]
 1565 001a 0C21     		mov	r1, #12
 1566 001c 8A43     		bic	r2, r1
 1567 001e 1A60     		str	r2, [r3]
1232:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_TRIG_CONTROL1_REG |= ((uint32)(triggerMode << TCPWM_1_COUNT_SHIFT));
 1568              		.loc 1 1232 0
 1569 0020 074B     		ldr	r3, .L104
 1570 0022 074A     		ldr	r2, .L104
 1571 0024 1168     		ldr	r1, [r2]
 1572 0026 7A68     		ldr	r2, [r7, #4]
 1573 0028 9200     		lsl	r2, r2, #2
 1574 002a 0A43     		orr	r2, r1
 1575 002c 1A60     		str	r2, [r3]
1233:Generated_Source\PSoC4/TCPWM_1.c **** 
1234:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1576              		.loc 1 1234 0
 1577 002e 0F23     		mov	r3, #15
 1578 0030 FB18     		add	r3, r7, r3
 1579 0032 1B78     		ldrb	r3, [r3]
 1580 0034 181C     		mov	r0, r3
 1581 0036 FFF7FEFF 		bl	CyExitCriticalSection
1235:Generated_Source\PSoC4/TCPWM_1.c **** }
 1582              		.loc 1 1235 0
 1583 003a BD46     		mov	sp, r7
 1584 003c 05B0     		add	sp, sp, #20
 1585              		@ sp needed
 1586 003e 90BD     		pop	{r4, r7, pc}
 1587              	.L105:
 1588              		.align	2
 1589              	.L104:
 1590 0040 24010540 		.word	1074069796
 1591              		.cfi_endproc
 1592              	.LFE32:
 1593              		.size	TCPWM_1_SetCountMode, .-TCPWM_1_SetCountMode
 1594              		.section	.text.TCPWM_1_TriggerCommand,"ax",%progbits
 1595              		.align	2
 1596              		.global	TCPWM_1_TriggerCommand
 1597              		.code	16
 1598              		.thumb_func
 1599              		.type	TCPWM_1_TriggerCommand, %function
 1600              	TCPWM_1_TriggerCommand:
 1601              	.LFB33:
1236:Generated_Source\PSoC4/TCPWM_1.c **** 
1237:Generated_Source\PSoC4/TCPWM_1.c **** 
1238:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1239:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_TriggerCommand
1240:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1241:Generated_Source\PSoC4/TCPWM_1.c **** *
1242:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1243:Generated_Source\PSoC4/TCPWM_1.c **** *  Triggers the designated command to occur on the designated TCPWM instances.
1244:Generated_Source\PSoC4/TCPWM_1.c **** *  The mask can be used to apply this command simultaneously to more than one
1245:Generated_Source\PSoC4/TCPWM_1.c **** *  instance.  This allows multiple TCPWM instances to be synchronized.
1246:Generated_Source\PSoC4/TCPWM_1.c **** *
1247:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1248:Generated_Source\PSoC4/TCPWM_1.c **** *  mask: A combination of mask bits for each instance of the TCPWM that the
1249:Generated_Source\PSoC4/TCPWM_1.c **** *        command should apply to.  This function from one instance can be used
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 51


1250:Generated_Source\PSoC4/TCPWM_1.c **** *        to apply the command to any of the instances in the design.
1251:Generated_Source\PSoC4/TCPWM_1.c **** *        The mask value for a specific instance is available with the MASK
1252:Generated_Source\PSoC4/TCPWM_1.c **** *        define.
1253:Generated_Source\PSoC4/TCPWM_1.c **** *  command: Enumerated command values. Capture command only applicable for
1254:Generated_Source\PSoC4/TCPWM_1.c **** *           Timer/Counter with Capture and PWM modes.
1255:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1256:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_CAPTURE    - Trigger Capture/Switch command
1257:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_RELOAD     - Trigger Reload/Index command
1258:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_STOP       - Trigger Stop/Kill command
1259:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_CMD_START      - Trigger Start/phiB command
1260:Generated_Source\PSoC4/TCPWM_1.c **** *
1261:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1262:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1263:Generated_Source\PSoC4/TCPWM_1.c **** *
1264:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1265:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_TriggerCommand(uint32 mask, uint32 command)
1266:Generated_Source\PSoC4/TCPWM_1.c **** {
 1602              		.loc 1 1266 0
 1603              		.cfi_startproc
 1604 0000 90B5     		push	{r4, r7, lr}
 1605              		.cfi_def_cfa_offset 12
 1606              		.cfi_offset 4, -12
 1607              		.cfi_offset 7, -8
 1608              		.cfi_offset 14, -4
 1609 0002 85B0     		sub	sp, sp, #20
 1610              		.cfi_def_cfa_offset 32
 1611 0004 00AF     		add	r7, sp, #0
 1612              		.cfi_def_cfa_register 7
 1613 0006 7860     		str	r0, [r7, #4]
 1614 0008 3960     		str	r1, [r7]
1267:Generated_Source\PSoC4/TCPWM_1.c ****     uint8 enableInterrupts;
1268:Generated_Source\PSoC4/TCPWM_1.c **** 
1269:Generated_Source\PSoC4/TCPWM_1.c ****     enableInterrupts = CyEnterCriticalSection();
 1615              		.loc 1 1269 0
 1616 000a 0F23     		mov	r3, #15
 1617 000c FC18     		add	r4, r7, r3
 1618 000e FFF7FEFF 		bl	CyEnterCriticalSection
 1619 0012 031C     		mov	r3, r0
 1620 0014 2370     		strb	r3, [r4]
1270:Generated_Source\PSoC4/TCPWM_1.c **** 
1271:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_COMMAND_REG = ((uint32)(mask << command));
 1621              		.loc 1 1271 0
 1622 0016 074B     		ldr	r3, .L107
 1623 0018 3A68     		ldr	r2, [r7]
 1624 001a 7968     		ldr	r1, [r7, #4]
 1625 001c 9140     		lsl	r1, r1, r2
 1626 001e 0A1C     		mov	r2, r1
 1627 0020 1A60     		str	r2, [r3]
1272:Generated_Source\PSoC4/TCPWM_1.c **** 
1273:Generated_Source\PSoC4/TCPWM_1.c ****     CyExitCriticalSection(enableInterrupts);
 1628              		.loc 1 1273 0
 1629 0022 0F23     		mov	r3, #15
 1630 0024 FB18     		add	r3, r7, r3
 1631 0026 1B78     		ldrb	r3, [r3]
 1632 0028 181C     		mov	r0, r3
 1633 002a FFF7FEFF 		bl	CyExitCriticalSection
1274:Generated_Source\PSoC4/TCPWM_1.c **** }
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 52


 1634              		.loc 1 1274 0
 1635 002e BD46     		mov	sp, r7
 1636 0030 05B0     		add	sp, sp, #20
 1637              		@ sp needed
 1638 0032 90BD     		pop	{r4, r7, pc}
 1639              	.L108:
 1640              		.align	2
 1641              	.L107:
 1642 0034 08000540 		.word	1074069512
 1643              		.cfi_endproc
 1644              	.LFE33:
 1645              		.size	TCPWM_1_TriggerCommand, .-TCPWM_1_TriggerCommand
 1646              		.section	.text.TCPWM_1_ReadStatus,"ax",%progbits
 1647              		.align	2
 1648              		.global	TCPWM_1_ReadStatus
 1649              		.code	16
 1650              		.thumb_func
 1651              		.type	TCPWM_1_ReadStatus, %function
 1652              	TCPWM_1_ReadStatus:
 1653              	.LFB34:
1275:Generated_Source\PSoC4/TCPWM_1.c **** 
1276:Generated_Source\PSoC4/TCPWM_1.c **** 
1277:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1278:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ReadStatus
1279:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1280:Generated_Source\PSoC4/TCPWM_1.c **** *
1281:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1282:Generated_Source\PSoC4/TCPWM_1.c **** *  Reads the status of the TCPWM_1.
1283:Generated_Source\PSoC4/TCPWM_1.c **** *
1284:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1285:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1286:Generated_Source\PSoC4/TCPWM_1.c **** *
1287:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1288:Generated_Source\PSoC4/TCPWM_1.c **** *  Status
1289:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1290:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_DOWN    - Set if counting down
1291:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_STATUS_RUNNING - Set if counter is running
1292:Generated_Source\PSoC4/TCPWM_1.c **** *
1293:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1294:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_ReadStatus(void)
1295:Generated_Source\PSoC4/TCPWM_1.c **** {
 1654              		.loc 1 1295 0
 1655              		.cfi_startproc
 1656 0000 80B5     		push	{r7, lr}
 1657              		.cfi_def_cfa_offset 8
 1658              		.cfi_offset 7, -8
 1659              		.cfi_offset 14, -4
 1660 0002 00AF     		add	r7, sp, #0
 1661              		.cfi_def_cfa_register 7
1296:Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1662              		.loc 1 1296 0
 1663 0004 054B     		ldr	r3, .L111
 1664 0006 1B68     		ldr	r3, [r3]
 1665 0008 9A0F     		lsr	r2, r3, #30
1297:Generated_Source\PSoC4/TCPWM_1.c ****             (TCPWM_1_STATUS_REG & TCPWM_1_STATUS_DOWN));
 1666              		.loc 1 1297 0
 1667 000a 044B     		ldr	r3, .L111
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 53


 1668 000c 1B68     		ldr	r3, [r3]
 1669 000e 0121     		mov	r1, #1
 1670 0010 0B40     		and	r3, r1
1296:Generated_Source\PSoC4/TCPWM_1.c ****     return ((TCPWM_1_STATUS_REG >> TCPWM_1_RUNNING_STATUS_SHIFT) |
 1671              		.loc 1 1296 0
 1672 0012 1343     		orr	r3, r2
1298:Generated_Source\PSoC4/TCPWM_1.c **** }
 1673              		.loc 1 1298 0
 1674 0014 181C     		mov	r0, r3
 1675 0016 BD46     		mov	sp, r7
 1676              		@ sp needed
 1677 0018 80BD     		pop	{r7, pc}
 1678              	.L112:
 1679 001a C046     		.align	2
 1680              	.L111:
 1681 001c 04010540 		.word	1074069764
 1682              		.cfi_endproc
 1683              	.LFE34:
 1684              		.size	TCPWM_1_ReadStatus, .-TCPWM_1_ReadStatus
 1685              		.section	.text.TCPWM_1_SetInterruptMode,"ax",%progbits
 1686              		.align	2
 1687              		.global	TCPWM_1_SetInterruptMode
 1688              		.code	16
 1689              		.thumb_func
 1690              		.type	TCPWM_1_SetInterruptMode, %function
 1691              	TCPWM_1_SetInterruptMode:
 1692              	.LFB35:
1299:Generated_Source\PSoC4/TCPWM_1.c **** 
1300:Generated_Source\PSoC4/TCPWM_1.c **** 
1301:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1302:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterruptMode
1303:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1304:Generated_Source\PSoC4/TCPWM_1.c **** *
1305:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1306:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets the interrupt mask to control which interrupt
1307:Generated_Source\PSoC4/TCPWM_1.c **** *  requests generate the interrupt signal.
1308:Generated_Source\PSoC4/TCPWM_1.c **** *
1309:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1310:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of bits to be enabled
1311:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1312:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1313:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1314:Generated_Source\PSoC4/TCPWM_1.c **** *
1315:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1316:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1317:Generated_Source\PSoC4/TCPWM_1.c **** *
1318:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1319:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterruptMode(uint32 interruptMask)
1320:Generated_Source\PSoC4/TCPWM_1.c **** {
 1693              		.loc 1 1320 0
 1694              		.cfi_startproc
 1695 0000 80B5     		push	{r7, lr}
 1696              		.cfi_def_cfa_offset 8
 1697              		.cfi_offset 7, -8
 1698              		.cfi_offset 14, -4
 1699 0002 82B0     		sub	sp, sp, #8
 1700              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 54


 1701 0004 00AF     		add	r7, sp, #0
 1702              		.cfi_def_cfa_register 7
 1703 0006 7860     		str	r0, [r7, #4]
1321:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_MASK_REG =  interruptMask;
 1704              		.loc 1 1321 0
 1705 0008 024B     		ldr	r3, .L114
 1706 000a 7A68     		ldr	r2, [r7, #4]
 1707 000c 1A60     		str	r2, [r3]
1322:Generated_Source\PSoC4/TCPWM_1.c **** }
 1708              		.loc 1 1322 0
 1709 000e BD46     		mov	sp, r7
 1710 0010 02B0     		add	sp, sp, #8
 1711              		@ sp needed
 1712 0012 80BD     		pop	{r7, pc}
 1713              	.L115:
 1714              		.align	2
 1715              	.L114:
 1716 0014 38010540 		.word	1074069816
 1717              		.cfi_endproc
 1718              	.LFE35:
 1719              		.size	TCPWM_1_SetInterruptMode, .-TCPWM_1_SetInterruptMode
 1720              		.section	.text.TCPWM_1_GetInterruptSourceMasked,"ax",%progbits
 1721              		.align	2
 1722              		.global	TCPWM_1_GetInterruptSourceMasked
 1723              		.code	16
 1724              		.thumb_func
 1725              		.type	TCPWM_1_GetInterruptSourceMasked, %function
 1726              	TCPWM_1_GetInterruptSourceMasked:
 1727              	.LFB36:
1323:Generated_Source\PSoC4/TCPWM_1.c **** 
1324:Generated_Source\PSoC4/TCPWM_1.c **** 
1325:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1326:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSourceMasked
1327:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1328:Generated_Source\PSoC4/TCPWM_1.c **** *
1329:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1330:Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests masked by the interrupt mask.
1331:Generated_Source\PSoC4/TCPWM_1.c **** *
1332:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1333:Generated_Source\PSoC4/TCPWM_1.c **** *   None
1334:Generated_Source\PSoC4/TCPWM_1.c **** *
1335:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1336:Generated_Source\PSoC4/TCPWM_1.c **** *  Masked interrupt source
1337:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1338:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1339:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1340:Generated_Source\PSoC4/TCPWM_1.c **** *
1341:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1342:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSourceMasked(void)
1343:Generated_Source\PSoC4/TCPWM_1.c **** {
 1728              		.loc 1 1343 0
 1729              		.cfi_startproc
 1730 0000 80B5     		push	{r7, lr}
 1731              		.cfi_def_cfa_offset 8
 1732              		.cfi_offset 7, -8
 1733              		.cfi_offset 14, -4
 1734 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 55


 1735              		.cfi_def_cfa_register 7
1344:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_MASKED_REG);
 1736              		.loc 1 1344 0
 1737 0004 024B     		ldr	r3, .L118
 1738 0006 1B68     		ldr	r3, [r3]
1345:Generated_Source\PSoC4/TCPWM_1.c **** }
 1739              		.loc 1 1345 0
 1740 0008 181C     		mov	r0, r3
 1741 000a BD46     		mov	sp, r7
 1742              		@ sp needed
 1743 000c 80BD     		pop	{r7, pc}
 1744              	.L119:
 1745 000e C046     		.align	2
 1746              	.L118:
 1747 0010 3C010540 		.word	1074069820
 1748              		.cfi_endproc
 1749              	.LFE36:
 1750              		.size	TCPWM_1_GetInterruptSourceMasked, .-TCPWM_1_GetInterruptSourceMasked
 1751              		.section	.text.TCPWM_1_GetInterruptSource,"ax",%progbits
 1752              		.align	2
 1753              		.global	TCPWM_1_GetInterruptSource
 1754              		.code	16
 1755              		.thumb_func
 1756              		.type	TCPWM_1_GetInterruptSource, %function
 1757              	TCPWM_1_GetInterruptSource:
 1758              	.LFB37:
1346:Generated_Source\PSoC4/TCPWM_1.c **** 
1347:Generated_Source\PSoC4/TCPWM_1.c **** 
1348:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1349:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_GetInterruptSource
1350:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1351:Generated_Source\PSoC4/TCPWM_1.c **** *
1352:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1353:Generated_Source\PSoC4/TCPWM_1.c **** *  Gets the interrupt requests (without masking).
1354:Generated_Source\PSoC4/TCPWM_1.c **** *
1355:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1356:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1357:Generated_Source\PSoC4/TCPWM_1.c **** *
1358:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1359:Generated_Source\PSoC4/TCPWM_1.c **** *  Interrupt request value
1360:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1361:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1362:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1363:Generated_Source\PSoC4/TCPWM_1.c **** *
1364:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1365:Generated_Source\PSoC4/TCPWM_1.c **** uint32 TCPWM_1_GetInterruptSource(void)
1366:Generated_Source\PSoC4/TCPWM_1.c **** {
 1759              		.loc 1 1366 0
 1760              		.cfi_startproc
 1761 0000 80B5     		push	{r7, lr}
 1762              		.cfi_def_cfa_offset 8
 1763              		.cfi_offset 7, -8
 1764              		.cfi_offset 14, -4
 1765 0002 00AF     		add	r7, sp, #0
 1766              		.cfi_def_cfa_register 7
1367:Generated_Source\PSoC4/TCPWM_1.c ****     return (TCPWM_1_INTERRUPT_REQ_REG);
 1767              		.loc 1 1367 0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 56


 1768 0004 024B     		ldr	r3, .L122
 1769 0006 1B68     		ldr	r3, [r3]
1368:Generated_Source\PSoC4/TCPWM_1.c **** }
 1770              		.loc 1 1368 0
 1771 0008 181C     		mov	r0, r3
 1772 000a BD46     		mov	sp, r7
 1773              		@ sp needed
 1774 000c 80BD     		pop	{r7, pc}
 1775              	.L123:
 1776 000e C046     		.align	2
 1777              	.L122:
 1778 0010 30010540 		.word	1074069808
 1779              		.cfi_endproc
 1780              	.LFE37:
 1781              		.size	TCPWM_1_GetInterruptSource, .-TCPWM_1_GetInterruptSource
 1782              		.section	.text.TCPWM_1_ClearInterrupt,"ax",%progbits
 1783              		.align	2
 1784              		.global	TCPWM_1_ClearInterrupt
 1785              		.code	16
 1786              		.thumb_func
 1787              		.type	TCPWM_1_ClearInterrupt, %function
 1788              	TCPWM_1_ClearInterrupt:
 1789              	.LFB38:
1369:Generated_Source\PSoC4/TCPWM_1.c **** 
1370:Generated_Source\PSoC4/TCPWM_1.c **** 
1371:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1372:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_ClearInterrupt
1373:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1374:Generated_Source\PSoC4/TCPWM_1.c **** *
1375:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1376:Generated_Source\PSoC4/TCPWM_1.c **** *  Clears the interrupt request.
1377:Generated_Source\PSoC4/TCPWM_1.c **** *
1378:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1379:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to clear
1380:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1381:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1382:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1383:Generated_Source\PSoC4/TCPWM_1.c **** *
1384:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1385:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1386:Generated_Source\PSoC4/TCPWM_1.c **** *
1387:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1388:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_ClearInterrupt(uint32 interruptMask)
1389:Generated_Source\PSoC4/TCPWM_1.c **** {
 1790              		.loc 1 1389 0
 1791              		.cfi_startproc
 1792 0000 80B5     		push	{r7, lr}
 1793              		.cfi_def_cfa_offset 8
 1794              		.cfi_offset 7, -8
 1795              		.cfi_offset 14, -4
 1796 0002 82B0     		sub	sp, sp, #8
 1797              		.cfi_def_cfa_offset 16
 1798 0004 00AF     		add	r7, sp, #0
 1799              		.cfi_def_cfa_register 7
 1800 0006 7860     		str	r0, [r7, #4]
1390:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_REQ_REG = interruptMask;
 1801              		.loc 1 1390 0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 57


 1802 0008 024B     		ldr	r3, .L125
 1803 000a 7A68     		ldr	r2, [r7, #4]
 1804 000c 1A60     		str	r2, [r3]
1391:Generated_Source\PSoC4/TCPWM_1.c **** }
 1805              		.loc 1 1391 0
 1806 000e BD46     		mov	sp, r7
 1807 0010 02B0     		add	sp, sp, #8
 1808              		@ sp needed
 1809 0012 80BD     		pop	{r7, pc}
 1810              	.L126:
 1811              		.align	2
 1812              	.L125:
 1813 0014 30010540 		.word	1074069808
 1814              		.cfi_endproc
 1815              	.LFE38:
 1816              		.size	TCPWM_1_ClearInterrupt, .-TCPWM_1_ClearInterrupt
 1817              		.section	.text.TCPWM_1_SetInterrupt,"ax",%progbits
 1818              		.align	2
 1819              		.global	TCPWM_1_SetInterrupt
 1820              		.code	16
 1821              		.thumb_func
 1822              		.type	TCPWM_1_SetInterrupt, %function
 1823              	TCPWM_1_SetInterrupt:
 1824              	.LFB39:
1392:Generated_Source\PSoC4/TCPWM_1.c **** 
1393:Generated_Source\PSoC4/TCPWM_1.c **** 
1394:Generated_Source\PSoC4/TCPWM_1.c **** /*******************************************************************************
1395:Generated_Source\PSoC4/TCPWM_1.c **** * Function Name: TCPWM_1_SetInterrupt
1396:Generated_Source\PSoC4/TCPWM_1.c **** ********************************************************************************
1397:Generated_Source\PSoC4/TCPWM_1.c **** *
1398:Generated_Source\PSoC4/TCPWM_1.c **** * Summary:
1399:Generated_Source\PSoC4/TCPWM_1.c **** *  Sets a software interrupt request.
1400:Generated_Source\PSoC4/TCPWM_1.c **** *
1401:Generated_Source\PSoC4/TCPWM_1.c **** * Parameters:
1402:Generated_Source\PSoC4/TCPWM_1.c **** *   interruptMask: Mask of interrupts to set
1403:Generated_Source\PSoC4/TCPWM_1.c **** *   Values:
1404:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_TC       - Terminal count mask
1405:Generated_Source\PSoC4/TCPWM_1.c **** *     - TCPWM_1_INTR_MASK_CC_MATCH - Compare count / capture mask
1406:Generated_Source\PSoC4/TCPWM_1.c **** *
1407:Generated_Source\PSoC4/TCPWM_1.c **** * Return:
1408:Generated_Source\PSoC4/TCPWM_1.c **** *  None
1409:Generated_Source\PSoC4/TCPWM_1.c **** *
1410:Generated_Source\PSoC4/TCPWM_1.c **** *******************************************************************************/
1411:Generated_Source\PSoC4/TCPWM_1.c **** void TCPWM_1_SetInterrupt(uint32 interruptMask)
1412:Generated_Source\PSoC4/TCPWM_1.c **** {
 1825              		.loc 1 1412 0
 1826              		.cfi_startproc
 1827 0000 80B5     		push	{r7, lr}
 1828              		.cfi_def_cfa_offset 8
 1829              		.cfi_offset 7, -8
 1830              		.cfi_offset 14, -4
 1831 0002 82B0     		sub	sp, sp, #8
 1832              		.cfi_def_cfa_offset 16
 1833 0004 00AF     		add	r7, sp, #0
 1834              		.cfi_def_cfa_register 7
 1835 0006 7860     		str	r0, [r7, #4]
1413:Generated_Source\PSoC4/TCPWM_1.c ****     TCPWM_1_INTERRUPT_SET_REG = interruptMask;
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 58


 1836              		.loc 1 1413 0
 1837 0008 024B     		ldr	r3, .L128
 1838 000a 7A68     		ldr	r2, [r7, #4]
 1839 000c 1A60     		str	r2, [r3]
1414:Generated_Source\PSoC4/TCPWM_1.c **** }
 1840              		.loc 1 1414 0
 1841 000e BD46     		mov	sp, r7
 1842 0010 02B0     		add	sp, sp, #8
 1843              		@ sp needed
 1844 0012 80BD     		pop	{r7, pc}
 1845              	.L129:
 1846              		.align	2
 1847              	.L128:
 1848 0014 34010540 		.word	1074069812
 1849              		.cfi_endproc
 1850              	.LFE39:
 1851              		.size	TCPWM_1_SetInterrupt, .-TCPWM_1_SetInterrupt
 1852              		.text
 1853              	.Letext0:
 1854              		.file 2 "Generated_Source\\PSoC4\\cytypes.h"
 1855              		.section	.debug_info,"",%progbits
 1856              	.Ldebug_info0:
 1857 0000 F0060000 		.4byte	0x6f0
 1858 0004 0400     		.2byte	0x4
 1859 0006 00000000 		.4byte	.Ldebug_abbrev0
 1860 000a 04       		.byte	0x4
 1861 000b 01       		.uleb128 0x1
 1862 000c 35050000 		.4byte	.LASF76
 1863 0010 01       		.byte	0x1
 1864 0011 51030000 		.4byte	.LASF77
 1865 0015 50000000 		.4byte	.LASF78
 1866 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1867 001d 00000000 		.4byte	0
 1868 0021 00000000 		.4byte	.Ldebug_line0
 1869 0025 02       		.uleb128 0x2
 1870 0026 01       		.byte	0x1
 1871 0027 06       		.byte	0x6
 1872 0028 2D010000 		.4byte	.LASF0
 1873 002c 02       		.uleb128 0x2
 1874 002d 01       		.byte	0x1
 1875 002e 08       		.byte	0x8
 1876 002f 9D030000 		.4byte	.LASF1
 1877 0033 02       		.uleb128 0x2
 1878 0034 02       		.byte	0x2
 1879 0035 05       		.byte	0x5
 1880 0036 EC030000 		.4byte	.LASF2
 1881 003a 02       		.uleb128 0x2
 1882 003b 02       		.byte	0x2
 1883 003c 07       		.byte	0x7
 1884 003d 55020000 		.4byte	.LASF3
 1885 0041 02       		.uleb128 0x2
 1886 0042 04       		.byte	0x4
 1887 0043 05       		.byte	0x5
 1888 0044 54010000 		.4byte	.LASF4
 1889 0048 02       		.uleb128 0x2
 1890 0049 04       		.byte	0x4
 1891 004a 07       		.byte	0x7
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 59


 1892 004b 3A020000 		.4byte	.LASF5
 1893 004f 02       		.uleb128 0x2
 1894 0050 08       		.byte	0x8
 1895 0051 05       		.byte	0x5
 1896 0052 1F010000 		.4byte	.LASF6
 1897 0056 02       		.uleb128 0x2
 1898 0057 08       		.byte	0x8
 1899 0058 07       		.byte	0x7
 1900 0059 D4000000 		.4byte	.LASF7
 1901 005d 03       		.uleb128 0x3
 1902 005e 04       		.byte	0x4
 1903 005f 05       		.byte	0x5
 1904 0060 696E7400 		.ascii	"int\000"
 1905 0064 02       		.uleb128 0x2
 1906 0065 04       		.byte	0x4
 1907 0066 07       		.byte	0x7
 1908 0067 0E020000 		.4byte	.LASF8
 1909 006b 04       		.uleb128 0x4
 1910 006c 75010000 		.4byte	.LASF9
 1911 0070 02       		.byte	0x2
 1912 0071 B901     		.2byte	0x1b9
 1913 0073 2C000000 		.4byte	0x2c
 1914 0077 04       		.uleb128 0x4
 1915 0078 99010000 		.4byte	.LASF10
 1916 007c 02       		.byte	0x2
 1917 007d BB01     		.2byte	0x1bb
 1918 007f 48000000 		.4byte	0x48
 1919 0083 02       		.uleb128 0x2
 1920 0084 04       		.byte	0x4
 1921 0085 04       		.byte	0x4
 1922 0086 41030000 		.4byte	.LASF11
 1923 008a 02       		.uleb128 0x2
 1924 008b 08       		.byte	0x8
 1925 008c 04       		.byte	0x4
 1926 008d 92010000 		.4byte	.LASF12
 1927 0091 02       		.uleb128 0x2
 1928 0092 01       		.byte	0x1
 1929 0093 08       		.byte	0x8
 1930 0094 5A040000 		.4byte	.LASF13
 1931 0098 04       		.uleb128 0x4
 1932 0099 9E020000 		.4byte	.LASF14
 1933 009d 02       		.byte	0x2
 1934 009e 6502     		.2byte	0x265
 1935 00a0 A4000000 		.4byte	0xa4
 1936 00a4 05       		.uleb128 0x5
 1937 00a5 77000000 		.4byte	0x77
 1938 00a9 02       		.uleb128 0x2
 1939 00aa 04       		.byte	0x4
 1940 00ab 07       		.byte	0x7
 1941 00ac C7020000 		.4byte	.LASF15
 1942 00b0 06       		.uleb128 0x6
 1943 00b1 DF020000 		.4byte	.LASF16
 1944 00b5 01       		.byte	0x1
 1945 00b6 26       		.byte	0x26
 1946 00b7 00000000 		.4byte	.LFB0
 1947 00bb 08000000 		.4byte	.LFE0-.LFB0
 1948 00bf 01       		.uleb128 0x1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 60


 1949 00c0 9C       		.byte	0x9c
 1950 00c1 07       		.uleb128 0x7
 1951 00c2 B8020000 		.4byte	.LASF18
 1952 00c6 01       		.byte	0x1
 1953 00c7 B1       		.byte	0xb1
 1954 00c8 00000000 		.4byte	.LFB1
 1955 00cc 30000000 		.4byte	.LFE1-.LFB1
 1956 00d0 01       		.uleb128 0x1
 1957 00d1 9C       		.byte	0x9c
 1958 00d2 E5000000 		.4byte	0xe5
 1959 00d6 08       		.uleb128 0x8
 1960 00d7 BA040000 		.4byte	.LASF20
 1961 00db 01       		.byte	0x1
 1962 00dc B3       		.byte	0xb3
 1963 00dd 6B000000 		.4byte	0x6b
 1964 00e1 02       		.uleb128 0x2
 1965 00e2 91       		.byte	0x91
 1966 00e3 6F       		.sleb128 -17
 1967 00e4 00       		.byte	0
 1968 00e5 09       		.uleb128 0x9
 1969 00e6 1E030000 		.4byte	.LASF17
 1970 00ea 01       		.byte	0x1
 1971 00eb E6       		.byte	0xe6
 1972 00ec 00000000 		.4byte	.LFB2
 1973 00f0 24000000 		.4byte	.LFE2-.LFB2
 1974 00f4 01       		.uleb128 0x1
 1975 00f5 9C       		.byte	0x9c
 1976 00f6 0A       		.uleb128 0xa
 1977 00f7 FB000000 		.4byte	.LASF19
 1978 00fb 01       		.byte	0x1
 1979 00fc 0001     		.2byte	0x100
 1980 00fe 00000000 		.4byte	.LFB3
 1981 0102 30000000 		.4byte	.LFE3-.LFB3
 1982 0106 01       		.uleb128 0x1
 1983 0107 9C       		.byte	0x9c
 1984 0108 1C010000 		.4byte	0x11c
 1985 010c 0B       		.uleb128 0xb
 1986 010d BA040000 		.4byte	.LASF20
 1987 0111 01       		.byte	0x1
 1988 0112 0201     		.2byte	0x102
 1989 0114 6B000000 		.4byte	0x6b
 1990 0118 02       		.uleb128 0x2
 1991 0119 91       		.byte	0x91
 1992 011a 6F       		.sleb128 -17
 1993 011b 00       		.byte	0
 1994 011c 0A       		.uleb128 0xa
 1995 011d 2E000000 		.4byte	.LASF21
 1996 0121 01       		.byte	0x1
 1997 0122 2501     		.2byte	0x125
 1998 0124 00000000 		.4byte	.LFB4
 1999 0128 48000000 		.4byte	.LFE4-.LFB4
 2000 012c 01       		.uleb128 0x1
 2001 012d 9C       		.byte	0x9c
 2002 012e 51010000 		.4byte	0x151
 2003 0132 0C       		.uleb128 0xc
 2004 0133 5F040000 		.4byte	.LASF23
 2005 0137 01       		.byte	0x1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 61


 2006 0138 2501     		.2byte	0x125
 2007 013a 77000000 		.4byte	0x77
 2008 013e 02       		.uleb128 0x2
 2009 013f 91       		.byte	0x91
 2010 0140 64       		.sleb128 -28
 2011 0141 0B       		.uleb128 0xb
 2012 0142 BA040000 		.4byte	.LASF20
 2013 0146 01       		.byte	0x1
 2014 0147 2701     		.2byte	0x127
 2015 0149 6B000000 		.4byte	0x6b
 2016 014d 02       		.uleb128 0x2
 2017 014e 91       		.byte	0x91
 2018 014f 6F       		.sleb128 -17
 2019 0150 00       		.byte	0
 2020 0151 0A       		.uleb128 0xa
 2021 0152 3E000000 		.4byte	.LASF22
 2022 0156 01       		.byte	0x1
 2023 0157 4601     		.2byte	0x146
 2024 0159 00000000 		.4byte	.LFB5
 2025 015d 48000000 		.4byte	.LFE5-.LFB5
 2026 0161 01       		.uleb128 0x1
 2027 0162 9C       		.byte	0x9c
 2028 0163 86010000 		.4byte	0x186
 2029 0167 0C       		.uleb128 0xc
 2030 0168 4D010000 		.4byte	.LASF24
 2031 016c 01       		.byte	0x1
 2032 016d 4601     		.2byte	0x146
 2033 016f 77000000 		.4byte	0x77
 2034 0173 02       		.uleb128 0x2
 2035 0174 91       		.byte	0x91
 2036 0175 64       		.sleb128 -28
 2037 0176 0B       		.uleb128 0xb
 2038 0177 BA040000 		.4byte	.LASF20
 2039 017b 01       		.byte	0x1
 2040 017c 4801     		.2byte	0x148
 2041 017e 6B000000 		.4byte	0x6b
 2042 0182 02       		.uleb128 0x2
 2043 0183 91       		.byte	0x91
 2044 0184 6F       		.sleb128 -17
 2045 0185 00       		.byte	0
 2046 0186 0A       		.uleb128 0xa
 2047 0187 AA000000 		.4byte	.LASF25
 2048 018b 01       		.byte	0x1
 2049 018c 6B01     		.2byte	0x16b
 2050 018e 00000000 		.4byte	.LFB6
 2051 0192 48000000 		.4byte	.LFE6-.LFB6
 2052 0196 01       		.uleb128 0x1
 2053 0197 9C       		.byte	0x9c
 2054 0198 BB010000 		.4byte	0x1bb
 2055 019c 0C       		.uleb128 0xc
 2056 019d 47030000 		.4byte	.LASF26
 2057 01a1 01       		.byte	0x1
 2058 01a2 6B01     		.2byte	0x16b
 2059 01a4 77000000 		.4byte	0x77
 2060 01a8 02       		.uleb128 0x2
 2061 01a9 91       		.byte	0x91
 2062 01aa 64       		.sleb128 -28
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 62


 2063 01ab 0B       		.uleb128 0xb
 2064 01ac BA040000 		.4byte	.LASF20
 2065 01b0 01       		.byte	0x1
 2066 01b1 6D01     		.2byte	0x16d
 2067 01b3 6B000000 		.4byte	0x6b
 2068 01b7 02       		.uleb128 0x2
 2069 01b8 91       		.byte	0x91
 2070 01b9 6F       		.sleb128 -17
 2071 01ba 00       		.byte	0
 2072 01bb 0A       		.uleb128 0xa
 2073 01bc 8B020000 		.4byte	.LASF27
 2074 01c0 01       		.byte	0x1
 2075 01c1 8B01     		.2byte	0x18b
 2076 01c3 00000000 		.4byte	.LFB7
 2077 01c7 4C000000 		.4byte	.LFE7-.LFB7
 2078 01cb 01       		.uleb128 0x1
 2079 01cc 9C       		.byte	0x9c
 2080 01cd F0010000 		.4byte	0x1f0
 2081 01d1 0C       		.uleb128 0xc
 2082 01d2 68020000 		.4byte	.LASF28
 2083 01d6 01       		.byte	0x1
 2084 01d7 8B01     		.2byte	0x18b
 2085 01d9 77000000 		.4byte	0x77
 2086 01dd 02       		.uleb128 0x2
 2087 01de 91       		.byte	0x91
 2088 01df 64       		.sleb128 -28
 2089 01e0 0B       		.uleb128 0xb
 2090 01e1 BA040000 		.4byte	.LASF20
 2091 01e5 01       		.byte	0x1
 2092 01e6 8D01     		.2byte	0x18d
 2093 01e8 6B000000 		.4byte	0x6b
 2094 01ec 02       		.uleb128 0x2
 2095 01ed 91       		.byte	0x91
 2096 01ee 6F       		.sleb128 -17
 2097 01ef 00       		.byte	0
 2098 01f0 0D       		.uleb128 0xd
 2099 01f1 E2040000 		.4byte	.LASF29
 2100 01f5 01       		.byte	0x1
 2101 01f6 C101     		.2byte	0x1c1
 2102 01f8 00000000 		.4byte	.LFB8
 2103 01fc 1C000000 		.4byte	.LFE8-.LFB8
 2104 0200 01       		.uleb128 0x1
 2105 0201 9C       		.byte	0x9c
 2106 0202 16020000 		.4byte	0x216
 2107 0206 0C       		.uleb128 0xc
 2108 0207 4C020000 		.4byte	.LASF30
 2109 020b 01       		.byte	0x1
 2110 020c C101     		.2byte	0x1c1
 2111 020e 77000000 		.4byte	0x77
 2112 0212 02       		.uleb128 0x2
 2113 0213 91       		.byte	0x91
 2114 0214 74       		.sleb128 -12
 2115 0215 00       		.byte	0
 2116 0216 0A       		.uleb128 0xa
 2117 0217 00000000 		.4byte	.LASF31
 2118 021b 01       		.byte	0x1
 2119 021c E501     		.2byte	0x1e5
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 63


 2120 021e 00000000 		.4byte	.LFB9
 2121 0222 48000000 		.4byte	.LFE9-.LFB9
 2122 0226 01       		.uleb128 0x1
 2123 0227 9C       		.byte	0x9c
 2124 0228 4B020000 		.4byte	0x24b
 2125 022c 0C       		.uleb128 0xc
 2126 022d D0020000 		.4byte	.LASF32
 2127 0231 01       		.byte	0x1
 2128 0232 E501     		.2byte	0x1e5
 2129 0234 77000000 		.4byte	0x77
 2130 0238 02       		.uleb128 0x2
 2131 0239 91       		.byte	0x91
 2132 023a 64       		.sleb128 -28
 2133 023b 0B       		.uleb128 0xb
 2134 023c BA040000 		.4byte	.LASF20
 2135 0240 01       		.byte	0x1
 2136 0241 E701     		.2byte	0x1e7
 2137 0243 6B000000 		.4byte	0x6b
 2138 0247 02       		.uleb128 0x2
 2139 0248 91       		.byte	0x91
 2140 0249 6F       		.sleb128 -17
 2141 024a 00       		.byte	0
 2142 024b 0A       		.uleb128 0xa
 2143 024c B7010000 		.4byte	.LASF33
 2144 0250 01       		.byte	0x1
 2145 0251 0702     		.2byte	0x207
 2146 0253 00000000 		.4byte	.LFB10
 2147 0257 48000000 		.4byte	.LFE10-.LFB10
 2148 025b 01       		.uleb128 0x1
 2149 025c 9C       		.byte	0x9c
 2150 025d 80020000 		.4byte	0x280
 2151 0261 0C       		.uleb128 0xc
 2152 0262 C0030000 		.4byte	.LASF34
 2153 0266 01       		.byte	0x1
 2154 0267 0702     		.2byte	0x207
 2155 0269 77000000 		.4byte	0x77
 2156 026d 02       		.uleb128 0x2
 2157 026e 91       		.byte	0x91
 2158 026f 64       		.sleb128 -28
 2159 0270 0B       		.uleb128 0xb
 2160 0271 BA040000 		.4byte	.LASF20
 2161 0275 01       		.byte	0x1
 2162 0276 0902     		.2byte	0x209
 2163 0278 6B000000 		.4byte	0x6b
 2164 027c 02       		.uleb128 0x2
 2165 027d 91       		.byte	0x91
 2166 027e 6F       		.sleb128 -17
 2167 027f 00       		.byte	0
 2168 0280 0A       		.uleb128 0xa
 2169 0281 EC020000 		.4byte	.LASF35
 2170 0285 01       		.byte	0x1
 2171 0286 2802     		.2byte	0x228
 2172 0288 00000000 		.4byte	.LFB11
 2173 028c 4C000000 		.4byte	.LFE11-.LFB11
 2174 0290 01       		.uleb128 0x1
 2175 0291 9C       		.byte	0x9c
 2176 0292 B5020000 		.4byte	0x2b5
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 64


 2177 0296 0C       		.uleb128 0xc
 2178 0297 E4010000 		.4byte	.LASF36
 2179 029b 01       		.byte	0x1
 2180 029c 2802     		.2byte	0x228
 2181 029e 77000000 		.4byte	0x77
 2182 02a2 02       		.uleb128 0x2
 2183 02a3 91       		.byte	0x91
 2184 02a4 64       		.sleb128 -28
 2185 02a5 0B       		.uleb128 0xb
 2186 02a6 BA040000 		.4byte	.LASF20
 2187 02aa 01       		.byte	0x1
 2188 02ab 2A02     		.2byte	0x22a
 2189 02ad 6B000000 		.4byte	0x6b
 2190 02b1 02       		.uleb128 0x2
 2191 02b2 91       		.byte	0x91
 2192 02b3 6F       		.sleb128 -17
 2193 02b4 00       		.byte	0
 2194 02b5 0A       		.uleb128 0xa
 2195 02b6 F5040000 		.4byte	.LASF37
 2196 02ba 01       		.byte	0x1
 2197 02bb 4902     		.2byte	0x249
 2198 02bd 00000000 		.4byte	.LFB12
 2199 02c1 48000000 		.4byte	.LFE12-.LFB12
 2200 02c5 01       		.uleb128 0x1
 2201 02c6 9C       		.byte	0x9c
 2202 02c7 EA020000 		.4byte	0x2ea
 2203 02cb 0C       		.uleb128 0xc
 2204 02cc B2010000 		.4byte	.LASF38
 2205 02d0 01       		.byte	0x1
 2206 02d1 4902     		.2byte	0x249
 2207 02d3 77000000 		.4byte	0x77
 2208 02d7 02       		.uleb128 0x2
 2209 02d8 91       		.byte	0x91
 2210 02d9 64       		.sleb128 -28
 2211 02da 0B       		.uleb128 0xb
 2212 02db BA040000 		.4byte	.LASF20
 2213 02df 01       		.byte	0x1
 2214 02e0 4B02     		.2byte	0x24b
 2215 02e2 6B000000 		.4byte	0x6b
 2216 02e6 02       		.uleb128 0x2
 2217 02e7 91       		.byte	0x91
 2218 02e8 6F       		.sleb128 -17
 2219 02e9 00       		.byte	0
 2220 02ea 0D       		.uleb128 0xd
 2221 02eb BF000000 		.4byte	.LASF39
 2222 02ef 01       		.byte	0x1
 2223 02f0 6702     		.2byte	0x267
 2224 02f2 00000000 		.4byte	.LFB13
 2225 02f6 1C000000 		.4byte	.LFE13-.LFB13
 2226 02fa 01       		.uleb128 0x1
 2227 02fb 9C       		.byte	0x9c
 2228 02fc 10030000 		.4byte	0x310
 2229 0300 0C       		.uleb128 0xc
 2230 0301 A0010000 		.4byte	.LASF40
 2231 0305 01       		.byte	0x1
 2232 0306 6702     		.2byte	0x267
 2233 0308 77000000 		.4byte	0x77
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 65


 2234 030c 02       		.uleb128 0x2
 2235 030d 91       		.byte	0x91
 2236 030e 74       		.sleb128 -12
 2237 030f 00       		.byte	0
 2238 0310 0E       		.uleb128 0xe
 2239 0311 D0010000 		.4byte	.LASF45
 2240 0315 01       		.byte	0x1
 2241 0316 7B02     		.2byte	0x27b
 2242 0318 77000000 		.4byte	0x77
 2243 031c 00000000 		.4byte	.LFB14
 2244 0320 18000000 		.4byte	.LFE14-.LFB14
 2245 0324 01       		.uleb128 0x1
 2246 0325 9C       		.byte	0x9c
 2247 0326 0A       		.uleb128 0xa
 2248 0327 CB040000 		.4byte	.LASF41
 2249 032b 01       		.byte	0x1
 2250 032c 9802     		.2byte	0x298
 2251 032e 00000000 		.4byte	.LFB15
 2252 0332 48000000 		.4byte	.LFE15-.LFB15
 2253 0336 01       		.uleb128 0x1
 2254 0337 9C       		.byte	0x9c
 2255 0338 5B030000 		.4byte	0x35b
 2256 033c 0C       		.uleb128 0xc
 2257 033d 78040000 		.4byte	.LASF42
 2258 0341 01       		.byte	0x1
 2259 0342 9802     		.2byte	0x298
 2260 0344 77000000 		.4byte	0x77
 2261 0348 02       		.uleb128 0x2
 2262 0349 91       		.byte	0x91
 2263 034a 64       		.sleb128 -28
 2264 034b 0B       		.uleb128 0xb
 2265 034c BA040000 		.4byte	.LASF20
 2266 0350 01       		.byte	0x1
 2267 0351 9A02     		.2byte	0x29a
 2268 0353 6B000000 		.4byte	0x6b
 2269 0357 02       		.uleb128 0x2
 2270 0358 91       		.byte	0x91
 2271 0359 6F       		.sleb128 -17
 2272 035a 00       		.byte	0
 2273 035b 0D       		.uleb128 0xd
 2274 035c 72030000 		.4byte	.LASF43
 2275 0360 01       		.byte	0x1
 2276 0361 B502     		.2byte	0x2b5
 2277 0363 00000000 		.4byte	.LFB16
 2278 0367 1C000000 		.4byte	.LFE16-.LFB16
 2279 036b 01       		.uleb128 0x1
 2280 036c 9C       		.byte	0x9c
 2281 036d 81030000 		.4byte	0x381
 2282 0371 0C       		.uleb128 0xc
 2283 0372 84040000 		.4byte	.LASF44
 2284 0376 01       		.byte	0x1
 2285 0377 B502     		.2byte	0x2b5
 2286 0379 77000000 		.4byte	0x77
 2287 037d 02       		.uleb128 0x2
 2288 037e 91       		.byte	0x91
 2289 037f 74       		.sleb128 -12
 2290 0380 00       		.byte	0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 66


 2291 0381 0E       		.uleb128 0xe
 2292 0382 31040000 		.4byte	.LASF46
 2293 0386 01       		.byte	0x1
 2294 0387 C902     		.2byte	0x2c9
 2295 0389 77000000 		.4byte	0x77
 2296 038d 00000000 		.4byte	.LFB17
 2297 0391 18000000 		.4byte	.LFE17-.LFB17
 2298 0395 01       		.uleb128 0x1
 2299 0396 9C       		.byte	0x9c
 2300 0397 0A       		.uleb128 0xa
 2301 0398 08010000 		.4byte	.LASF47
 2302 039c 01       		.byte	0x1
 2303 039d E302     		.2byte	0x2e3
 2304 039f 00000000 		.4byte	.LFB18
 2305 03a3 48000000 		.4byte	.LFE18-.LFB18
 2306 03a7 01       		.uleb128 0x1
 2307 03a8 9C       		.byte	0x9c
 2308 03a9 CC030000 		.4byte	0x3cc
 2309 03ad 0C       		.uleb128 0xc
 2310 03ae 8B040000 		.4byte	.LASF48
 2311 03b2 01       		.byte	0x1
 2312 03b3 E302     		.2byte	0x2e3
 2313 03b5 77000000 		.4byte	0x77
 2314 03b9 02       		.uleb128 0x2
 2315 03ba 91       		.byte	0x91
 2316 03bb 64       		.sleb128 -28
 2317 03bc 0B       		.uleb128 0xb
 2318 03bd BA040000 		.4byte	.LASF20
 2319 03c1 01       		.byte	0x1
 2320 03c2 E502     		.2byte	0x2e5
 2321 03c4 6B000000 		.4byte	0x6b
 2322 03c8 02       		.uleb128 0x2
 2323 03c9 91       		.byte	0x91
 2324 03ca 6F       		.sleb128 -17
 2325 03cb 00       		.byte	0
 2326 03cc 0D       		.uleb128 0xd
 2327 03cd 86030000 		.4byte	.LASF49
 2328 03d1 01       		.byte	0x1
 2329 03d2 FE02     		.2byte	0x2fe
 2330 03d4 00000000 		.4byte	.LFB19
 2331 03d8 1C000000 		.4byte	.LFE19-.LFB19
 2332 03dc 01       		.uleb128 0x1
 2333 03dd 9C       		.byte	0x9c
 2334 03de F2030000 		.4byte	0x3f2
 2335 03e2 0C       		.uleb128 0xc
 2336 03e3 C3050000 		.4byte	.LASF50
 2337 03e7 01       		.byte	0x1
 2338 03e8 FE02     		.2byte	0x2fe
 2339 03ea 77000000 		.4byte	0x77
 2340 03ee 02       		.uleb128 0x2
 2341 03ef 91       		.byte	0x91
 2342 03f0 74       		.sleb128 -12
 2343 03f1 00       		.byte	0
 2344 03f2 0E       		.uleb128 0xe
 2345 03f3 F6030000 		.4byte	.LASF51
 2346 03f7 01       		.byte	0x1
 2347 03f8 1203     		.2byte	0x312
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 67


 2348 03fa 77000000 		.4byte	0x77
 2349 03fe 00000000 		.4byte	.LFB20
 2350 0402 18000000 		.4byte	.LFE20-.LFB20
 2351 0406 01       		.uleb128 0x1
 2352 0407 9C       		.byte	0x9c
 2353 0408 0A       		.uleb128 0xa
 2354 0409 44040000 		.4byte	.LASF52
 2355 040d 01       		.byte	0x1
 2356 040e 2C03     		.2byte	0x32c
 2357 0410 00000000 		.4byte	.LFB21
 2358 0414 48000000 		.4byte	.LFE21-.LFB21
 2359 0418 01       		.uleb128 0x1
 2360 0419 9C       		.byte	0x9c
 2361 041a 3D040000 		.4byte	0x43d
 2362 041e 0C       		.uleb128 0xc
 2363 041f 8B040000 		.4byte	.LASF48
 2364 0423 01       		.byte	0x1
 2365 0424 2C03     		.2byte	0x32c
 2366 0426 77000000 		.4byte	0x77
 2367 042a 02       		.uleb128 0x2
 2368 042b 91       		.byte	0x91
 2369 042c 64       		.sleb128 -28
 2370 042d 0B       		.uleb128 0xb
 2371 042e BA040000 		.4byte	.LASF20
 2372 0432 01       		.byte	0x1
 2373 0433 2E03     		.2byte	0x32e
 2374 0435 6B000000 		.4byte	0x6b
 2375 0439 02       		.uleb128 0x2
 2376 043a 91       		.byte	0x91
 2377 043b 6F       		.sleb128 -17
 2378 043c 00       		.byte	0
 2379 043d 0D       		.uleb128 0xd
 2380 043e AB030000 		.4byte	.LASF53
 2381 0442 01       		.byte	0x1
 2382 0443 5103     		.2byte	0x351
 2383 0445 00000000 		.4byte	.LFB22
 2384 0449 1C000000 		.4byte	.LFE22-.LFB22
 2385 044d 01       		.uleb128 0x1
 2386 044e 9C       		.byte	0x9c
 2387 044f 63040000 		.4byte	0x463
 2388 0453 0C       		.uleb128 0xc
 2389 0454 16030000 		.4byte	.LASF54
 2390 0458 01       		.byte	0x1
 2391 0459 5103     		.2byte	0x351
 2392 045b 77000000 		.4byte	0x77
 2393 045f 02       		.uleb128 0x2
 2394 0460 91       		.byte	0x91
 2395 0461 74       		.sleb128 -12
 2396 0462 00       		.byte	0
 2397 0463 0E       		.uleb128 0xe
 2398 0464 39010000 		.4byte	.LASF55
 2399 0468 01       		.byte	0x1
 2400 0469 8403     		.2byte	0x384
 2401 046b 77000000 		.4byte	0x77
 2402 046f 00000000 		.4byte	.LFB23
 2403 0473 18000000 		.4byte	.LFE23-.LFB23
 2404 0477 01       		.uleb128 0x1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 68


 2405 0478 9C       		.byte	0x9c
 2406 0479 0D       		.uleb128 0xd
 2407 047a 5D010000 		.4byte	.LASF56
 2408 047e 01       		.byte	0x1
 2409 047f BA03     		.2byte	0x3ba
 2410 0481 00000000 		.4byte	.LFB24
 2411 0485 1C000000 		.4byte	.LFE24-.LFB24
 2412 0489 01       		.uleb128 0x1
 2413 048a 9C       		.byte	0x9c
 2414 048b 9F040000 		.4byte	0x49f
 2415 048f 0C       		.uleb128 0xc
 2416 0490 AF040000 		.4byte	.LASF57
 2417 0494 01       		.byte	0x1
 2418 0495 BA03     		.2byte	0x3ba
 2419 0497 77000000 		.4byte	0x77
 2420 049b 02       		.uleb128 0x2
 2421 049c 91       		.byte	0x91
 2422 049d 74       		.sleb128 -12
 2423 049e 00       		.byte	0
 2424 049f 0E       		.uleb128 0xe
 2425 04a0 1A040000 		.4byte	.LASF58
 2426 04a4 01       		.byte	0x1
 2427 04a5 E803     		.2byte	0x3e8
 2428 04a7 77000000 		.4byte	0x77
 2429 04ab 00000000 		.4byte	.LFB25
 2430 04af 18000000 		.4byte	.LFE25-.LFB25
 2431 04b3 01       		.uleb128 0x1
 2432 04b4 9C       		.byte	0x9c
 2433 04b5 0E       		.uleb128 0xe
 2434 04b6 64040000 		.4byte	.LASF59
 2435 04ba 01       		.byte	0x1
 2436 04bb 1604     		.2byte	0x416
 2437 04bd 77000000 		.4byte	0x77
 2438 04c1 00000000 		.4byte	.LFB26
 2439 04c5 18000000 		.4byte	.LFE26-.LFB26
 2440 04c9 01       		.uleb128 0x1
 2441 04ca 9C       		.byte	0x9c
 2442 04cb 0E       		.uleb128 0xe
 2443 04cc 17000000 		.4byte	.LASF60
 2444 04d0 01       		.byte	0x1
 2445 04d1 2B04     		.2byte	0x42b
 2446 04d3 77000000 		.4byte	0x77
 2447 04d7 00000000 		.4byte	.LFB27
 2448 04db 18000000 		.4byte	.LFE27-.LFB27
 2449 04df 01       		.uleb128 0x1
 2450 04e0 9C       		.byte	0x9c
 2451 04e1 0A       		.uleb128 0xa
 2452 04e2 CD050000 		.4byte	.LASF61
 2453 04e6 01       		.byte	0x1
 2454 04e7 4604     		.2byte	0x446
 2455 04e9 00000000 		.4byte	.LFB28
 2456 04ed 44000000 		.4byte	.LFE28-.LFB28
 2457 04f1 01       		.uleb128 0x1
 2458 04f2 9C       		.byte	0x9c
 2459 04f3 16050000 		.4byte	0x516
 2460 04f7 0C       		.uleb128 0xc
 2461 04f8 A6010000 		.4byte	.LASF62
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 69


 2462 04fc 01       		.byte	0x1
 2463 04fd 4604     		.2byte	0x446
 2464 04ff 77000000 		.4byte	0x77
 2465 0503 02       		.uleb128 0x2
 2466 0504 91       		.byte	0x91
 2467 0505 64       		.sleb128 -28
 2468 0506 0B       		.uleb128 0xb
 2469 0507 BA040000 		.4byte	.LASF20
 2470 050b 01       		.byte	0x1
 2471 050c 4804     		.2byte	0x448
 2472 050e 6B000000 		.4byte	0x6b
 2473 0512 02       		.uleb128 0x2
 2474 0513 91       		.byte	0x91
 2475 0514 6F       		.sleb128 -17
 2476 0515 00       		.byte	0
 2477 0516 0A       		.uleb128 0xa
 2478 0517 0A050000 		.4byte	.LASF63
 2479 051b 01       		.byte	0x1
 2480 051c 6704     		.2byte	0x467
 2481 051e 00000000 		.4byte	.LFB29
 2482 0522 44000000 		.4byte	.LFE29-.LFB29
 2483 0526 01       		.uleb128 0x1
 2484 0527 9C       		.byte	0x9c
 2485 0528 4B050000 		.4byte	0x54b
 2486 052c 0C       		.uleb128 0xc
 2487 052d A6010000 		.4byte	.LASF62
 2488 0531 01       		.byte	0x1
 2489 0532 6704     		.2byte	0x467
 2490 0534 77000000 		.4byte	0x77
 2491 0538 02       		.uleb128 0x2
 2492 0539 91       		.byte	0x91
 2493 053a 64       		.sleb128 -28
 2494 053b 0B       		.uleb128 0xb
 2495 053c BA040000 		.4byte	.LASF20
 2496 0540 01       		.byte	0x1
 2497 0541 6904     		.2byte	0x469
 2498 0543 6B000000 		.4byte	0x6b
 2499 0547 02       		.uleb128 0x2
 2500 0548 91       		.byte	0x91
 2501 0549 6F       		.sleb128 -17
 2502 054a 00       		.byte	0
 2503 054b 0A       		.uleb128 0xa
 2504 054c 20050000 		.4byte	.LASF64
 2505 0550 01       		.byte	0x1
 2506 0551 8804     		.2byte	0x488
 2507 0553 00000000 		.4byte	.LFB30
 2508 0557 48000000 		.4byte	.LFE30-.LFB30
 2509 055b 01       		.uleb128 0x1
 2510 055c 9C       		.byte	0x9c
 2511 055d 80050000 		.4byte	0x580
 2512 0561 0C       		.uleb128 0xc
 2513 0562 A6010000 		.4byte	.LASF62
 2514 0566 01       		.byte	0x1
 2515 0567 8804     		.2byte	0x488
 2516 0569 77000000 		.4byte	0x77
 2517 056d 02       		.uleb128 0x2
 2518 056e 91       		.byte	0x91
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 70


 2519 056f 64       		.sleb128 -28
 2520 0570 0B       		.uleb128 0xb
 2521 0571 BA040000 		.4byte	.LASF20
 2522 0575 01       		.byte	0x1
 2523 0576 8A04     		.2byte	0x48a
 2524 0578 6B000000 		.4byte	0x6b
 2525 057c 02       		.uleb128 0x2
 2526 057d 91       		.byte	0x91
 2527 057e 6F       		.sleb128 -17
 2528 057f 00       		.byte	0
 2529 0580 0A       		.uleb128 0xa
 2530 0581 A4020000 		.4byte	.LASF65
 2531 0585 01       		.byte	0x1
 2532 0586 A804     		.2byte	0x4a8
 2533 0588 00000000 		.4byte	.LFB31
 2534 058c 44000000 		.4byte	.LFE31-.LFB31
 2535 0590 01       		.uleb128 0x1
 2536 0591 9C       		.byte	0x9c
 2537 0592 B5050000 		.4byte	0x5b5
 2538 0596 0C       		.uleb128 0xc
 2539 0597 A6010000 		.4byte	.LASF62
 2540 059b 01       		.byte	0x1
 2541 059c A804     		.2byte	0x4a8
 2542 059e 77000000 		.4byte	0x77
 2543 05a2 02       		.uleb128 0x2
 2544 05a3 91       		.byte	0x91
 2545 05a4 64       		.sleb128 -28
 2546 05a5 0B       		.uleb128 0xb
 2547 05a6 BA040000 		.4byte	.LASF20
 2548 05aa 01       		.byte	0x1
 2549 05ab AA04     		.2byte	0x4aa
 2550 05ad 6B000000 		.4byte	0x6b
 2551 05b1 02       		.uleb128 0x2
 2552 05b2 91       		.byte	0x91
 2553 05b3 6F       		.sleb128 -17
 2554 05b4 00       		.byte	0
 2555 05b5 0A       		.uleb128 0xa
 2556 05b6 2C030000 		.4byte	.LASF66
 2557 05ba 01       		.byte	0x1
 2558 05bb C904     		.2byte	0x4c9
 2559 05bd 00000000 		.4byte	.LFB32
 2560 05c1 44000000 		.4byte	.LFE32-.LFB32
 2561 05c5 01       		.uleb128 0x1
 2562 05c6 9C       		.byte	0x9c
 2563 05c7 EA050000 		.4byte	0x5ea
 2564 05cb 0C       		.uleb128 0xc
 2565 05cc A6010000 		.4byte	.LASF62
 2566 05d0 01       		.byte	0x1
 2567 05d1 C904     		.2byte	0x4c9
 2568 05d3 77000000 		.4byte	0x77
 2569 05d7 02       		.uleb128 0x2
 2570 05d8 91       		.byte	0x91
 2571 05d9 64       		.sleb128 -28
 2572 05da 0B       		.uleb128 0xb
 2573 05db BA040000 		.4byte	.LASF20
 2574 05df 01       		.byte	0x1
 2575 05e0 CB04     		.2byte	0x4cb
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 71


 2576 05e2 6B000000 		.4byte	0x6b
 2577 05e6 02       		.uleb128 0x2
 2578 05e7 91       		.byte	0x91
 2579 05e8 6F       		.sleb128 -17
 2580 05e9 00       		.byte	0
 2581 05ea 0A       		.uleb128 0xa
 2582 05eb 1B020000 		.4byte	.LASF67
 2583 05ef 01       		.byte	0x1
 2584 05f0 F104     		.2byte	0x4f1
 2585 05f2 00000000 		.4byte	.LFB33
 2586 05f6 38000000 		.4byte	.LFE33-.LFB33
 2587 05fa 01       		.uleb128 0x1
 2588 05fb 9C       		.byte	0x9c
 2589 05fc 2E060000 		.4byte	0x62e
 2590 0600 0C       		.uleb128 0xc
 2591 0601 B2010000 		.4byte	.LASF38
 2592 0605 01       		.byte	0x1
 2593 0606 F104     		.2byte	0x4f1
 2594 0608 77000000 		.4byte	0x77
 2595 060c 02       		.uleb128 0x2
 2596 060d 91       		.byte	0x91
 2597 060e 64       		.sleb128 -28
 2598 060f 0C       		.uleb128 0xc
 2599 0610 32020000 		.4byte	.LASF68
 2600 0614 01       		.byte	0x1
 2601 0615 F104     		.2byte	0x4f1
 2602 0617 77000000 		.4byte	0x77
 2603 061b 02       		.uleb128 0x2
 2604 061c 91       		.byte	0x91
 2605 061d 60       		.sleb128 -32
 2606 061e 0B       		.uleb128 0xb
 2607 061f BA040000 		.4byte	.LASF20
 2608 0623 01       		.byte	0x1
 2609 0624 F304     		.2byte	0x4f3
 2610 0626 6B000000 		.4byte	0x6b
 2611 062a 02       		.uleb128 0x2
 2612 062b 91       		.byte	0x91
 2613 062c 6F       		.sleb128 -17
 2614 062d 00       		.byte	0
 2615 062e 0E       		.uleb128 0xe
 2616 062f 03030000 		.4byte	.LASF69
 2617 0633 01       		.byte	0x1
 2618 0634 0E05     		.2byte	0x50e
 2619 0636 77000000 		.4byte	0x77
 2620 063a 00000000 		.4byte	.LFB34
 2621 063e 20000000 		.4byte	.LFE34-.LFB34
 2622 0642 01       		.uleb128 0x1
 2623 0643 9C       		.byte	0x9c
 2624 0644 0D       		.uleb128 0xd
 2625 0645 96040000 		.4byte	.LASF70
 2626 0649 01       		.byte	0x1
 2627 064a 2705     		.2byte	0x527
 2628 064c 00000000 		.4byte	.LFB35
 2629 0650 18000000 		.4byte	.LFE35-.LFB35
 2630 0654 01       		.uleb128 0x1
 2631 0655 9C       		.byte	0x9c
 2632 0656 6A060000 		.4byte	0x66a
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 72


 2633 065a 0C       		.uleb128 0xc
 2634 065b 0C040000 		.4byte	.LASF71
 2635 065f 01       		.byte	0x1
 2636 0660 2705     		.2byte	0x527
 2637 0662 77000000 		.4byte	0x77
 2638 0666 02       		.uleb128 0x2
 2639 0667 91       		.byte	0x91
 2640 0668 74       		.sleb128 -12
 2641 0669 00       		.byte	0
 2642 066a 0E       		.uleb128 0xe
 2643 066b ED010000 		.4byte	.LASF72
 2644 066f 01       		.byte	0x1
 2645 0670 3E05     		.2byte	0x53e
 2646 0672 77000000 		.4byte	0x77
 2647 0676 00000000 		.4byte	.LFB36
 2648 067a 14000000 		.4byte	.LFE36-.LFB36
 2649 067e 01       		.uleb128 0x1
 2650 067f 9C       		.byte	0x9c
 2651 0680 0E       		.uleb128 0xe
 2652 0681 D1030000 		.4byte	.LASF73
 2653 0685 01       		.byte	0x1
 2654 0686 5505     		.2byte	0x555
 2655 0688 77000000 		.4byte	0x77
 2656 068c 00000000 		.4byte	.LFB37
 2657 0690 14000000 		.4byte	.LFE37-.LFB37
 2658 0694 01       		.uleb128 0x1
 2659 0695 9C       		.byte	0x9c
 2660 0696 0D       		.uleb128 0xd
 2661 0697 7B010000 		.4byte	.LASF74
 2662 069b 01       		.byte	0x1
 2663 069c 6C05     		.2byte	0x56c
 2664 069e 00000000 		.4byte	.LFB38
 2665 06a2 18000000 		.4byte	.LFE38-.LFB38
 2666 06a6 01       		.uleb128 0x1
 2667 06a7 9C       		.byte	0x9c
 2668 06a8 BC060000 		.4byte	0x6bc
 2669 06ac 0C       		.uleb128 0xc
 2670 06ad 0C040000 		.4byte	.LASF71
 2671 06b1 01       		.byte	0x1
 2672 06b2 6C05     		.2byte	0x56c
 2673 06b4 77000000 		.4byte	0x77
 2674 06b8 02       		.uleb128 0x2
 2675 06b9 91       		.byte	0x91
 2676 06ba 74       		.sleb128 -12
 2677 06bb 00       		.byte	0
 2678 06bc 0D       		.uleb128 0xd
 2679 06bd 76020000 		.4byte	.LASF75
 2680 06c1 01       		.byte	0x1
 2681 06c2 8305     		.2byte	0x583
 2682 06c4 00000000 		.4byte	.LFB39
 2683 06c8 18000000 		.4byte	.LFE39-.LFB39
 2684 06cc 01       		.uleb128 0x1
 2685 06cd 9C       		.byte	0x9c
 2686 06ce E2060000 		.4byte	0x6e2
 2687 06d2 0C       		.uleb128 0xc
 2688 06d3 0C040000 		.4byte	.LASF71
 2689 06d7 01       		.byte	0x1
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 73


 2690 06d8 8305     		.2byte	0x583
 2691 06da 77000000 		.4byte	0x77
 2692 06de 02       		.uleb128 0x2
 2693 06df 91       		.byte	0x91
 2694 06e0 74       		.sleb128 -12
 2695 06e1 00       		.byte	0
 2696 06e2 0F       		.uleb128 0xf
 2697 06e3 EB000000 		.4byte	.LASF79
 2698 06e7 01       		.byte	0x1
 2699 06e8 15       		.byte	0x15
 2700 06e9 6B000000 		.4byte	0x6b
 2701 06ed 05       		.uleb128 0x5
 2702 06ee 03       		.byte	0x3
 2703 06ef 00000000 		.4byte	TCPWM_1_initVar
 2704 06f3 00       		.byte	0
 2705              		.section	.debug_abbrev,"",%progbits
 2706              	.Ldebug_abbrev0:
 2707 0000 01       		.uleb128 0x1
 2708 0001 11       		.uleb128 0x11
 2709 0002 01       		.byte	0x1
 2710 0003 25       		.uleb128 0x25
 2711 0004 0E       		.uleb128 0xe
 2712 0005 13       		.uleb128 0x13
 2713 0006 0B       		.uleb128 0xb
 2714 0007 03       		.uleb128 0x3
 2715 0008 0E       		.uleb128 0xe
 2716 0009 1B       		.uleb128 0x1b
 2717 000a 0E       		.uleb128 0xe
 2718 000b 55       		.uleb128 0x55
 2719 000c 17       		.uleb128 0x17
 2720 000d 11       		.uleb128 0x11
 2721 000e 01       		.uleb128 0x1
 2722 000f 10       		.uleb128 0x10
 2723 0010 17       		.uleb128 0x17
 2724 0011 00       		.byte	0
 2725 0012 00       		.byte	0
 2726 0013 02       		.uleb128 0x2
 2727 0014 24       		.uleb128 0x24
 2728 0015 00       		.byte	0
 2729 0016 0B       		.uleb128 0xb
 2730 0017 0B       		.uleb128 0xb
 2731 0018 3E       		.uleb128 0x3e
 2732 0019 0B       		.uleb128 0xb
 2733 001a 03       		.uleb128 0x3
 2734 001b 0E       		.uleb128 0xe
 2735 001c 00       		.byte	0
 2736 001d 00       		.byte	0
 2737 001e 03       		.uleb128 0x3
 2738 001f 24       		.uleb128 0x24
 2739 0020 00       		.byte	0
 2740 0021 0B       		.uleb128 0xb
 2741 0022 0B       		.uleb128 0xb
 2742 0023 3E       		.uleb128 0x3e
 2743 0024 0B       		.uleb128 0xb
 2744 0025 03       		.uleb128 0x3
 2745 0026 08       		.uleb128 0x8
 2746 0027 00       		.byte	0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 74


 2747 0028 00       		.byte	0
 2748 0029 04       		.uleb128 0x4
 2749 002a 16       		.uleb128 0x16
 2750 002b 00       		.byte	0
 2751 002c 03       		.uleb128 0x3
 2752 002d 0E       		.uleb128 0xe
 2753 002e 3A       		.uleb128 0x3a
 2754 002f 0B       		.uleb128 0xb
 2755 0030 3B       		.uleb128 0x3b
 2756 0031 05       		.uleb128 0x5
 2757 0032 49       		.uleb128 0x49
 2758 0033 13       		.uleb128 0x13
 2759 0034 00       		.byte	0
 2760 0035 00       		.byte	0
 2761 0036 05       		.uleb128 0x5
 2762 0037 35       		.uleb128 0x35
 2763 0038 00       		.byte	0
 2764 0039 49       		.uleb128 0x49
 2765 003a 13       		.uleb128 0x13
 2766 003b 00       		.byte	0
 2767 003c 00       		.byte	0
 2768 003d 06       		.uleb128 0x6
 2769 003e 2E       		.uleb128 0x2e
 2770 003f 00       		.byte	0
 2771 0040 3F       		.uleb128 0x3f
 2772 0041 19       		.uleb128 0x19
 2773 0042 03       		.uleb128 0x3
 2774 0043 0E       		.uleb128 0xe
 2775 0044 3A       		.uleb128 0x3a
 2776 0045 0B       		.uleb128 0xb
 2777 0046 3B       		.uleb128 0x3b
 2778 0047 0B       		.uleb128 0xb
 2779 0048 27       		.uleb128 0x27
 2780 0049 19       		.uleb128 0x19
 2781 004a 11       		.uleb128 0x11
 2782 004b 01       		.uleb128 0x1
 2783 004c 12       		.uleb128 0x12
 2784 004d 06       		.uleb128 0x6
 2785 004e 40       		.uleb128 0x40
 2786 004f 18       		.uleb128 0x18
 2787 0050 9742     		.uleb128 0x2117
 2788 0052 19       		.uleb128 0x19
 2789 0053 00       		.byte	0
 2790 0054 00       		.byte	0
 2791 0055 07       		.uleb128 0x7
 2792 0056 2E       		.uleb128 0x2e
 2793 0057 01       		.byte	0x1
 2794 0058 3F       		.uleb128 0x3f
 2795 0059 19       		.uleb128 0x19
 2796 005a 03       		.uleb128 0x3
 2797 005b 0E       		.uleb128 0xe
 2798 005c 3A       		.uleb128 0x3a
 2799 005d 0B       		.uleb128 0xb
 2800 005e 3B       		.uleb128 0x3b
 2801 005f 0B       		.uleb128 0xb
 2802 0060 27       		.uleb128 0x27
 2803 0061 19       		.uleb128 0x19
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 75


 2804 0062 11       		.uleb128 0x11
 2805 0063 01       		.uleb128 0x1
 2806 0064 12       		.uleb128 0x12
 2807 0065 06       		.uleb128 0x6
 2808 0066 40       		.uleb128 0x40
 2809 0067 18       		.uleb128 0x18
 2810 0068 9642     		.uleb128 0x2116
 2811 006a 19       		.uleb128 0x19
 2812 006b 01       		.uleb128 0x1
 2813 006c 13       		.uleb128 0x13
 2814 006d 00       		.byte	0
 2815 006e 00       		.byte	0
 2816 006f 08       		.uleb128 0x8
 2817 0070 34       		.uleb128 0x34
 2818 0071 00       		.byte	0
 2819 0072 03       		.uleb128 0x3
 2820 0073 0E       		.uleb128 0xe
 2821 0074 3A       		.uleb128 0x3a
 2822 0075 0B       		.uleb128 0xb
 2823 0076 3B       		.uleb128 0x3b
 2824 0077 0B       		.uleb128 0xb
 2825 0078 49       		.uleb128 0x49
 2826 0079 13       		.uleb128 0x13
 2827 007a 02       		.uleb128 0x2
 2828 007b 18       		.uleb128 0x18
 2829 007c 00       		.byte	0
 2830 007d 00       		.byte	0
 2831 007e 09       		.uleb128 0x9
 2832 007f 2E       		.uleb128 0x2e
 2833 0080 00       		.byte	0
 2834 0081 3F       		.uleb128 0x3f
 2835 0082 19       		.uleb128 0x19
 2836 0083 03       		.uleb128 0x3
 2837 0084 0E       		.uleb128 0xe
 2838 0085 3A       		.uleb128 0x3a
 2839 0086 0B       		.uleb128 0xb
 2840 0087 3B       		.uleb128 0x3b
 2841 0088 0B       		.uleb128 0xb
 2842 0089 27       		.uleb128 0x27
 2843 008a 19       		.uleb128 0x19
 2844 008b 11       		.uleb128 0x11
 2845 008c 01       		.uleb128 0x1
 2846 008d 12       		.uleb128 0x12
 2847 008e 06       		.uleb128 0x6
 2848 008f 40       		.uleb128 0x40
 2849 0090 18       		.uleb128 0x18
 2850 0091 9642     		.uleb128 0x2116
 2851 0093 19       		.uleb128 0x19
 2852 0094 00       		.byte	0
 2853 0095 00       		.byte	0
 2854 0096 0A       		.uleb128 0xa
 2855 0097 2E       		.uleb128 0x2e
 2856 0098 01       		.byte	0x1
 2857 0099 3F       		.uleb128 0x3f
 2858 009a 19       		.uleb128 0x19
 2859 009b 03       		.uleb128 0x3
 2860 009c 0E       		.uleb128 0xe
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 76


 2861 009d 3A       		.uleb128 0x3a
 2862 009e 0B       		.uleb128 0xb
 2863 009f 3B       		.uleb128 0x3b
 2864 00a0 05       		.uleb128 0x5
 2865 00a1 27       		.uleb128 0x27
 2866 00a2 19       		.uleb128 0x19
 2867 00a3 11       		.uleb128 0x11
 2868 00a4 01       		.uleb128 0x1
 2869 00a5 12       		.uleb128 0x12
 2870 00a6 06       		.uleb128 0x6
 2871 00a7 40       		.uleb128 0x40
 2872 00a8 18       		.uleb128 0x18
 2873 00a9 9642     		.uleb128 0x2116
 2874 00ab 19       		.uleb128 0x19
 2875 00ac 01       		.uleb128 0x1
 2876 00ad 13       		.uleb128 0x13
 2877 00ae 00       		.byte	0
 2878 00af 00       		.byte	0
 2879 00b0 0B       		.uleb128 0xb
 2880 00b1 34       		.uleb128 0x34
 2881 00b2 00       		.byte	0
 2882 00b3 03       		.uleb128 0x3
 2883 00b4 0E       		.uleb128 0xe
 2884 00b5 3A       		.uleb128 0x3a
 2885 00b6 0B       		.uleb128 0xb
 2886 00b7 3B       		.uleb128 0x3b
 2887 00b8 05       		.uleb128 0x5
 2888 00b9 49       		.uleb128 0x49
 2889 00ba 13       		.uleb128 0x13
 2890 00bb 02       		.uleb128 0x2
 2891 00bc 18       		.uleb128 0x18
 2892 00bd 00       		.byte	0
 2893 00be 00       		.byte	0
 2894 00bf 0C       		.uleb128 0xc
 2895 00c0 05       		.uleb128 0x5
 2896 00c1 00       		.byte	0
 2897 00c2 03       		.uleb128 0x3
 2898 00c3 0E       		.uleb128 0xe
 2899 00c4 3A       		.uleb128 0x3a
 2900 00c5 0B       		.uleb128 0xb
 2901 00c6 3B       		.uleb128 0x3b
 2902 00c7 05       		.uleb128 0x5
 2903 00c8 49       		.uleb128 0x49
 2904 00c9 13       		.uleb128 0x13
 2905 00ca 02       		.uleb128 0x2
 2906 00cb 18       		.uleb128 0x18
 2907 00cc 00       		.byte	0
 2908 00cd 00       		.byte	0
 2909 00ce 0D       		.uleb128 0xd
 2910 00cf 2E       		.uleb128 0x2e
 2911 00d0 01       		.byte	0x1
 2912 00d1 3F       		.uleb128 0x3f
 2913 00d2 19       		.uleb128 0x19
 2914 00d3 03       		.uleb128 0x3
 2915 00d4 0E       		.uleb128 0xe
 2916 00d5 3A       		.uleb128 0x3a
 2917 00d6 0B       		.uleb128 0xb
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 77


 2918 00d7 3B       		.uleb128 0x3b
 2919 00d8 05       		.uleb128 0x5
 2920 00d9 27       		.uleb128 0x27
 2921 00da 19       		.uleb128 0x19
 2922 00db 11       		.uleb128 0x11
 2923 00dc 01       		.uleb128 0x1
 2924 00dd 12       		.uleb128 0x12
 2925 00de 06       		.uleb128 0x6
 2926 00df 40       		.uleb128 0x40
 2927 00e0 18       		.uleb128 0x18
 2928 00e1 9742     		.uleb128 0x2117
 2929 00e3 19       		.uleb128 0x19
 2930 00e4 01       		.uleb128 0x1
 2931 00e5 13       		.uleb128 0x13
 2932 00e6 00       		.byte	0
 2933 00e7 00       		.byte	0
 2934 00e8 0E       		.uleb128 0xe
 2935 00e9 2E       		.uleb128 0x2e
 2936 00ea 00       		.byte	0
 2937 00eb 3F       		.uleb128 0x3f
 2938 00ec 19       		.uleb128 0x19
 2939 00ed 03       		.uleb128 0x3
 2940 00ee 0E       		.uleb128 0xe
 2941 00ef 3A       		.uleb128 0x3a
 2942 00f0 0B       		.uleb128 0xb
 2943 00f1 3B       		.uleb128 0x3b
 2944 00f2 05       		.uleb128 0x5
 2945 00f3 27       		.uleb128 0x27
 2946 00f4 19       		.uleb128 0x19
 2947 00f5 49       		.uleb128 0x49
 2948 00f6 13       		.uleb128 0x13
 2949 00f7 11       		.uleb128 0x11
 2950 00f8 01       		.uleb128 0x1
 2951 00f9 12       		.uleb128 0x12
 2952 00fa 06       		.uleb128 0x6
 2953 00fb 40       		.uleb128 0x40
 2954 00fc 18       		.uleb128 0x18
 2955 00fd 9742     		.uleb128 0x2117
 2956 00ff 19       		.uleb128 0x19
 2957 0100 00       		.byte	0
 2958 0101 00       		.byte	0
 2959 0102 0F       		.uleb128 0xf
 2960 0103 34       		.uleb128 0x34
 2961 0104 00       		.byte	0
 2962 0105 03       		.uleb128 0x3
 2963 0106 0E       		.uleb128 0xe
 2964 0107 3A       		.uleb128 0x3a
 2965 0108 0B       		.uleb128 0xb
 2966 0109 3B       		.uleb128 0x3b
 2967 010a 0B       		.uleb128 0xb
 2968 010b 49       		.uleb128 0x49
 2969 010c 13       		.uleb128 0x13
 2970 010d 3F       		.uleb128 0x3f
 2971 010e 19       		.uleb128 0x19
 2972 010f 02       		.uleb128 0x2
 2973 0110 18       		.uleb128 0x18
 2974 0111 00       		.byte	0
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 78


 2975 0112 00       		.byte	0
 2976 0113 00       		.byte	0
 2977              		.section	.debug_aranges,"",%progbits
 2978 0000 54010000 		.4byte	0x154
 2979 0004 0200     		.2byte	0x2
 2980 0006 00000000 		.4byte	.Ldebug_info0
 2981 000a 04       		.byte	0x4
 2982 000b 00       		.byte	0
 2983 000c 0000     		.2byte	0
 2984 000e 0000     		.2byte	0
 2985 0010 00000000 		.4byte	.LFB0
 2986 0014 08000000 		.4byte	.LFE0-.LFB0
 2987 0018 00000000 		.4byte	.LFB1
 2988 001c 30000000 		.4byte	.LFE1-.LFB1
 2989 0020 00000000 		.4byte	.LFB2
 2990 0024 24000000 		.4byte	.LFE2-.LFB2
 2991 0028 00000000 		.4byte	.LFB3
 2992 002c 30000000 		.4byte	.LFE3-.LFB3
 2993 0030 00000000 		.4byte	.LFB4
 2994 0034 48000000 		.4byte	.LFE4-.LFB4
 2995 0038 00000000 		.4byte	.LFB5
 2996 003c 48000000 		.4byte	.LFE5-.LFB5
 2997 0040 00000000 		.4byte	.LFB6
 2998 0044 48000000 		.4byte	.LFE6-.LFB6
 2999 0048 00000000 		.4byte	.LFB7
 3000 004c 4C000000 		.4byte	.LFE7-.LFB7
 3001 0050 00000000 		.4byte	.LFB8
 3002 0054 1C000000 		.4byte	.LFE8-.LFB8
 3003 0058 00000000 		.4byte	.LFB9
 3004 005c 48000000 		.4byte	.LFE9-.LFB9
 3005 0060 00000000 		.4byte	.LFB10
 3006 0064 48000000 		.4byte	.LFE10-.LFB10
 3007 0068 00000000 		.4byte	.LFB11
 3008 006c 4C000000 		.4byte	.LFE11-.LFB11
 3009 0070 00000000 		.4byte	.LFB12
 3010 0074 48000000 		.4byte	.LFE12-.LFB12
 3011 0078 00000000 		.4byte	.LFB13
 3012 007c 1C000000 		.4byte	.LFE13-.LFB13
 3013 0080 00000000 		.4byte	.LFB14
 3014 0084 18000000 		.4byte	.LFE14-.LFB14
 3015 0088 00000000 		.4byte	.LFB15
 3016 008c 48000000 		.4byte	.LFE15-.LFB15
 3017 0090 00000000 		.4byte	.LFB16
 3018 0094 1C000000 		.4byte	.LFE16-.LFB16
 3019 0098 00000000 		.4byte	.LFB17
 3020 009c 18000000 		.4byte	.LFE17-.LFB17
 3021 00a0 00000000 		.4byte	.LFB18
 3022 00a4 48000000 		.4byte	.LFE18-.LFB18
 3023 00a8 00000000 		.4byte	.LFB19
 3024 00ac 1C000000 		.4byte	.LFE19-.LFB19
 3025 00b0 00000000 		.4byte	.LFB20
 3026 00b4 18000000 		.4byte	.LFE20-.LFB20
 3027 00b8 00000000 		.4byte	.LFB21
 3028 00bc 48000000 		.4byte	.LFE21-.LFB21
 3029 00c0 00000000 		.4byte	.LFB22
 3030 00c4 1C000000 		.4byte	.LFE22-.LFB22
 3031 00c8 00000000 		.4byte	.LFB23
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 79


 3032 00cc 18000000 		.4byte	.LFE23-.LFB23
 3033 00d0 00000000 		.4byte	.LFB24
 3034 00d4 1C000000 		.4byte	.LFE24-.LFB24
 3035 00d8 00000000 		.4byte	.LFB25
 3036 00dc 18000000 		.4byte	.LFE25-.LFB25
 3037 00e0 00000000 		.4byte	.LFB26
 3038 00e4 18000000 		.4byte	.LFE26-.LFB26
 3039 00e8 00000000 		.4byte	.LFB27
 3040 00ec 18000000 		.4byte	.LFE27-.LFB27
 3041 00f0 00000000 		.4byte	.LFB28
 3042 00f4 44000000 		.4byte	.LFE28-.LFB28
 3043 00f8 00000000 		.4byte	.LFB29
 3044 00fc 44000000 		.4byte	.LFE29-.LFB29
 3045 0100 00000000 		.4byte	.LFB30
 3046 0104 48000000 		.4byte	.LFE30-.LFB30
 3047 0108 00000000 		.4byte	.LFB31
 3048 010c 44000000 		.4byte	.LFE31-.LFB31
 3049 0110 00000000 		.4byte	.LFB32
 3050 0114 44000000 		.4byte	.LFE32-.LFB32
 3051 0118 00000000 		.4byte	.LFB33
 3052 011c 38000000 		.4byte	.LFE33-.LFB33
 3053 0120 00000000 		.4byte	.LFB34
 3054 0124 20000000 		.4byte	.LFE34-.LFB34
 3055 0128 00000000 		.4byte	.LFB35
 3056 012c 18000000 		.4byte	.LFE35-.LFB35
 3057 0130 00000000 		.4byte	.LFB36
 3058 0134 14000000 		.4byte	.LFE36-.LFB36
 3059 0138 00000000 		.4byte	.LFB37
 3060 013c 14000000 		.4byte	.LFE37-.LFB37
 3061 0140 00000000 		.4byte	.LFB38
 3062 0144 18000000 		.4byte	.LFE38-.LFB38
 3063 0148 00000000 		.4byte	.LFB39
 3064 014c 18000000 		.4byte	.LFE39-.LFB39
 3065 0150 00000000 		.4byte	0
 3066 0154 00000000 		.4byte	0
 3067              		.section	.debug_ranges,"",%progbits
 3068              	.Ldebug_ranges0:
 3069 0000 00000000 		.4byte	.LFB0
 3070 0004 08000000 		.4byte	.LFE0
 3071 0008 00000000 		.4byte	.LFB1
 3072 000c 30000000 		.4byte	.LFE1
 3073 0010 00000000 		.4byte	.LFB2
 3074 0014 24000000 		.4byte	.LFE2
 3075 0018 00000000 		.4byte	.LFB3
 3076 001c 30000000 		.4byte	.LFE3
 3077 0020 00000000 		.4byte	.LFB4
 3078 0024 48000000 		.4byte	.LFE4
 3079 0028 00000000 		.4byte	.LFB5
 3080 002c 48000000 		.4byte	.LFE5
 3081 0030 00000000 		.4byte	.LFB6
 3082 0034 48000000 		.4byte	.LFE6
 3083 0038 00000000 		.4byte	.LFB7
 3084 003c 4C000000 		.4byte	.LFE7
 3085 0040 00000000 		.4byte	.LFB8
 3086 0044 1C000000 		.4byte	.LFE8
 3087 0048 00000000 		.4byte	.LFB9
 3088 004c 48000000 		.4byte	.LFE9
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 80


 3089 0050 00000000 		.4byte	.LFB10
 3090 0054 48000000 		.4byte	.LFE10
 3091 0058 00000000 		.4byte	.LFB11
 3092 005c 4C000000 		.4byte	.LFE11
 3093 0060 00000000 		.4byte	.LFB12
 3094 0064 48000000 		.4byte	.LFE12
 3095 0068 00000000 		.4byte	.LFB13
 3096 006c 1C000000 		.4byte	.LFE13
 3097 0070 00000000 		.4byte	.LFB14
 3098 0074 18000000 		.4byte	.LFE14
 3099 0078 00000000 		.4byte	.LFB15
 3100 007c 48000000 		.4byte	.LFE15
 3101 0080 00000000 		.4byte	.LFB16
 3102 0084 1C000000 		.4byte	.LFE16
 3103 0088 00000000 		.4byte	.LFB17
 3104 008c 18000000 		.4byte	.LFE17
 3105 0090 00000000 		.4byte	.LFB18
 3106 0094 48000000 		.4byte	.LFE18
 3107 0098 00000000 		.4byte	.LFB19
 3108 009c 1C000000 		.4byte	.LFE19
 3109 00a0 00000000 		.4byte	.LFB20
 3110 00a4 18000000 		.4byte	.LFE20
 3111 00a8 00000000 		.4byte	.LFB21
 3112 00ac 48000000 		.4byte	.LFE21
 3113 00b0 00000000 		.4byte	.LFB22
 3114 00b4 1C000000 		.4byte	.LFE22
 3115 00b8 00000000 		.4byte	.LFB23
 3116 00bc 18000000 		.4byte	.LFE23
 3117 00c0 00000000 		.4byte	.LFB24
 3118 00c4 1C000000 		.4byte	.LFE24
 3119 00c8 00000000 		.4byte	.LFB25
 3120 00cc 18000000 		.4byte	.LFE25
 3121 00d0 00000000 		.4byte	.LFB26
 3122 00d4 18000000 		.4byte	.LFE26
 3123 00d8 00000000 		.4byte	.LFB27
 3124 00dc 18000000 		.4byte	.LFE27
 3125 00e0 00000000 		.4byte	.LFB28
 3126 00e4 44000000 		.4byte	.LFE28
 3127 00e8 00000000 		.4byte	.LFB29
 3128 00ec 44000000 		.4byte	.LFE29
 3129 00f0 00000000 		.4byte	.LFB30
 3130 00f4 48000000 		.4byte	.LFE30
 3131 00f8 00000000 		.4byte	.LFB31
 3132 00fc 44000000 		.4byte	.LFE31
 3133 0100 00000000 		.4byte	.LFB32
 3134 0104 44000000 		.4byte	.LFE32
 3135 0108 00000000 		.4byte	.LFB33
 3136 010c 38000000 		.4byte	.LFE33
 3137 0110 00000000 		.4byte	.LFB34
 3138 0114 20000000 		.4byte	.LFE34
 3139 0118 00000000 		.4byte	.LFB35
 3140 011c 18000000 		.4byte	.LFE35
 3141 0120 00000000 		.4byte	.LFB36
 3142 0124 14000000 		.4byte	.LFE36
 3143 0128 00000000 		.4byte	.LFB37
 3144 012c 14000000 		.4byte	.LFE37
 3145 0130 00000000 		.4byte	.LFB38
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 81


 3146 0134 18000000 		.4byte	.LFE38
 3147 0138 00000000 		.4byte	.LFB39
 3148 013c 18000000 		.4byte	.LFE39
 3149 0140 00000000 		.4byte	0
 3150 0144 00000000 		.4byte	0
 3151              		.section	.debug_line,"",%progbits
 3152              	.Ldebug_line0:
 3153 0000 60030000 		.section	.debug_str,"MS",%progbits,1
 3153      02004400 
 3153      00000201 
 3153      FB0E0D00 
 3153      01010101 
 3154              	.LASF31:
 3155 0000 54435057 		.ascii	"TCPWM_1_SetPWMSyncKill\000"
 3155      4D5F315F 
 3155      53657450 
 3155      574D5379 
 3155      6E634B69 
 3156              	.LASF60:
 3157 0017 54435057 		.ascii	"TCPWM_1_ReadCaptureBuf\000"
 3157      4D5F315F 
 3157      52656164 
 3157      43617074 
 3157      75726542 
 3158              	.LASF21:
 3159 002e 54435057 		.ascii	"TCPWM_1_SetMode\000"
 3159      4D5F315F 
 3159      5365744D 
 3159      6F646500 
 3160              	.LASF22:
 3161 003e 54435057 		.ascii	"TCPWM_1_SetQDMode\000"
 3161      4D5F315F 
 3161      53657451 
 3161      444D6F64 
 3161      6500
 3162              	.LASF78:
 3163 0050 433A5C55 		.ascii	"C:\\Users\\edmun\\Desktop\\safe\\full_integration -"
 3163      73657273 
 3163      5C65646D 
 3163      756E5C44 
 3163      65736B74 
 3164 007e 20436F70 		.ascii	" Copy\\KIT042_Accelerometer_LightPaint.cydsn\000"
 3164      795C4B49 
 3164      54303432 
 3164      5F416363 
 3164      656C6572 
 3165              	.LASF25:
 3166 00aa 54435057 		.ascii	"TCPWM_1_SetPrescaler\000"
 3166      4D5F315F 
 3166      53657450 
 3166      72657363 
 3166      616C6572 
 3167              	.LASF39:
 3168 00bf 54435057 		.ascii	"TCPWM_1_WriteCounter\000"
 3168      4D5F315F 
 3168      57726974 
 3168      65436F75 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 82


 3168      6E746572 
 3169              	.LASF7:
 3170 00d4 6C6F6E67 		.ascii	"long long unsigned int\000"
 3170      206C6F6E 
 3170      6720756E 
 3170      7369676E 
 3170      65642069 
 3171              	.LASF79:
 3172 00eb 54435057 		.ascii	"TCPWM_1_initVar\000"
 3172      4D5F315F 
 3172      696E6974 
 3172      56617200 
 3173              	.LASF19:
 3174 00fb 54435057 		.ascii	"TCPWM_1_Stop\000"
 3174      4D5F315F 
 3174      53746F70 
 3174      00
 3175              	.LASF47:
 3176 0108 54435057 		.ascii	"TCPWM_1_SetCompareSwap\000"
 3176      4D5F315F 
 3176      53657443 
 3176      6F6D7061 
 3176      72655377 
 3177              	.LASF6:
 3178 011f 6C6F6E67 		.ascii	"long long int\000"
 3178      206C6F6E 
 3178      6720696E 
 3178      7400
 3179              	.LASF0:
 3180 012d 7369676E 		.ascii	"signed char\000"
 3180      65642063 
 3180      68617200 
 3181              	.LASF55:
 3182 0139 54435057 		.ascii	"TCPWM_1_ReadCompare\000"
 3182      4D5F315F 
 3182      52656164 
 3182      436F6D70 
 3182      61726500 
 3183              	.LASF24:
 3184 014d 71644D6F 		.ascii	"qdMode\000"
 3184      646500
 3185              	.LASF4:
 3186 0154 6C6F6E67 		.ascii	"long int\000"
 3186      20696E74 
 3186      00
 3187              	.LASF56:
 3188 015d 54435057 		.ascii	"TCPWM_1_WriteCompareBuf\000"
 3188      4D5F315F 
 3188      57726974 
 3188      65436F6D 
 3188      70617265 
 3189              	.LASF9:
 3190 0175 75696E74 		.ascii	"uint8\000"
 3190      3800
 3191              	.LASF74:
 3192 017b 54435057 		.ascii	"TCPWM_1_ClearInterrupt\000"
 3192      4D5F315F 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 83


 3192      436C6561 
 3192      72496E74 
 3192      65727275 
 3193              	.LASF12:
 3194 0192 646F7562 		.ascii	"double\000"
 3194      6C6500
 3195              	.LASF10:
 3196 0199 75696E74 		.ascii	"uint32\000"
 3196      333200
 3197              	.LASF40:
 3198 01a0 636F756E 		.ascii	"count\000"
 3198      7400
 3199              	.LASF62:
 3200 01a6 74726967 		.ascii	"triggerMode\000"
 3200      6765724D 
 3200      6F646500 
 3201              	.LASF38:
 3202 01b2 6D61736B 		.ascii	"mask\000"
 3202      00
 3203              	.LASF33:
 3204 01b7 54435057 		.ascii	"TCPWM_1_SetPWMStopOnKill\000"
 3204      4D5F315F 
 3204      53657450 
 3204      574D5374 
 3204      6F704F6E 
 3205              	.LASF45:
 3206 01d0 54435057 		.ascii	"TCPWM_1_ReadCounter\000"
 3206      4D5F315F 
 3206      52656164 
 3206      436F756E 
 3206      74657200 
 3207              	.LASF36:
 3208 01e4 64656164 		.ascii	"deadTime\000"
 3208      54696D65 
 3208      00
 3209              	.LASF72:
 3210 01ed 54435057 		.ascii	"TCPWM_1_GetInterruptSourceMasked\000"
 3210      4D5F315F 
 3210      47657449 
 3210      6E746572 
 3210      72757074 
 3211              	.LASF8:
 3212 020e 756E7369 		.ascii	"unsigned int\000"
 3212      676E6564 
 3212      20696E74 
 3212      00
 3213              	.LASF67:
 3214 021b 54435057 		.ascii	"TCPWM_1_TriggerCommand\000"
 3214      4D5F315F 
 3214      54726967 
 3214      67657243 
 3214      6F6D6D61 
 3215              	.LASF68:
 3216 0232 636F6D6D 		.ascii	"command\000"
 3216      616E6400 
 3217              	.LASF5:
 3218 023a 6C6F6E67 		.ascii	"long unsigned int\000"
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 84


 3218      20756E73 
 3218      69676E65 
 3218      6420696E 
 3218      7400
 3219              	.LASF30:
 3220 024c 6D6F6465 		.ascii	"modeMask\000"
 3220      4D61736B 
 3220      00
 3221              	.LASF3:
 3222 0255 73686F72 		.ascii	"short unsigned int\000"
 3222      7420756E 
 3222      7369676E 
 3222      65642069 
 3222      6E7400
 3223              	.LASF28:
 3224 0268 6F6E6553 		.ascii	"oneShotEnable\000"
 3224      686F7445 
 3224      6E61626C 
 3224      6500
 3225              	.LASF75:
 3226 0276 54435057 		.ascii	"TCPWM_1_SetInterrupt\000"
 3226      4D5F315F 
 3226      53657449 
 3226      6E746572 
 3226      72757074 
 3227              	.LASF27:
 3228 028b 54435057 		.ascii	"TCPWM_1_SetOneShot\000"
 3228      4D5F315F 
 3228      5365744F 
 3228      6E655368 
 3228      6F7400
 3229              	.LASF14:
 3230 029e 72656733 		.ascii	"reg32\000"
 3230      3200
 3231              	.LASF65:
 3232 02a4 54435057 		.ascii	"TCPWM_1_SetStopMode\000"
 3232      4D5F315F 
 3232      53657453 
 3232      746F704D 
 3232      6F646500 
 3233              	.LASF18:
 3234 02b8 54435057 		.ascii	"TCPWM_1_Enable\000"
 3234      4D5F315F 
 3234      456E6162 
 3234      6C6500
 3235              	.LASF15:
 3236 02c7 73697A65 		.ascii	"sizetype\000"
 3236      74797065 
 3236      00
 3237              	.LASF32:
 3238 02d0 73796E63 		.ascii	"syncKillEnable\000"
 3238      4B696C6C 
 3238      456E6162 
 3238      6C6500
 3239              	.LASF16:
 3240 02df 54435057 		.ascii	"TCPWM_1_Init\000"
 3240      4D5F315F 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 85


 3240      496E6974 
 3240      00
 3241              	.LASF35:
 3242 02ec 54435057 		.ascii	"TCPWM_1_SetPWMDeadTime\000"
 3242      4D5F315F 
 3242      53657450 
 3242      574D4465 
 3242      61645469 
 3243              	.LASF69:
 3244 0303 54435057 		.ascii	"TCPWM_1_ReadStatus\000"
 3244      4D5F315F 
 3244      52656164 
 3244      53746174 
 3244      757300
 3245              	.LASF54:
 3246 0316 636F6D70 		.ascii	"compare\000"
 3246      61726500 
 3247              	.LASF17:
 3248 031e 54435057 		.ascii	"TCPWM_1_Start\000"
 3248      4D5F315F 
 3248      53746172 
 3248      7400
 3249              	.LASF66:
 3250 032c 54435057 		.ascii	"TCPWM_1_SetCountMode\000"
 3250      4D5F315F 
 3250      53657443 
 3250      6F756E74 
 3250      4D6F6465 
 3251              	.LASF11:
 3252 0341 666C6F61 		.ascii	"float\000"
 3252      7400
 3253              	.LASF26:
 3254 0347 70726573 		.ascii	"prescaler\000"
 3254      63616C65 
 3254      7200
 3255              	.LASF77:
 3256 0351 47656E65 		.ascii	"Generated_Source\\PSoC4\\TCPWM_1.c\000"
 3256      72617465 
 3256      645F536F 
 3256      75726365 
 3256      5C50536F 
 3257              	.LASF43:
 3258 0372 54435057 		.ascii	"TCPWM_1_WritePeriod\000"
 3258      4D5F315F 
 3258      57726974 
 3258      65506572 
 3258      696F6400 
 3259              	.LASF49:
 3260 0386 54435057 		.ascii	"TCPWM_1_WritePeriodBuf\000"
 3260      4D5F315F 
 3260      57726974 
 3260      65506572 
 3260      696F6442 
 3261              	.LASF1:
 3262 039d 756E7369 		.ascii	"unsigned char\000"
 3262      676E6564 
 3262      20636861 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 86


 3262      7200
 3263              	.LASF53:
 3264 03ab 54435057 		.ascii	"TCPWM_1_WriteCompare\000"
 3264      4D5F315F 
 3264      57726974 
 3264      65436F6D 
 3264      70617265 
 3265              	.LASF34:
 3266 03c0 73746F70 		.ascii	"stopOnKillEnable\000"
 3266      4F6E4B69 
 3266      6C6C456E 
 3266      61626C65 
 3266      00
 3267              	.LASF73:
 3268 03d1 54435057 		.ascii	"TCPWM_1_GetInterruptSource\000"
 3268      4D5F315F 
 3268      47657449 
 3268      6E746572 
 3268      72757074 
 3269              	.LASF2:
 3270 03ec 73686F72 		.ascii	"short int\000"
 3270      7420696E 
 3270      7400
 3271              	.LASF51:
 3272 03f6 54435057 		.ascii	"TCPWM_1_ReadPeriodBuf\000"
 3272      4D5F315F 
 3272      52656164 
 3272      50657269 
 3272      6F644275 
 3273              	.LASF71:
 3274 040c 696E7465 		.ascii	"interruptMask\000"
 3274      72727570 
 3274      744D6173 
 3274      6B00
 3275              	.LASF58:
 3276 041a 54435057 		.ascii	"TCPWM_1_ReadCompareBuf\000"
 3276      4D5F315F 
 3276      52656164 
 3276      436F6D70 
 3276      61726542 
 3277              	.LASF46:
 3278 0431 54435057 		.ascii	"TCPWM_1_ReadPeriod\000"
 3278      4D5F315F 
 3278      52656164 
 3278      50657269 
 3278      6F6400
 3279              	.LASF52:
 3280 0444 54435057 		.ascii	"TCPWM_1_SetPeriodSwap\000"
 3280      4D5F315F 
 3280      53657450 
 3280      6572696F 
 3280      64537761 
 3281              	.LASF13:
 3282 045a 63686172 		.ascii	"char\000"
 3282      00
 3283              	.LASF23:
 3284 045f 6D6F6465 		.ascii	"mode\000"
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 87


 3284      00
 3285              	.LASF59:
 3286 0464 54435057 		.ascii	"TCPWM_1_ReadCapture\000"
 3286      4D5F315F 
 3286      52656164 
 3286      43617074 
 3286      75726500 
 3287              	.LASF42:
 3288 0478 636F756E 		.ascii	"counterMode\000"
 3288      7465724D 
 3288      6F646500 
 3289              	.LASF44:
 3290 0484 70657269 		.ascii	"period\000"
 3290      6F6400
 3291              	.LASF48:
 3292 048b 73776170 		.ascii	"swapEnable\000"
 3292      456E6162 
 3292      6C6500
 3293              	.LASF70:
 3294 0496 54435057 		.ascii	"TCPWM_1_SetInterruptMode\000"
 3294      4D5F315F 
 3294      53657449 
 3294      6E746572 
 3294      72757074 
 3295              	.LASF57:
 3296 04af 636F6D70 		.ascii	"compareBuf\000"
 3296      61726542 
 3296      756600
 3297              	.LASF20:
 3298 04ba 656E6162 		.ascii	"enableInterrupts\000"
 3298      6C65496E 
 3298      74657272 
 3298      75707473 
 3298      00
 3299              	.LASF41:
 3300 04cb 54435057 		.ascii	"TCPWM_1_SetCounterMode\000"
 3300      4D5F315F 
 3300      53657443 
 3300      6F756E74 
 3300      65724D6F 
 3301              	.LASF29:
 3302 04e2 54435057 		.ascii	"TCPWM_1_SetPWMMode\000"
 3302      4D5F315F 
 3302      53657450 
 3302      574D4D6F 
 3302      646500
 3303              	.LASF37:
 3304 04f5 54435057 		.ascii	"TCPWM_1_SetPWMInvert\000"
 3304      4D5F315F 
 3304      53657450 
 3304      574D496E 
 3304      76657274 
 3305              	.LASF63:
 3306 050a 54435057 		.ascii	"TCPWM_1_SetReloadMode\000"
 3306      4D5F315F 
 3306      53657452 
 3306      656C6F61 
ARM GAS  C:\Users\edmun\AppData\Local\Temp\ccQlHGMQ.s 			page 88


 3306      644D6F64 
 3307              	.LASF64:
 3308 0520 54435057 		.ascii	"TCPWM_1_SetStartMode\000"
 3308      4D5F315F 
 3308      53657453 
 3308      74617274 
 3308      4D6F6465 
 3309              	.LASF76:
 3310 0535 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 3310      4320342E 
 3310      392E3320 
 3310      32303135 
 3310      30333033 
 3311 0568 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 3311      20726576 
 3311      6973696F 
 3311      6E203232 
 3311      31323230 
 3312 059b 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3312      66756E63 
 3312      74696F6E 
 3312      2D736563 
 3312      74696F6E 
 3313              	.LASF50:
 3314 05c3 70657269 		.ascii	"periodBuf\000"
 3314      6F644275 
 3314      6600
 3315              	.LASF61:
 3316 05cd 54435057 		.ascii	"TCPWM_1_SetCaptureMode\000"
 3316      4D5F315F 
 3316      53657443 
 3316      61707475 
 3316      72654D6F 
 3317              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
