ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 1


   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"I2C_Accel.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.global	I2C_Accel_initVar
  18              		.bss
  19              		.type	I2C_Accel_initVar, %object
  20              		.size	I2C_Accel_initVar, 1
  21              	I2C_Accel_initVar:
  22 0000 00       		.space	1
  23              		.global	I2C_Accel_customIntrHandler
  24 0001 000000   		.align	2
  25              		.type	I2C_Accel_customIntrHandler, %object
  26              		.size	I2C_Accel_customIntrHandler, 4
  27              	I2C_Accel_customIntrHandler:
  28 0004 00000000 		.space	4
  29              		.section	.text.I2C_Accel_Init,"ax",%progbits
  30              		.align	2
  31              		.global	I2C_Accel_Init
  32              		.code	16
  33              		.thumb_func
  34              		.type	I2C_Accel_Init, %function
  35              	I2C_Accel_Init:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC4\\I2C_Accel.c"
   1:Generated_Source\PSoC4/I2C_Accel.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/I2C_Accel.c **** * \file I2C_Accel.c
   3:Generated_Source\PSoC4/I2C_Accel.c **** * \version 3.20
   4:Generated_Source\PSoC4/I2C_Accel.c **** *
   5:Generated_Source\PSoC4/I2C_Accel.c **** * \brief
   6:Generated_Source\PSoC4/I2C_Accel.c **** *  This file provides the source code to the API for the SCB Component.
   7:Generated_Source\PSoC4/I2C_Accel.c **** *
   8:Generated_Source\PSoC4/I2C_Accel.c **** * Note:
   9:Generated_Source\PSoC4/I2C_Accel.c **** *
  10:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************
  11:Generated_Source\PSoC4/I2C_Accel.c **** * \copyright
  12:Generated_Source\PSoC4/I2C_Accel.c **** * Copyright 2013-2016, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC4/I2C_Accel.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC4/I2C_Accel.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC4/I2C_Accel.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
  17:Generated_Source\PSoC4/I2C_Accel.c **** 
  18:Generated_Source\PSoC4/I2C_Accel.c **** #include "I2C_Accel_PVT.h"
  19:Generated_Source\PSoC4/I2C_Accel.c **** 
  20:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_I2C_INC)
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 2


  21:Generated_Source\PSoC4/I2C_Accel.c ****     #include "I2C_Accel_I2C_PVT.h"
  22:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_I2C_INC) */
  23:Generated_Source\PSoC4/I2C_Accel.c **** 
  24:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_EZI2C_INC)
  25:Generated_Source\PSoC4/I2C_Accel.c ****     #include "I2C_Accel_EZI2C_PVT.h"
  26:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_EZI2C_INC) */
  27:Generated_Source\PSoC4/I2C_Accel.c **** 
  28:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_SPI_INC || I2C_Accel_SCB_MODE_UART_INC)
  29:Generated_Source\PSoC4/I2C_Accel.c ****     #include "I2C_Accel_SPI_UART_PVT.h"
  30:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_SPI_INC || I2C_Accel_SCB_MODE_UART_INC) */
  31:Generated_Source\PSoC4/I2C_Accel.c **** 
  32:Generated_Source\PSoC4/I2C_Accel.c **** 
  33:Generated_Source\PSoC4/I2C_Accel.c **** /***************************************
  34:Generated_Source\PSoC4/I2C_Accel.c **** *    Run Time Configuration Vars
  35:Generated_Source\PSoC4/I2C_Accel.c **** ***************************************/
  36:Generated_Source\PSoC4/I2C_Accel.c **** 
  37:Generated_Source\PSoC4/I2C_Accel.c **** /* Stores internal component configuration for Unconfigured mode */
  38:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
  39:Generated_Source\PSoC4/I2C_Accel.c ****     /* Common configuration variables */
  40:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_scbMode = I2C_Accel_SCB_MODE_UNCONFIG;
  41:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_scbEnableWake;
  42:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_scbEnableIntr;
  43:Generated_Source\PSoC4/I2C_Accel.c **** 
  44:Generated_Source\PSoC4/I2C_Accel.c ****     /* I2C configuration variables */
  45:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_mode;
  46:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_acceptAddr;
  47:Generated_Source\PSoC4/I2C_Accel.c **** 
  48:Generated_Source\PSoC4/I2C_Accel.c ****     /* SPI/UART configuration variables */
  49:Generated_Source\PSoC4/I2C_Accel.c ****     volatile uint8 * I2C_Accel_rxBuffer;
  50:Generated_Source\PSoC4/I2C_Accel.c ****     uint8  I2C_Accel_rxDataBits;
  51:Generated_Source\PSoC4/I2C_Accel.c ****     uint32 I2C_Accel_rxBufferSize;
  52:Generated_Source\PSoC4/I2C_Accel.c **** 
  53:Generated_Source\PSoC4/I2C_Accel.c ****     volatile uint8 * I2C_Accel_txBuffer;
  54:Generated_Source\PSoC4/I2C_Accel.c ****     uint8  I2C_Accel_txDataBits;
  55:Generated_Source\PSoC4/I2C_Accel.c ****     uint32 I2C_Accel_txBufferSize;
  56:Generated_Source\PSoC4/I2C_Accel.c **** 
  57:Generated_Source\PSoC4/I2C_Accel.c ****     /* EZI2C configuration variables */
  58:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_numberOfAddr;
  59:Generated_Source\PSoC4/I2C_Accel.c ****     uint8 I2C_Accel_subAddrSize;
  60:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
  61:Generated_Source\PSoC4/I2C_Accel.c **** 
  62:Generated_Source\PSoC4/I2C_Accel.c **** 
  63:Generated_Source\PSoC4/I2C_Accel.c **** /***************************************
  64:Generated_Source\PSoC4/I2C_Accel.c **** *     Common SCB Vars
  65:Generated_Source\PSoC4/I2C_Accel.c **** ***************************************/
  66:Generated_Source\PSoC4/I2C_Accel.c **** /**
  67:Generated_Source\PSoC4/I2C_Accel.c **** * \addtogroup group_general
  68:Generated_Source\PSoC4/I2C_Accel.c **** * \{
  69:Generated_Source\PSoC4/I2C_Accel.c **** */
  70:Generated_Source\PSoC4/I2C_Accel.c **** 
  71:Generated_Source\PSoC4/I2C_Accel.c **** /** I2C_Accel_initVar indicates whether the I2C_Accel 
  72:Generated_Source\PSoC4/I2C_Accel.c **** *  component has been initialized. The variable is initialized to 0 
  73:Generated_Source\PSoC4/I2C_Accel.c **** *  and set to 1 the first time SCB_Start() is called. This allows 
  74:Generated_Source\PSoC4/I2C_Accel.c **** *  the component to restart without reinitialization after the first 
  75:Generated_Source\PSoC4/I2C_Accel.c **** *  call to the I2C_Accel_Start() routine.
  76:Generated_Source\PSoC4/I2C_Accel.c **** *
  77:Generated_Source\PSoC4/I2C_Accel.c **** *  If re-initialization of the component is required, then the 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 3


  78:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_Init() function can be called before the 
  79:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_Start() or I2C_Accel_Enable() function.
  80:Generated_Source\PSoC4/I2C_Accel.c **** */
  81:Generated_Source\PSoC4/I2C_Accel.c **** uint8 I2C_Accel_initVar = 0u;
  82:Generated_Source\PSoC4/I2C_Accel.c **** 
  83:Generated_Source\PSoC4/I2C_Accel.c **** 
  84:Generated_Source\PSoC4/I2C_Accel.c **** #if (! (I2C_Accel_SCB_MODE_I2C_CONST_CFG || \
  85:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SCB_MODE_EZI2C_CONST_CFG))
  86:Generated_Source\PSoC4/I2C_Accel.c ****     /** This global variable stores TX interrupt sources after 
  87:Generated_Source\PSoC4/I2C_Accel.c ****     * I2C_Accel_Stop() is called. Only these TX interrupt sources 
  88:Generated_Source\PSoC4/I2C_Accel.c ****     * will be restored on a subsequent I2C_Accel_Enable() call.
  89:Generated_Source\PSoC4/I2C_Accel.c ****     */
  90:Generated_Source\PSoC4/I2C_Accel.c ****     uint16 I2C_Accel_IntrTxMask = 0u;
  91:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (! (I2C_Accel_SCB_MODE_I2C_CONST_CFG || \
  92:Generated_Source\PSoC4/I2C_Accel.c ****               I2C_Accel_SCB_MODE_EZI2C_CONST_CFG)) */
  93:Generated_Source\PSoC4/I2C_Accel.c **** /** \} globals */
  94:Generated_Source\PSoC4/I2C_Accel.c **** 
  95:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_IRQ_INTERNAL)
  96:Generated_Source\PSoC4/I2C_Accel.c **** #if !defined (CY_REMOVE_I2C_Accel_CUSTOM_INTR_HANDLER)
  97:Generated_Source\PSoC4/I2C_Accel.c ****     void (*I2C_Accel_customIntrHandler)(void) = NULL;
  98:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* !defined (CY_REMOVE_I2C_Accel_CUSTOM_INTR_HANDLER) */
  99:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_IRQ_INTERNAL) */
 100:Generated_Source\PSoC4/I2C_Accel.c **** 
 101:Generated_Source\PSoC4/I2C_Accel.c **** 
 102:Generated_Source\PSoC4/I2C_Accel.c **** /***************************************
 103:Generated_Source\PSoC4/I2C_Accel.c **** *    Private Function Prototypes
 104:Generated_Source\PSoC4/I2C_Accel.c **** ***************************************/
 105:Generated_Source\PSoC4/I2C_Accel.c **** 
 106:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbEnableIntr(void);
 107:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbModeStop(void);
 108:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbModePostEnable(void);
 109:Generated_Source\PSoC4/I2C_Accel.c **** 
 110:Generated_Source\PSoC4/I2C_Accel.c **** 
 111:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 112:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_Init
 113:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 114:Generated_Source\PSoC4/I2C_Accel.c **** *
 115:Generated_Source\PSoC4/I2C_Accel.c **** *  Initializes the I2C_Accel component to operate in one of the selected
 116:Generated_Source\PSoC4/I2C_Accel.c **** *  configurations: I2C, SPI, UART or EZI2C.
 117:Generated_Source\PSoC4/I2C_Accel.c **** *  When the configuration is set to "Unconfigured SCB", this function does
 118:Generated_Source\PSoC4/I2C_Accel.c **** *  not do any initialization. Use mode-specific initialization APIs instead:
 119:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_I2CInit, I2C_Accel_SpiInit, 
 120:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_UartInit or I2C_Accel_EzI2CInit.
 121:Generated_Source\PSoC4/I2C_Accel.c **** *
 122:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 123:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_Init(void)
 124:Generated_Source\PSoC4/I2C_Accel.c **** {
  38              		.loc 1 124 0
  39              		.cfi_startproc
  40 0000 80B5     		push	{r7, lr}
  41              		.cfi_def_cfa_offset 8
  42              		.cfi_offset 7, -8
  43              		.cfi_offset 14, -4
  44 0002 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
 125:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
 126:Generated_Source\PSoC4/I2C_Accel.c ****     if (I2C_Accel_SCB_MODE_UNCONFIG_RUNTM_CFG)
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 4


 127:Generated_Source\PSoC4/I2C_Accel.c ****     {
 128:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_initVar = 0u;
 129:Generated_Source\PSoC4/I2C_Accel.c ****     }
 130:Generated_Source\PSoC4/I2C_Accel.c ****     else
 131:Generated_Source\PSoC4/I2C_Accel.c ****     {
 132:Generated_Source\PSoC4/I2C_Accel.c ****         /* Initialization was done before this function call */
 133:Generated_Source\PSoC4/I2C_Accel.c ****     }
 134:Generated_Source\PSoC4/I2C_Accel.c **** 
 135:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_I2C_CONST_CFG)
 136:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_I2CInit();
  46              		.loc 1 136 0
  47 0004 FFF7FEFF 		bl	I2C_Accel_I2CInit
 137:Generated_Source\PSoC4/I2C_Accel.c **** 
 138:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_SPI_CONST_CFG)
 139:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_SpiInit();
 140:Generated_Source\PSoC4/I2C_Accel.c **** 
 141:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_UART_CONST_CFG)
 142:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_UartInit();
 143:Generated_Source\PSoC4/I2C_Accel.c **** 
 144:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_EZI2C_CONST_CFG)
 145:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_EzI2CInit();
 146:Generated_Source\PSoC4/I2C_Accel.c **** 
 147:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 148:Generated_Source\PSoC4/I2C_Accel.c **** }
  48              		.loc 1 148 0
  49 0008 BD46     		mov	sp, r7
  50              		@ sp needed
  51 000a 80BD     		pop	{r7, pc}
  52              		.cfi_endproc
  53              	.LFE0:
  54              		.size	I2C_Accel_Init, .-I2C_Accel_Init
  55              		.section	.text.I2C_Accel_Enable,"ax",%progbits
  56              		.align	2
  57              		.global	I2C_Accel_Enable
  58              		.code	16
  59              		.thumb_func
  60              		.type	I2C_Accel_Enable, %function
  61              	I2C_Accel_Enable:
  62              	.LFB1:
 149:Generated_Source\PSoC4/I2C_Accel.c **** 
 150:Generated_Source\PSoC4/I2C_Accel.c **** 
 151:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 152:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_Enable
 153:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 154:Generated_Source\PSoC4/I2C_Accel.c **** *
 155:Generated_Source\PSoC4/I2C_Accel.c **** *  Enables I2C_Accel component operation: activates the hardware and 
 156:Generated_Source\PSoC4/I2C_Accel.c **** *  internal interrupt. It also restores TX interrupt sources disabled after the 
 157:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_Stop() function was called (note that level-triggered TX 
 158:Generated_Source\PSoC4/I2C_Accel.c **** *  interrupt sources remain disabled to not cause code lock-up).
 159:Generated_Source\PSoC4/I2C_Accel.c **** *  For I2C and EZI2C modes the interrupt is internal and mandatory for 
 160:Generated_Source\PSoC4/I2C_Accel.c **** *  operation. For SPI and UART modes the interrupt can be configured as none, 
 161:Generated_Source\PSoC4/I2C_Accel.c **** *  internal or external.
 162:Generated_Source\PSoC4/I2C_Accel.c **** *  The I2C_Accel configuration should be not changed when the component
 163:Generated_Source\PSoC4/I2C_Accel.c **** *  is enabled. Any configuration changes should be made after disabling the 
 164:Generated_Source\PSoC4/I2C_Accel.c **** *  component.
 165:Generated_Source\PSoC4/I2C_Accel.c **** *  When configuration is set to “Unconfigured I2C_Accel”, the component 
 166:Generated_Source\PSoC4/I2C_Accel.c **** *  must first be initialized to operate in one of the following configurations: 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 5


 167:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C, SPI, UART or EZ I2C, using the mode-specific initialization API. 
 168:Generated_Source\PSoC4/I2C_Accel.c **** *  Otherwise this function does not enable the component.
 169:Generated_Source\PSoC4/I2C_Accel.c **** *
 170:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 171:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_Enable(void)
 172:Generated_Source\PSoC4/I2C_Accel.c **** {
  63              		.loc 1 172 0
  64              		.cfi_startproc
  65 0000 80B5     		push	{r7, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 7, -8
  68              		.cfi_offset 14, -4
  69 0002 00AF     		add	r7, sp, #0
  70              		.cfi_def_cfa_register 7
 173:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
 174:Generated_Source\PSoC4/I2C_Accel.c ****     /* Enable SCB block, only if it is already configured */
 175:Generated_Source\PSoC4/I2C_Accel.c ****     if (!I2C_Accel_SCB_MODE_UNCONFIG_RUNTM_CFG)
 176:Generated_Source\PSoC4/I2C_Accel.c ****     {
 177:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_CTRL_REG |= I2C_Accel_CTRL_ENABLED;
 178:Generated_Source\PSoC4/I2C_Accel.c **** 
 179:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_ScbEnableIntr();
 180:Generated_Source\PSoC4/I2C_Accel.c **** 
 181:Generated_Source\PSoC4/I2C_Accel.c ****         /* Call PostEnable function specific to current operation mode */
 182:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_ScbModePostEnable();
 183:Generated_Source\PSoC4/I2C_Accel.c ****     }
 184:Generated_Source\PSoC4/I2C_Accel.c **** #else
 185:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_CTRL_REG |= I2C_Accel_CTRL_ENABLED;
  71              		.loc 1 185 0
  72 0004 064B     		ldr	r3, .L3
  73 0006 064A     		ldr	r2, .L3
  74 0008 1268     		ldr	r2, [r2]
  75 000a 8021     		mov	r1, #128
  76 000c 0906     		lsl	r1, r1, #24
  77 000e 0A43     		orr	r2, r1
  78 0010 1A60     		str	r2, [r3]
 186:Generated_Source\PSoC4/I2C_Accel.c **** 
 187:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_ScbEnableIntr();
  79              		.loc 1 187 0
  80 0012 FFF7FEFF 		bl	I2C_Accel_ScbEnableIntr
 188:Generated_Source\PSoC4/I2C_Accel.c **** 
 189:Generated_Source\PSoC4/I2C_Accel.c ****     /* Call PostEnable function specific to current operation mode */
 190:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_ScbModePostEnable();
  81              		.loc 1 190 0
  82 0016 FFF7FEFF 		bl	I2C_Accel_ScbModePostEnable
 191:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 192:Generated_Source\PSoC4/I2C_Accel.c **** }
  83              		.loc 1 192 0
  84 001a BD46     		mov	sp, r7
  85              		@ sp needed
  86 001c 80BD     		pop	{r7, pc}
  87              	.L4:
  88 001e C046     		.align	2
  89              	.L3:
  90 0020 00000740 		.word	1074200576
  91              		.cfi_endproc
  92              	.LFE1:
  93              		.size	I2C_Accel_Enable, .-I2C_Accel_Enable
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 6


  94              		.section	.text.I2C_Accel_Start,"ax",%progbits
  95              		.align	2
  96              		.global	I2C_Accel_Start
  97              		.code	16
  98              		.thumb_func
  99              		.type	I2C_Accel_Start, %function
 100              	I2C_Accel_Start:
 101              	.LFB2:
 193:Generated_Source\PSoC4/I2C_Accel.c **** 
 194:Generated_Source\PSoC4/I2C_Accel.c **** 
 195:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 196:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_Start
 197:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 198:Generated_Source\PSoC4/I2C_Accel.c **** *
 199:Generated_Source\PSoC4/I2C_Accel.c **** *  Invokes I2C_Accel_Init() and I2C_Accel_Enable().
 200:Generated_Source\PSoC4/I2C_Accel.c **** *  After this function call, the component is enabled and ready for operation.
 201:Generated_Source\PSoC4/I2C_Accel.c **** *  When configuration is set to "Unconfigured SCB", the component must first be
 202:Generated_Source\PSoC4/I2C_Accel.c **** *  initialized to operate in one of the following configurations: I2C, SPI, UART
 203:Generated_Source\PSoC4/I2C_Accel.c **** *  or EZI2C. Otherwise this function does not enable the component.
 204:Generated_Source\PSoC4/I2C_Accel.c **** *
 205:Generated_Source\PSoC4/I2C_Accel.c **** * \globalvars
 206:Generated_Source\PSoC4/I2C_Accel.c **** *  I2C_Accel_initVar - used to check initial configuration, modified
 207:Generated_Source\PSoC4/I2C_Accel.c **** *  on first function call.
 208:Generated_Source\PSoC4/I2C_Accel.c **** *
 209:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 210:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_Start(void)
 211:Generated_Source\PSoC4/I2C_Accel.c **** {
 102              		.loc 1 211 0
 103              		.cfi_startproc
 104 0000 80B5     		push	{r7, lr}
 105              		.cfi_def_cfa_offset 8
 106              		.cfi_offset 7, -8
 107              		.cfi_offset 14, -4
 108 0002 00AF     		add	r7, sp, #0
 109              		.cfi_def_cfa_register 7
 212:Generated_Source\PSoC4/I2C_Accel.c ****     if (0u == I2C_Accel_initVar)
 110              		.loc 1 212 0
 111 0004 064B     		ldr	r3, .L7
 112 0006 1B78     		ldrb	r3, [r3]
 113 0008 002B     		cmp	r3, #0
 114 000a 04D1     		bne	.L6
 213:Generated_Source\PSoC4/I2C_Accel.c ****     {
 214:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_Init();
 115              		.loc 1 214 0
 116 000c FFF7FEFF 		bl	I2C_Accel_Init
 215:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_initVar = 1u; /* Component was initialized */
 117              		.loc 1 215 0
 118 0010 034B     		ldr	r3, .L7
 119 0012 0122     		mov	r2, #1
 120 0014 1A70     		strb	r2, [r3]
 121              	.L6:
 216:Generated_Source\PSoC4/I2C_Accel.c ****     }
 217:Generated_Source\PSoC4/I2C_Accel.c **** 
 218:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_Enable();
 122              		.loc 1 218 0
 123 0016 FFF7FEFF 		bl	I2C_Accel_Enable
 219:Generated_Source\PSoC4/I2C_Accel.c **** }
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 7


 124              		.loc 1 219 0
 125 001a BD46     		mov	sp, r7
 126              		@ sp needed
 127 001c 80BD     		pop	{r7, pc}
 128              	.L8:
 129 001e C046     		.align	2
 130              	.L7:
 131 0020 00000000 		.word	I2C_Accel_initVar
 132              		.cfi_endproc
 133              	.LFE2:
 134              		.size	I2C_Accel_Start, .-I2C_Accel_Start
 135              		.section	.text.I2C_Accel_Stop,"ax",%progbits
 136              		.align	2
 137              		.global	I2C_Accel_Stop
 138              		.code	16
 139              		.thumb_func
 140              		.type	I2C_Accel_Stop, %function
 141              	I2C_Accel_Stop:
 142              	.LFB3:
 220:Generated_Source\PSoC4/I2C_Accel.c **** 
 221:Generated_Source\PSoC4/I2C_Accel.c **** 
 222:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 223:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_Stop
 224:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 225:Generated_Source\PSoC4/I2C_Accel.c **** *
 226:Generated_Source\PSoC4/I2C_Accel.c **** *  Disables the I2C_Accel component: disable the hardware and internal 
 227:Generated_Source\PSoC4/I2C_Accel.c **** *  interrupt. It also disables all TX interrupt sources so as not to cause an 
 228:Generated_Source\PSoC4/I2C_Accel.c **** *  unexpected interrupt trigger because after the component is enabled, the 
 229:Generated_Source\PSoC4/I2C_Accel.c **** *  TX FIFO is empty.
 230:Generated_Source\PSoC4/I2C_Accel.c **** *  Refer to the function I2C_Accel_Enable() for the interrupt 
 231:Generated_Source\PSoC4/I2C_Accel.c **** *  configuration details.
 232:Generated_Source\PSoC4/I2C_Accel.c **** *  This function disables the SCB component without checking to see if 
 233:Generated_Source\PSoC4/I2C_Accel.c **** *  communication is in progress. Before calling this function it may be 
 234:Generated_Source\PSoC4/I2C_Accel.c **** *  necessary to check the status of communication to make sure communication 
 235:Generated_Source\PSoC4/I2C_Accel.c **** *  is complete. If this is not done then communication could be stopped mid 
 236:Generated_Source\PSoC4/I2C_Accel.c **** *  byte and corrupted data could result.
 237:Generated_Source\PSoC4/I2C_Accel.c **** *
 238:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 239:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_Stop(void)
 240:Generated_Source\PSoC4/I2C_Accel.c **** {
 143              		.loc 1 240 0
 144              		.cfi_startproc
 145 0000 80B5     		push	{r7, lr}
 146              		.cfi_def_cfa_offset 8
 147              		.cfi_offset 7, -8
 148              		.cfi_offset 14, -4
 149 0002 00AF     		add	r7, sp, #0
 150              		.cfi_def_cfa_register 7
 241:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_IRQ_INTERNAL)
 242:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_DisableInt();
 151              		.loc 1 242 0
 152 0004 0B20     		mov	r0, #11
 153 0006 FFF7FEFF 		bl	CyIntDisable
 243:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_IRQ_INTERNAL) */
 244:Generated_Source\PSoC4/I2C_Accel.c **** 
 245:Generated_Source\PSoC4/I2C_Accel.c ****     /* Call Stop function specific to current operation mode */
 246:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_ScbModeStop();
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 8


 154              		.loc 1 246 0
 155 000a FFF7FEFF 		bl	I2C_Accel_ScbModeStop
 247:Generated_Source\PSoC4/I2C_Accel.c **** 
 248:Generated_Source\PSoC4/I2C_Accel.c ****     /* Disable SCB IP */
 249:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_CTRL_REG &= (uint32) ~I2C_Accel_CTRL_ENABLED;
 156              		.loc 1 249 0
 157 000e 074B     		ldr	r3, .L10
 158 0010 064A     		ldr	r2, .L10
 159 0012 1268     		ldr	r2, [r2]
 160 0014 5200     		lsl	r2, r2, #1
 161 0016 5208     		lsr	r2, r2, #1
 162 0018 1A60     		str	r2, [r3]
 250:Generated_Source\PSoC4/I2C_Accel.c **** 
 251:Generated_Source\PSoC4/I2C_Accel.c ****     /* Disable all TX interrupt sources so as not to cause an unexpected
 252:Generated_Source\PSoC4/I2C_Accel.c ****     * interrupt trigger after the component will be enabled because the 
 253:Generated_Source\PSoC4/I2C_Accel.c ****     * TX FIFO is empty.
 254:Generated_Source\PSoC4/I2C_Accel.c ****     * For SCB IP v0, it is critical as it does not mask-out interrupt
 255:Generated_Source\PSoC4/I2C_Accel.c ****     * sources when it is disabled. This can cause a code lock-up in the
 256:Generated_Source\PSoC4/I2C_Accel.c ****     * interrupt handler because TX FIFO cannot be loaded after the block
 257:Generated_Source\PSoC4/I2C_Accel.c ****     * is disabled.
 258:Generated_Source\PSoC4/I2C_Accel.c ****     */
 259:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_SetTxInterruptMode(I2C_Accel_NO_INTR_SOURCES);
 163              		.loc 1 259 0
 164 001a 054B     		ldr	r3, .L10+4
 165 001c 0022     		mov	r2, #0
 166 001e 1A60     		str	r2, [r3]
 260:Generated_Source\PSoC4/I2C_Accel.c **** 
 261:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_IRQ_INTERNAL)
 262:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_ClearPendingInt();
 167              		.loc 1 262 0
 168 0020 0B20     		mov	r0, #11
 169 0022 FFF7FEFF 		bl	CyIntClearPending
 263:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_IRQ_INTERNAL) */
 264:Generated_Source\PSoC4/I2C_Accel.c **** }
 170              		.loc 1 264 0
 171 0026 BD46     		mov	sp, r7
 172              		@ sp needed
 173 0028 80BD     		pop	{r7, pc}
 174              	.L11:
 175 002a C046     		.align	2
 176              	.L10:
 177 002c 00000740 		.word	1074200576
 178 0030 880F0740 		.word	1074204552
 179              		.cfi_endproc
 180              	.LFE3:
 181              		.size	I2C_Accel_Stop, .-I2C_Accel_Stop
 182              		.section	.text.I2C_Accel_SetRxFifoLevel,"ax",%progbits
 183              		.align	2
 184              		.global	I2C_Accel_SetRxFifoLevel
 185              		.code	16
 186              		.thumb_func
 187              		.type	I2C_Accel_SetRxFifoLevel, %function
 188              	I2C_Accel_SetRxFifoLevel:
 189              	.LFB4:
 265:Generated_Source\PSoC4/I2C_Accel.c **** 
 266:Generated_Source\PSoC4/I2C_Accel.c **** 
 267:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 9


 268:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_SetRxFifoLevel
 269:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 270:Generated_Source\PSoC4/I2C_Accel.c **** *
 271:Generated_Source\PSoC4/I2C_Accel.c **** *  Sets level in the RX FIFO to generate a RX level interrupt.
 272:Generated_Source\PSoC4/I2C_Accel.c **** *  When the RX FIFO has more entries than the RX FIFO level an RX level
 273:Generated_Source\PSoC4/I2C_Accel.c **** *  interrupt request is generated.
 274:Generated_Source\PSoC4/I2C_Accel.c **** *
 275:Generated_Source\PSoC4/I2C_Accel.c **** *  \param level: Level in the RX FIFO to generate RX level interrupt.
 276:Generated_Source\PSoC4/I2C_Accel.c **** *   The range of valid level values is between 0 and RX FIFO depth - 1.
 277:Generated_Source\PSoC4/I2C_Accel.c **** *
 278:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 279:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_SetRxFifoLevel(uint32 level)
 280:Generated_Source\PSoC4/I2C_Accel.c **** {
 190              		.loc 1 280 0
 191              		.cfi_startproc
 192 0000 80B5     		push	{r7, lr}
 193              		.cfi_def_cfa_offset 8
 194              		.cfi_offset 7, -8
 195              		.cfi_offset 14, -4
 196 0002 84B0     		sub	sp, sp, #16
 197              		.cfi_def_cfa_offset 24
 198 0004 00AF     		add	r7, sp, #0
 199              		.cfi_def_cfa_register 7
 200 0006 7860     		str	r0, [r7, #4]
 281:Generated_Source\PSoC4/I2C_Accel.c ****     uint32 rxFifoCtrl;
 282:Generated_Source\PSoC4/I2C_Accel.c **** 
 283:Generated_Source\PSoC4/I2C_Accel.c ****     rxFifoCtrl = I2C_Accel_RX_FIFO_CTRL_REG;
 201              		.loc 1 283 0
 202 0008 094B     		ldr	r3, .L13
 203 000a 1B68     		ldr	r3, [r3]
 204 000c FB60     		str	r3, [r7, #12]
 284:Generated_Source\PSoC4/I2C_Accel.c **** 
 285:Generated_Source\PSoC4/I2C_Accel.c ****     rxFifoCtrl &= ((uint32) ~I2C_Accel_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits *
 205              		.loc 1 285 0
 206 000e FB68     		ldr	r3, [r7, #12]
 207 0010 0722     		mov	r2, #7
 208 0012 9343     		bic	r3, r2
 209 0014 FB60     		str	r3, [r7, #12]
 286:Generated_Source\PSoC4/I2C_Accel.c ****     rxFifoCtrl |= ((uint32) (I2C_Accel_RX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 210              		.loc 1 286 0
 211 0016 7B68     		ldr	r3, [r7, #4]
 212 0018 0722     		mov	r2, #7
 213 001a 1340     		and	r3, r2
 214 001c FA68     		ldr	r2, [r7, #12]
 215 001e 1343     		orr	r3, r2
 216 0020 FB60     		str	r3, [r7, #12]
 287:Generated_Source\PSoC4/I2C_Accel.c **** 
 288:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_RX_FIFO_CTRL_REG = rxFifoCtrl;
 217              		.loc 1 288 0
 218 0022 034B     		ldr	r3, .L13
 219 0024 FA68     		ldr	r2, [r7, #12]
 220 0026 1A60     		str	r2, [r3]
 289:Generated_Source\PSoC4/I2C_Accel.c **** }
 221              		.loc 1 289 0
 222 0028 BD46     		mov	sp, r7
 223 002a 04B0     		add	sp, sp, #16
 224              		@ sp needed
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 10


 225 002c 80BD     		pop	{r7, pc}
 226              	.L14:
 227 002e C046     		.align	2
 228              	.L13:
 229 0030 04030740 		.word	1074201348
 230              		.cfi_endproc
 231              	.LFE4:
 232              		.size	I2C_Accel_SetRxFifoLevel, .-I2C_Accel_SetRxFifoLevel
 233              		.section	.text.I2C_Accel_SetTxFifoLevel,"ax",%progbits
 234              		.align	2
 235              		.global	I2C_Accel_SetTxFifoLevel
 236              		.code	16
 237              		.thumb_func
 238              		.type	I2C_Accel_SetTxFifoLevel, %function
 239              	I2C_Accel_SetTxFifoLevel:
 240              	.LFB5:
 290:Generated_Source\PSoC4/I2C_Accel.c **** 
 291:Generated_Source\PSoC4/I2C_Accel.c **** 
 292:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 293:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_SetTxFifoLevel
 294:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 295:Generated_Source\PSoC4/I2C_Accel.c **** *
 296:Generated_Source\PSoC4/I2C_Accel.c **** *  Sets level in the TX FIFO to generate a TX level interrupt.
 297:Generated_Source\PSoC4/I2C_Accel.c **** *  When the TX FIFO has less entries than the TX FIFO level an TX level
 298:Generated_Source\PSoC4/I2C_Accel.c **** *  interrupt request is generated.
 299:Generated_Source\PSoC4/I2C_Accel.c **** *
 300:Generated_Source\PSoC4/I2C_Accel.c **** *  \param level: Level in the TX FIFO to generate TX level interrupt.
 301:Generated_Source\PSoC4/I2C_Accel.c **** *   The range of valid level values is between 0 and TX FIFO depth - 1.
 302:Generated_Source\PSoC4/I2C_Accel.c **** *
 303:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 304:Generated_Source\PSoC4/I2C_Accel.c **** void I2C_Accel_SetTxFifoLevel(uint32 level)
 305:Generated_Source\PSoC4/I2C_Accel.c **** {
 241              		.loc 1 305 0
 242              		.cfi_startproc
 243 0000 80B5     		push	{r7, lr}
 244              		.cfi_def_cfa_offset 8
 245              		.cfi_offset 7, -8
 246              		.cfi_offset 14, -4
 247 0002 84B0     		sub	sp, sp, #16
 248              		.cfi_def_cfa_offset 24
 249 0004 00AF     		add	r7, sp, #0
 250              		.cfi_def_cfa_register 7
 251 0006 7860     		str	r0, [r7, #4]
 306:Generated_Source\PSoC4/I2C_Accel.c ****     uint32 txFifoCtrl;
 307:Generated_Source\PSoC4/I2C_Accel.c **** 
 308:Generated_Source\PSoC4/I2C_Accel.c ****     txFifoCtrl = I2C_Accel_TX_FIFO_CTRL_REG;
 252              		.loc 1 308 0
 253 0008 094B     		ldr	r3, .L16
 254 000a 1B68     		ldr	r3, [r3]
 255 000c FB60     		str	r3, [r7, #12]
 309:Generated_Source\PSoC4/I2C_Accel.c **** 
 310:Generated_Source\PSoC4/I2C_Accel.c ****     txFifoCtrl &= ((uint32) ~I2C_Accel_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK); /* Clear level mask bits *
 256              		.loc 1 310 0
 257 000e FB68     		ldr	r3, [r7, #12]
 258 0010 0722     		mov	r2, #7
 259 0012 9343     		bic	r3, r2
 260 0014 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 11


 311:Generated_Source\PSoC4/I2C_Accel.c ****     txFifoCtrl |= ((uint32) (I2C_Accel_TX_FIFO_CTRL_TRIGGER_LEVEL_MASK & level));
 261              		.loc 1 311 0
 262 0016 7B68     		ldr	r3, [r7, #4]
 263 0018 0722     		mov	r2, #7
 264 001a 1340     		and	r3, r2
 265 001c FA68     		ldr	r2, [r7, #12]
 266 001e 1343     		orr	r3, r2
 267 0020 FB60     		str	r3, [r7, #12]
 312:Generated_Source\PSoC4/I2C_Accel.c **** 
 313:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_TX_FIFO_CTRL_REG = txFifoCtrl;
 268              		.loc 1 313 0
 269 0022 034B     		ldr	r3, .L16
 270 0024 FA68     		ldr	r2, [r7, #12]
 271 0026 1A60     		str	r2, [r3]
 314:Generated_Source\PSoC4/I2C_Accel.c **** }
 272              		.loc 1 314 0
 273 0028 BD46     		mov	sp, r7
 274 002a 04B0     		add	sp, sp, #16
 275              		@ sp needed
 276 002c 80BD     		pop	{r7, pc}
 277              	.L17:
 278 002e C046     		.align	2
 279              	.L16:
 280 0030 04020740 		.word	1074201092
 281              		.cfi_endproc
 282              	.LFE5:
 283              		.size	I2C_Accel_SetTxFifoLevel, .-I2C_Accel_SetTxFifoLevel
 284              		.section	.text.I2C_Accel_SetCustomInterruptHandler,"ax",%progbits
 285              		.align	2
 286              		.global	I2C_Accel_SetCustomInterruptHandler
 287              		.code	16
 288              		.thumb_func
 289              		.type	I2C_Accel_SetCustomInterruptHandler, %function
 290              	I2C_Accel_SetCustomInterruptHandler:
 291              	.LFB6:
 315:Generated_Source\PSoC4/I2C_Accel.c **** 
 316:Generated_Source\PSoC4/I2C_Accel.c **** 
 317:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_IRQ_INTERNAL)
 318:Generated_Source\PSoC4/I2C_Accel.c ****     /*******************************************************************************
 319:Generated_Source\PSoC4/I2C_Accel.c ****     * Function Name: I2C_Accel_SetCustomInterruptHandler
 320:Generated_Source\PSoC4/I2C_Accel.c ****     ****************************************************************************//**
 321:Generated_Source\PSoC4/I2C_Accel.c ****     *
 322:Generated_Source\PSoC4/I2C_Accel.c ****     *  Registers a function to be called by the internal interrupt handler.
 323:Generated_Source\PSoC4/I2C_Accel.c ****     *  First the function that is registered is called, then the internal interrupt
 324:Generated_Source\PSoC4/I2C_Accel.c ****     *  handler performs any operation such as software buffer management functions
 325:Generated_Source\PSoC4/I2C_Accel.c ****     *  before the interrupt returns.  It is the user's responsibility not to break
 326:Generated_Source\PSoC4/I2C_Accel.c ****     *  the software buffer operations. Only one custom handler is supported, which
 327:Generated_Source\PSoC4/I2C_Accel.c ****     *  is the function provided by the most recent call.
 328:Generated_Source\PSoC4/I2C_Accel.c ****     *  At the initialization time no custom handler is registered.
 329:Generated_Source\PSoC4/I2C_Accel.c ****     *
 330:Generated_Source\PSoC4/I2C_Accel.c ****     *  \param func: Pointer to the function to register.
 331:Generated_Source\PSoC4/I2C_Accel.c ****     *        The value NULL indicates to remove the current custom interrupt
 332:Generated_Source\PSoC4/I2C_Accel.c ****     *        handler.
 333:Generated_Source\PSoC4/I2C_Accel.c ****     *
 334:Generated_Source\PSoC4/I2C_Accel.c ****     *******************************************************************************/
 335:Generated_Source\PSoC4/I2C_Accel.c ****     void I2C_Accel_SetCustomInterruptHandler(void (*func)(void))
 336:Generated_Source\PSoC4/I2C_Accel.c ****     {
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 12


 292              		.loc 1 336 0
 293              		.cfi_startproc
 294 0000 80B5     		push	{r7, lr}
 295              		.cfi_def_cfa_offset 8
 296              		.cfi_offset 7, -8
 297              		.cfi_offset 14, -4
 298 0002 82B0     		sub	sp, sp, #8
 299              		.cfi_def_cfa_offset 16
 300 0004 00AF     		add	r7, sp, #0
 301              		.cfi_def_cfa_register 7
 302 0006 7860     		str	r0, [r7, #4]
 337:Generated_Source\PSoC4/I2C_Accel.c ****     #if !defined (CY_REMOVE_I2C_Accel_CUSTOM_INTR_HANDLER)
 338:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_customIntrHandler = func; /* Register interrupt handler */
 303              		.loc 1 338 0
 304 0008 024B     		ldr	r3, .L19
 305 000a 7A68     		ldr	r2, [r7, #4]
 306 000c 1A60     		str	r2, [r3]
 339:Generated_Source\PSoC4/I2C_Accel.c ****     #else
 340:Generated_Source\PSoC4/I2C_Accel.c ****         if (NULL != func)
 341:Generated_Source\PSoC4/I2C_Accel.c ****         {
 342:Generated_Source\PSoC4/I2C_Accel.c ****             /* Suppress compiler warning */
 343:Generated_Source\PSoC4/I2C_Accel.c ****         }
 344:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* !defined (CY_REMOVE_I2C_Accel_CUSTOM_INTR_HANDLER) */
 345:Generated_Source\PSoC4/I2C_Accel.c ****     }
 307              		.loc 1 345 0
 308 000e BD46     		mov	sp, r7
 309 0010 02B0     		add	sp, sp, #8
 310              		@ sp needed
 311 0012 80BD     		pop	{r7, pc}
 312              	.L20:
 313              		.align	2
 314              	.L19:
 315 0014 00000000 		.word	I2C_Accel_customIntrHandler
 316              		.cfi_endproc
 317              	.LFE6:
 318              		.size	I2C_Accel_SetCustomInterruptHandler, .-I2C_Accel_SetCustomInterruptHandler
 319              		.section	.text.I2C_Accel_ScbEnableIntr,"ax",%progbits
 320              		.align	2
 321              		.code	16
 322              		.thumb_func
 323              		.type	I2C_Accel_ScbEnableIntr, %function
 324              	I2C_Accel_ScbEnableIntr:
 325              	.LFB7:
 346:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_IRQ_INTERNAL) */
 347:Generated_Source\PSoC4/I2C_Accel.c **** 
 348:Generated_Source\PSoC4/I2C_Accel.c **** 
 349:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 350:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_ScbModeEnableIntr
 351:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 352:Generated_Source\PSoC4/I2C_Accel.c **** *
 353:Generated_Source\PSoC4/I2C_Accel.c **** *  Enables an interrupt for a specific mode.
 354:Generated_Source\PSoC4/I2C_Accel.c **** *
 355:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 356:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbEnableIntr(void)
 357:Generated_Source\PSoC4/I2C_Accel.c **** {
 326              		.loc 1 357 0
 327              		.cfi_startproc
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 13


 328 0000 80B5     		push	{r7, lr}
 329              		.cfi_def_cfa_offset 8
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 00AF     		add	r7, sp, #0
 333              		.cfi_def_cfa_register 7
 358:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_IRQ_INTERNAL)
 359:Generated_Source\PSoC4/I2C_Accel.c ****     /* Enable interrupt in NVIC */
 360:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
 361:Generated_Source\PSoC4/I2C_Accel.c ****         if (0u != I2C_Accel_scbEnableIntr)
 362:Generated_Source\PSoC4/I2C_Accel.c ****         {
 363:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_EnableInt();
 364:Generated_Source\PSoC4/I2C_Accel.c ****         }
 365:Generated_Source\PSoC4/I2C_Accel.c **** 
 366:Generated_Source\PSoC4/I2C_Accel.c ****     #else
 367:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_EnableInt();
 334              		.loc 1 367 0
 335 0004 0B20     		mov	r0, #11
 336 0006 FFF7FEFF 		bl	CyIntEnable
 368:Generated_Source\PSoC4/I2C_Accel.c **** 
 369:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 370:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_IRQ_INTERNAL) */
 371:Generated_Source\PSoC4/I2C_Accel.c **** }
 337              		.loc 1 371 0
 338 000a BD46     		mov	sp, r7
 339              		@ sp needed
 340 000c 80BD     		pop	{r7, pc}
 341              		.cfi_endproc
 342              	.LFE7:
 343              		.size	I2C_Accel_ScbEnableIntr, .-I2C_Accel_ScbEnableIntr
 344              		.section	.text.I2C_Accel_ScbModePostEnable,"ax",%progbits
 345              		.align	2
 346              		.code	16
 347              		.thumb_func
 348              		.type	I2C_Accel_ScbModePostEnable, %function
 349              	I2C_Accel_ScbModePostEnable:
 350              	.LFB8:
 372:Generated_Source\PSoC4/I2C_Accel.c **** 
 373:Generated_Source\PSoC4/I2C_Accel.c **** 
 374:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 375:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_ScbModePostEnable
 376:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 377:Generated_Source\PSoC4/I2C_Accel.c **** *
 378:Generated_Source\PSoC4/I2C_Accel.c **** *  Calls the PostEnable function for a specific operation mode.
 379:Generated_Source\PSoC4/I2C_Accel.c **** *
 380:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 381:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbModePostEnable(void)
 382:Generated_Source\PSoC4/I2C_Accel.c **** {
 351              		.loc 1 382 0
 352              		.cfi_startproc
 353 0000 80B5     		push	{r7, lr}
 354              		.cfi_def_cfa_offset 8
 355              		.cfi_offset 7, -8
 356              		.cfi_offset 14, -4
 357 0002 00AF     		add	r7, sp, #0
 358              		.cfi_def_cfa_register 7
 383:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 14


 384:Generated_Source\PSoC4/I2C_Accel.c **** #if (!I2C_Accel_CY_SCBIP_V1)
 385:Generated_Source\PSoC4/I2C_Accel.c ****     if (I2C_Accel_SCB_MODE_SPI_RUNTM_CFG)
 386:Generated_Source\PSoC4/I2C_Accel.c ****     {
 387:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SpiPostEnable();
 388:Generated_Source\PSoC4/I2C_Accel.c ****     }
 389:Generated_Source\PSoC4/I2C_Accel.c ****     else if (I2C_Accel_SCB_MODE_UART_RUNTM_CFG)
 390:Generated_Source\PSoC4/I2C_Accel.c ****     {
 391:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_UartPostEnable();
 392:Generated_Source\PSoC4/I2C_Accel.c ****     }
 393:Generated_Source\PSoC4/I2C_Accel.c ****     else
 394:Generated_Source\PSoC4/I2C_Accel.c ****     {
 395:Generated_Source\PSoC4/I2C_Accel.c ****         /* Unknown mode: do nothing */
 396:Generated_Source\PSoC4/I2C_Accel.c ****     }
 397:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 398:Generated_Source\PSoC4/I2C_Accel.c **** 
 399:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_SPI_CONST_CFG)
 400:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_SpiPostEnable();
 401:Generated_Source\PSoC4/I2C_Accel.c **** 
 402:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_UART_CONST_CFG)
 403:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_UartPostEnable();
 404:Generated_Source\PSoC4/I2C_Accel.c **** 
 405:Generated_Source\PSoC4/I2C_Accel.c **** #else
 406:Generated_Source\PSoC4/I2C_Accel.c ****     /* Unknown mode: do nothing */
 407:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 408:Generated_Source\PSoC4/I2C_Accel.c **** }
 359              		.loc 1 408 0
 360 0004 BD46     		mov	sp, r7
 361              		@ sp needed
 362 0006 80BD     		pop	{r7, pc}
 363              		.cfi_endproc
 364              	.LFE8:
 365              		.size	I2C_Accel_ScbModePostEnable, .-I2C_Accel_ScbModePostEnable
 366              		.section	.text.I2C_Accel_ScbModeStop,"ax",%progbits
 367              		.align	2
 368              		.code	16
 369              		.thumb_func
 370              		.type	I2C_Accel_ScbModeStop, %function
 371              	I2C_Accel_ScbModeStop:
 372              	.LFB9:
 409:Generated_Source\PSoC4/I2C_Accel.c **** 
 410:Generated_Source\PSoC4/I2C_Accel.c **** 
 411:Generated_Source\PSoC4/I2C_Accel.c **** /*******************************************************************************
 412:Generated_Source\PSoC4/I2C_Accel.c **** * Function Name: I2C_Accel_ScbModeStop
 413:Generated_Source\PSoC4/I2C_Accel.c **** ****************************************************************************//**
 414:Generated_Source\PSoC4/I2C_Accel.c **** *
 415:Generated_Source\PSoC4/I2C_Accel.c **** *  Calls the Stop function for a specific operation mode.
 416:Generated_Source\PSoC4/I2C_Accel.c **** *
 417:Generated_Source\PSoC4/I2C_Accel.c **** *******************************************************************************/
 418:Generated_Source\PSoC4/I2C_Accel.c **** static void I2C_Accel_ScbModeStop(void)
 419:Generated_Source\PSoC4/I2C_Accel.c **** {
 373              		.loc 1 419 0
 374              		.cfi_startproc
 375 0000 80B5     		push	{r7, lr}
 376              		.cfi_def_cfa_offset 8
 377              		.cfi_offset 7, -8
 378              		.cfi_offset 14, -4
 379 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 15


 380              		.cfi_def_cfa_register 7
 420:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
 421:Generated_Source\PSoC4/I2C_Accel.c ****     if (I2C_Accel_SCB_MODE_I2C_RUNTM_CFG)
 422:Generated_Source\PSoC4/I2C_Accel.c ****     {
 423:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_I2CStop();
 424:Generated_Source\PSoC4/I2C_Accel.c ****     }
 425:Generated_Source\PSoC4/I2C_Accel.c ****     else if (I2C_Accel_SCB_MODE_EZI2C_RUNTM_CFG)
 426:Generated_Source\PSoC4/I2C_Accel.c ****     {
 427:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_EzI2CStop();
 428:Generated_Source\PSoC4/I2C_Accel.c ****     }
 429:Generated_Source\PSoC4/I2C_Accel.c **** #if (!I2C_Accel_CY_SCBIP_V1)
 430:Generated_Source\PSoC4/I2C_Accel.c ****     else if (I2C_Accel_SCB_MODE_SPI_RUNTM_CFG)
 431:Generated_Source\PSoC4/I2C_Accel.c ****     {
 432:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SpiStop();
 433:Generated_Source\PSoC4/I2C_Accel.c ****     }
 434:Generated_Source\PSoC4/I2C_Accel.c ****     else if (I2C_Accel_SCB_MODE_UART_RUNTM_CFG)
 435:Generated_Source\PSoC4/I2C_Accel.c ****     {
 436:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_UartStop();
 437:Generated_Source\PSoC4/I2C_Accel.c ****     }
 438:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 439:Generated_Source\PSoC4/I2C_Accel.c ****     else
 440:Generated_Source\PSoC4/I2C_Accel.c ****     {
 441:Generated_Source\PSoC4/I2C_Accel.c ****         /* Unknown mode: do nothing */
 442:Generated_Source\PSoC4/I2C_Accel.c ****     }
 443:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_I2C_CONST_CFG)
 444:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_I2CStop();
 381              		.loc 1 444 0
 382 0004 FFF7FEFF 		bl	I2C_Accel_I2CStop
 445:Generated_Source\PSoC4/I2C_Accel.c **** 
 446:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_EZI2C_CONST_CFG)
 447:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_EzI2CStop();
 448:Generated_Source\PSoC4/I2C_Accel.c **** 
 449:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_SPI_CONST_CFG)
 450:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_SpiStop();
 451:Generated_Source\PSoC4/I2C_Accel.c **** 
 452:Generated_Source\PSoC4/I2C_Accel.c **** #elif (I2C_Accel_SCB_MODE_UART_CONST_CFG)
 453:Generated_Source\PSoC4/I2C_Accel.c ****     I2C_Accel_UartStop();
 454:Generated_Source\PSoC4/I2C_Accel.c **** 
 455:Generated_Source\PSoC4/I2C_Accel.c **** #else
 456:Generated_Source\PSoC4/I2C_Accel.c ****     /* Unknown mode: do nothing */
 457:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 458:Generated_Source\PSoC4/I2C_Accel.c **** }
 383              		.loc 1 458 0
 384 0008 BD46     		mov	sp, r7
 385              		@ sp needed
 386 000a 80BD     		pop	{r7, pc}
 387              		.cfi_endproc
 388              	.LFE9:
 389              		.size	I2C_Accel_ScbModeStop, .-I2C_Accel_ScbModeStop
 390              		.section	.text.I2C_Accel_I2CSlaveNackGeneration,"ax",%progbits
 391              		.align	2
 392              		.global	I2C_Accel_I2CSlaveNackGeneration
 393              		.code	16
 394              		.thumb_func
 395              		.type	I2C_Accel_I2CSlaveNackGeneration, %function
 396              	I2C_Accel_I2CSlaveNackGeneration:
 397              	.LFB10:
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 16


 459:Generated_Source\PSoC4/I2C_Accel.c **** 
 460:Generated_Source\PSoC4/I2C_Accel.c **** 
 461:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG)
 462:Generated_Source\PSoC4/I2C_Accel.c ****     /*******************************************************************************
 463:Generated_Source\PSoC4/I2C_Accel.c ****     * Function Name: I2C_Accel_SetPins
 464:Generated_Source\PSoC4/I2C_Accel.c ****     ****************************************************************************//**
 465:Generated_Source\PSoC4/I2C_Accel.c ****     *
 466:Generated_Source\PSoC4/I2C_Accel.c ****     *  Sets the pins settings accordingly to the selected operation mode.
 467:Generated_Source\PSoC4/I2C_Accel.c ****     *  Only available in the Unconfigured operation mode. The mode specific
 468:Generated_Source\PSoC4/I2C_Accel.c ****     *  initialization function calls it.
 469:Generated_Source\PSoC4/I2C_Accel.c ****     *  Pins configuration is set by PSoC Creator when a specific mode of operation
 470:Generated_Source\PSoC4/I2C_Accel.c ****     *  is selected in design time.
 471:Generated_Source\PSoC4/I2C_Accel.c ****     *
 472:Generated_Source\PSoC4/I2C_Accel.c ****     *  \param mode:      Mode of SCB operation.
 473:Generated_Source\PSoC4/I2C_Accel.c ****     *  \param subMode:   Sub-mode of SCB operation. It is only required for SPI and UART
 474:Generated_Source\PSoC4/I2C_Accel.c ****     *             modes.
 475:Generated_Source\PSoC4/I2C_Accel.c ****     *  \param uartEnableMask: enables TX or RX direction and RTS and CTS signals.
 476:Generated_Source\PSoC4/I2C_Accel.c ****     *
 477:Generated_Source\PSoC4/I2C_Accel.c ****     *******************************************************************************/
 478:Generated_Source\PSoC4/I2C_Accel.c ****     void I2C_Accel_SetPins(uint32 mode, uint32 subMode, uint32 uartEnableMask)
 479:Generated_Source\PSoC4/I2C_Accel.c ****     {
 480:Generated_Source\PSoC4/I2C_Accel.c ****         uint32 pinsDm[I2C_Accel_SCB_PINS_NUMBER];
 481:Generated_Source\PSoC4/I2C_Accel.c ****         uint32 i;
 482:Generated_Source\PSoC4/I2C_Accel.c ****         
 483:Generated_Source\PSoC4/I2C_Accel.c ****     #if (!I2C_Accel_CY_SCBIP_V1)
 484:Generated_Source\PSoC4/I2C_Accel.c ****         uint32 pinsInBuf = 0u;
 485:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 486:Generated_Source\PSoC4/I2C_Accel.c ****         
 487:Generated_Source\PSoC4/I2C_Accel.c ****         uint32 hsiomSel[I2C_Accel_SCB_PINS_NUMBER] = 
 488:Generated_Source\PSoC4/I2C_Accel.c ****         {
 489:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_RX_SCL_MOSI_HSIOM_SEL_GPIO,
 490:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_TX_SDA_MISO_HSIOM_SEL_GPIO,
 491:Generated_Source\PSoC4/I2C_Accel.c ****             0u,
 492:Generated_Source\PSoC4/I2C_Accel.c ****             0u,
 493:Generated_Source\PSoC4/I2C_Accel.c ****             0u,
 494:Generated_Source\PSoC4/I2C_Accel.c ****             0u,
 495:Generated_Source\PSoC4/I2C_Accel.c ****             0u,
 496:Generated_Source\PSoC4/I2C_Accel.c ****         };
 497:Generated_Source\PSoC4/I2C_Accel.c **** 
 498:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_CY_SCBIP_V1)
 499:Generated_Source\PSoC4/I2C_Accel.c ****         /* Supress compiler warning. */
 500:Generated_Source\PSoC4/I2C_Accel.c ****         if ((0u == subMode) || (0u == uartEnableMask))
 501:Generated_Source\PSoC4/I2C_Accel.c ****         {
 502:Generated_Source\PSoC4/I2C_Accel.c ****         }
 503:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_CY_SCBIP_V1) */
 504:Generated_Source\PSoC4/I2C_Accel.c **** 
 505:Generated_Source\PSoC4/I2C_Accel.c ****         /* Set default HSIOM to GPIO and Drive Mode to Analog Hi-Z */
 506:Generated_Source\PSoC4/I2C_Accel.c ****         for (i = 0u; i < I2C_Accel_SCB_PINS_NUMBER; i++)
 507:Generated_Source\PSoC4/I2C_Accel.c ****         {
 508:Generated_Source\PSoC4/I2C_Accel.c ****             pinsDm[i] = I2C_Accel_PIN_DM_ALG_HIZ;
 509:Generated_Source\PSoC4/I2C_Accel.c ****         }
 510:Generated_Source\PSoC4/I2C_Accel.c **** 
 511:Generated_Source\PSoC4/I2C_Accel.c ****         if ((I2C_Accel_SCB_MODE_I2C   == mode) ||
 512:Generated_Source\PSoC4/I2C_Accel.c ****             (I2C_Accel_SCB_MODE_EZI2C == mode))
 513:Generated_Source\PSoC4/I2C_Accel.c ****         {
 514:Generated_Source\PSoC4/I2C_Accel.c ****         #if (I2C_Accel_RX_SCL_MOSI_PIN)
 515:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_SCL_MOSI_HSIOM_SEL_I2C;
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 17


 516:Generated_Source\PSoC4/I2C_Accel.c ****             pinsDm  [I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_OD_LO;
 517:Generated_Source\PSoC4/I2C_Accel.c ****         #elif (I2C_Accel_RX_WAKE_SCL_MOSI_PIN)
 518:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_WAKE_SCL_MOSI_HSIOM_SEL_I
 519:Generated_Source\PSoC4/I2C_Accel.c ****             pinsDm  [I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_OD_LO;
 520:Generated_Source\PSoC4/I2C_Accel.c ****         #else
 521:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (I2C_Accel_RX_SCL_MOSI_PIN) */
 522:Generated_Source\PSoC4/I2C_Accel.c ****         
 523:Generated_Source\PSoC4/I2C_Accel.c ****         #if (I2C_Accel_TX_SDA_MISO_PIN)
 524:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_TX_SDA_MISO_HSIOM_SEL_I2C;
 525:Generated_Source\PSoC4/I2C_Accel.c ****             pinsDm  [I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_PIN_DM_OD_LO;
 526:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (I2C_Accel_TX_SDA_MISO_PIN) */
 527:Generated_Source\PSoC4/I2C_Accel.c ****         }
 528:Generated_Source\PSoC4/I2C_Accel.c ****     #if (!I2C_Accel_CY_SCBIP_V1)
 529:Generated_Source\PSoC4/I2C_Accel.c ****         else if (I2C_Accel_SCB_MODE_SPI == mode)
 530:Generated_Source\PSoC4/I2C_Accel.c ****         {
 531:Generated_Source\PSoC4/I2C_Accel.c ****         #if (I2C_Accel_RX_SCL_MOSI_PIN)
 532:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_SCL_MOSI_HSIOM_SEL_SPI;
 533:Generated_Source\PSoC4/I2C_Accel.c ****         #elif (I2C_Accel_RX_WAKE_SCL_MOSI_PIN)
 534:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_WAKE_SCL_MOSI_HSIOM_SEL_S
 535:Generated_Source\PSoC4/I2C_Accel.c ****         #else
 536:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (I2C_Accel_RX_SCL_MOSI_PIN) */
 537:Generated_Source\PSoC4/I2C_Accel.c ****         
 538:Generated_Source\PSoC4/I2C_Accel.c ****         #if (I2C_Accel_TX_SDA_MISO_PIN)
 539:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_TX_SDA_MISO_HSIOM_SEL_SPI;
 540:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (I2C_Accel_TX_SDA_MISO_PIN) */
 541:Generated_Source\PSoC4/I2C_Accel.c ****         
 542:Generated_Source\PSoC4/I2C_Accel.c ****         #if (I2C_Accel_SCLK_PIN)
 543:Generated_Source\PSoC4/I2C_Accel.c ****             hsiomSel[I2C_Accel_SCLK_PIN_INDEX] = I2C_Accel_SCLK_HSIOM_SEL_SPI;
 544:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (I2C_Accel_SCLK_PIN) */
 545:Generated_Source\PSoC4/I2C_Accel.c **** 
 546:Generated_Source\PSoC4/I2C_Accel.c ****             if (I2C_Accel_SPI_SLAVE == subMode)
 547:Generated_Source\PSoC4/I2C_Accel.c ****             {
 548:Generated_Source\PSoC4/I2C_Accel.c ****                 /* Slave */
 549:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 550:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 551:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_SCLK_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 552:Generated_Source\PSoC4/I2C_Accel.c **** 
 553:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SS0_PIN)
 554:Generated_Source\PSoC4/I2C_Accel.c ****                 /* Only SS0 is valid choice for Slave */
 555:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel[I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_SS0_HSIOM_SEL_SPI;
 556:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm  [I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 557:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SS0_PIN) */
 558:Generated_Source\PSoC4/I2C_Accel.c **** 
 559:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_TX_SDA_MISO_PIN)
 560:Generated_Source\PSoC4/I2C_Accel.c ****                 /* Disable input buffer */
 561:Generated_Source\PSoC4/I2C_Accel.c ****                  pinsInBuf |= I2C_Accel_TX_SDA_MISO_PIN_MASK;
 562:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_TX_SDA_MISO_PIN) */
 563:Generated_Source\PSoC4/I2C_Accel.c ****             }
 564:Generated_Source\PSoC4/I2C_Accel.c ****             else 
 565:Generated_Source\PSoC4/I2C_Accel.c ****             {
 566:Generated_Source\PSoC4/I2C_Accel.c ****                 /* (Master) */
 567:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 568:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 569:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm[I2C_Accel_SCLK_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 570:Generated_Source\PSoC4/I2C_Accel.c **** 
 571:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SS0_PIN)
 572:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel [I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_SS0_HSIOM_SEL_SPI;
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 18


 573:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm   [I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 574:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_SS0_PIN_MASK;
 575:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SS0_PIN) */
 576:Generated_Source\PSoC4/I2C_Accel.c **** 
 577:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SS1_PIN)
 578:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel [I2C_Accel_SS1_PIN_INDEX] = I2C_Accel_SS1_HSIOM_SEL_SPI;
 579:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm   [I2C_Accel_SS1_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 580:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_SS1_PIN_MASK;
 581:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SS1_PIN) */
 582:Generated_Source\PSoC4/I2C_Accel.c **** 
 583:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SS2_PIN)
 584:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel [I2C_Accel_SS2_PIN_INDEX] = I2C_Accel_SS2_HSIOM_SEL_SPI;
 585:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm   [I2C_Accel_SS2_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 586:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_SS2_PIN_MASK;
 587:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SS2_PIN) */
 588:Generated_Source\PSoC4/I2C_Accel.c **** 
 589:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SS3_PIN)
 590:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel [I2C_Accel_SS3_PIN_INDEX] = I2C_Accel_SS3_HSIOM_SEL_SPI;
 591:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm   [I2C_Accel_SS3_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 592:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_SS3_PIN_MASK;
 593:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SS3_PIN) */
 594:Generated_Source\PSoC4/I2C_Accel.c **** 
 595:Generated_Source\PSoC4/I2C_Accel.c ****                 /* Disable input buffers */
 596:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_RX_SCL_MOSI_PIN)
 597:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_RX_SCL_MOSI_PIN_MASK;
 598:Generated_Source\PSoC4/I2C_Accel.c ****             #elif (I2C_Accel_RX_WAKE_SCL_MOSI_PIN)
 599:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_RX_WAKE_SCL_MOSI_PIN_MASK;
 600:Generated_Source\PSoC4/I2C_Accel.c ****             #else
 601:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_RX_SCL_MOSI_PIN) */
 602:Generated_Source\PSoC4/I2C_Accel.c **** 
 603:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_SCLK_PIN)
 604:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsInBuf |= I2C_Accel_SCLK_PIN_MASK;
 605:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_SCLK_PIN) */
 606:Generated_Source\PSoC4/I2C_Accel.c ****             }
 607:Generated_Source\PSoC4/I2C_Accel.c ****         }
 608:Generated_Source\PSoC4/I2C_Accel.c ****         else /* UART */
 609:Generated_Source\PSoC4/I2C_Accel.c ****         {
 610:Generated_Source\PSoC4/I2C_Accel.c ****             if (I2C_Accel_UART_MODE_SMARTCARD == subMode)
 611:Generated_Source\PSoC4/I2C_Accel.c ****             {
 612:Generated_Source\PSoC4/I2C_Accel.c ****                 /* SmartCard */
 613:Generated_Source\PSoC4/I2C_Accel.c ****             #if (I2C_Accel_TX_SDA_MISO_PIN)
 614:Generated_Source\PSoC4/I2C_Accel.c ****                 hsiomSel[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_TX_SDA_MISO_HSIOM_SEL_UART;
 615:Generated_Source\PSoC4/I2C_Accel.c ****                 pinsDm  [I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_PIN_DM_OD_LO;
 616:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* (I2C_Accel_TX_SDA_MISO_PIN) */
 617:Generated_Source\PSoC4/I2C_Accel.c ****             }
 618:Generated_Source\PSoC4/I2C_Accel.c ****             else /* Standard or IrDA */
 619:Generated_Source\PSoC4/I2C_Accel.c ****             {
 620:Generated_Source\PSoC4/I2C_Accel.c ****                 if (0u != (I2C_Accel_UART_RX_PIN_ENABLE & uartEnableMask))
 621:Generated_Source\PSoC4/I2C_Accel.c ****                 {
 622:Generated_Source\PSoC4/I2C_Accel.c ****                 #if (I2C_Accel_RX_SCL_MOSI_PIN)
 623:Generated_Source\PSoC4/I2C_Accel.c ****                     hsiomSel[I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_SCL_MOSI_HSIOM_SEL_UAR
 624:Generated_Source\PSoC4/I2C_Accel.c ****                     pinsDm  [I2C_Accel_RX_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 625:Generated_Source\PSoC4/I2C_Accel.c ****                 #elif (I2C_Accel_RX_WAKE_SCL_MOSI_PIN)
 626:Generated_Source\PSoC4/I2C_Accel.c ****                     hsiomSel[I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2C_Accel_RX_WAKE_SCL_MOSI_HSI
 627:Generated_Source\PSoC4/I2C_Accel.c ****                     pinsDm  [I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 628:Generated_Source\PSoC4/I2C_Accel.c ****                 #else
 629:Generated_Source\PSoC4/I2C_Accel.c ****                 #endif /* (I2C_Accel_RX_SCL_MOSI_PIN) */
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 19


 630:Generated_Source\PSoC4/I2C_Accel.c ****                 }
 631:Generated_Source\PSoC4/I2C_Accel.c **** 
 632:Generated_Source\PSoC4/I2C_Accel.c ****                 if (0u != (I2C_Accel_UART_TX_PIN_ENABLE & uartEnableMask))
 633:Generated_Source\PSoC4/I2C_Accel.c ****                 {
 634:Generated_Source\PSoC4/I2C_Accel.c ****                 #if (I2C_Accel_TX_SDA_MISO_PIN)
 635:Generated_Source\PSoC4/I2C_Accel.c ****                     hsiomSel[I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_TX_SDA_MISO_HSIOM_SEL_UAR
 636:Generated_Source\PSoC4/I2C_Accel.c ****                     pinsDm  [I2C_Accel_TX_SDA_MISO_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 637:Generated_Source\PSoC4/I2C_Accel.c ****                     
 638:Generated_Source\PSoC4/I2C_Accel.c ****                     /* Disable input buffer */
 639:Generated_Source\PSoC4/I2C_Accel.c ****                     pinsInBuf |= I2C_Accel_TX_SDA_MISO_PIN_MASK;
 640:Generated_Source\PSoC4/I2C_Accel.c ****                 #endif /* (I2C_Accel_TX_SDA_MISO_PIN) */
 641:Generated_Source\PSoC4/I2C_Accel.c ****                 }
 642:Generated_Source\PSoC4/I2C_Accel.c **** 
 643:Generated_Source\PSoC4/I2C_Accel.c ****             #if !(I2C_Accel_CY_SCBIP_V0 || I2C_Accel_CY_SCBIP_V1)
 644:Generated_Source\PSoC4/I2C_Accel.c ****                 if (I2C_Accel_UART_MODE_STD == subMode)
 645:Generated_Source\PSoC4/I2C_Accel.c ****                 {
 646:Generated_Source\PSoC4/I2C_Accel.c ****                     if (0u != (I2C_Accel_UART_CTS_PIN_ENABLE & uartEnableMask))
 647:Generated_Source\PSoC4/I2C_Accel.c ****                     {
 648:Generated_Source\PSoC4/I2C_Accel.c ****                         /* CTS input is multiplexed with SCLK */
 649:Generated_Source\PSoC4/I2C_Accel.c ****                     #if (I2C_Accel_SCLK_PIN)
 650:Generated_Source\PSoC4/I2C_Accel.c ****                         hsiomSel[I2C_Accel_SCLK_PIN_INDEX] = I2C_Accel_SCLK_HSIOM_SEL_UART;
 651:Generated_Source\PSoC4/I2C_Accel.c ****                         pinsDm  [I2C_Accel_SCLK_PIN_INDEX] = I2C_Accel_PIN_DM_DIG_HIZ;
 652:Generated_Source\PSoC4/I2C_Accel.c ****                     #endif /* (I2C_Accel_SCLK_PIN) */
 653:Generated_Source\PSoC4/I2C_Accel.c ****                     }
 654:Generated_Source\PSoC4/I2C_Accel.c **** 
 655:Generated_Source\PSoC4/I2C_Accel.c ****                     if (0u != (I2C_Accel_UART_RTS_PIN_ENABLE & uartEnableMask))
 656:Generated_Source\PSoC4/I2C_Accel.c ****                     {
 657:Generated_Source\PSoC4/I2C_Accel.c ****                         /* RTS output is multiplexed with SS0 */
 658:Generated_Source\PSoC4/I2C_Accel.c ****                     #if (I2C_Accel_SS0_PIN)
 659:Generated_Source\PSoC4/I2C_Accel.c ****                         hsiomSel[I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_SS0_HSIOM_SEL_UART;
 660:Generated_Source\PSoC4/I2C_Accel.c ****                         pinsDm  [I2C_Accel_SS0_PIN_INDEX] = I2C_Accel_PIN_DM_STRONG;
 661:Generated_Source\PSoC4/I2C_Accel.c ****                         
 662:Generated_Source\PSoC4/I2C_Accel.c ****                         /* Disable input buffer */
 663:Generated_Source\PSoC4/I2C_Accel.c ****                         pinsInBuf |= I2C_Accel_SS0_PIN_MASK;
 664:Generated_Source\PSoC4/I2C_Accel.c ****                     #endif /* (I2C_Accel_SS0_PIN) */
 665:Generated_Source\PSoC4/I2C_Accel.c ****                     }
 666:Generated_Source\PSoC4/I2C_Accel.c ****                 }
 667:Generated_Source\PSoC4/I2C_Accel.c ****             #endif /* !(I2C_Accel_CY_SCBIP_V0 || I2C_Accel_CY_SCBIP_V1) */
 668:Generated_Source\PSoC4/I2C_Accel.c ****             }
 669:Generated_Source\PSoC4/I2C_Accel.c ****         }
 670:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 671:Generated_Source\PSoC4/I2C_Accel.c **** 
 672:Generated_Source\PSoC4/I2C_Accel.c ****     /* Configure pins: set HSIOM, DM and InputBufEnable */
 673:Generated_Source\PSoC4/I2C_Accel.c ****     /* Note: the DR register settings do not effect the pin output if HSIOM is other than GPIO */
 674:Generated_Source\PSoC4/I2C_Accel.c **** 
 675:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_RX_SCL_MOSI_PIN)
 676:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_RX_SCL_MOSI_HSIOM_REG,
 677:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_RX_SCL_MOSI_HSIOM_MASK,
 678:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_RX_SCL_MOSI_HSIOM_POS,
 679:Generated_Source\PSoC4/I2C_Accel.c ****                                         hsiomSel[I2C_Accel_RX_SCL_MOSI_PIN_INDEX]);
 680:Generated_Source\PSoC4/I2C_Accel.c **** 
 681:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_uart_rx_i2c_scl_spi_mosi_SetDriveMode((uint8) pinsDm[I2C_Accel_RX_SCL_MOSI_PIN_IN
 682:Generated_Source\PSoC4/I2C_Accel.c **** 
 683:Generated_Source\PSoC4/I2C_Accel.c ****         #if (!I2C_Accel_CY_SCBIP_V1)
 684:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_SET_INP_DIS(I2C_Accel_uart_rx_i2c_scl_spi_mosi_INP_DIS,
 685:Generated_Source\PSoC4/I2C_Accel.c ****                                          I2C_Accel_uart_rx_i2c_scl_spi_mosi_MASK,
 686:Generated_Source\PSoC4/I2C_Accel.c ****                                          (0u != (pinsInBuf & I2C_Accel_RX_SCL_MOSI_PIN_MASK)));
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 20


 687:Generated_Source\PSoC4/I2C_Accel.c ****         #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 688:Generated_Source\PSoC4/I2C_Accel.c ****     
 689:Generated_Source\PSoC4/I2C_Accel.c ****     #elif (I2C_Accel_RX_WAKE_SCL_MOSI_PIN)
 690:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_RX_WAKE_SCL_MOSI_HSIOM_REG,
 691:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_RX_WAKE_SCL_MOSI_HSIOM_MASK,
 692:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_RX_WAKE_SCL_MOSI_HSIOM_POS,
 693:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_RX_WAKE_SCL_MOSI_PIN_INDEX]);
 694:Generated_Source\PSoC4/I2C_Accel.c **** 
 695:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_uart_rx_wake_i2c_scl_spi_mosi_SetDriveMode((uint8)
 696:Generated_Source\PSoC4/I2C_Accel.c ****                                                                pinsDm[I2C_Accel_RX_WAKE_SCL_MOSI_PI
 697:Generated_Source\PSoC4/I2C_Accel.c **** 
 698:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_uart_rx_wake_i2c_scl_spi_mosi_INP_DIS,
 699:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_uart_rx_wake_i2c_scl_spi_mosi_MASK,
 700:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_RX_WAKE_SCL_MOSI_PIN_MASK)));
 701:Generated_Source\PSoC4/I2C_Accel.c **** 
 702:Generated_Source\PSoC4/I2C_Accel.c ****          /* Set interrupt on falling edge */
 703:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INCFG_TYPE(I2C_Accel_RX_WAKE_SCL_MOSI_INTCFG_REG,
 704:Generated_Source\PSoC4/I2C_Accel.c ****                                         I2C_Accel_RX_WAKE_SCL_MOSI_INTCFG_TYPE_MASK,
 705:Generated_Source\PSoC4/I2C_Accel.c ****                                         I2C_Accel_RX_WAKE_SCL_MOSI_INTCFG_TYPE_POS,
 706:Generated_Source\PSoC4/I2C_Accel.c ****                                         I2C_Accel_INTCFG_TYPE_FALLING_EDGE);
 707:Generated_Source\PSoC4/I2C_Accel.c ****     #else
 708:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_RX_WAKE_SCL_MOSI_PIN) */
 709:Generated_Source\PSoC4/I2C_Accel.c **** 
 710:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_TX_SDA_MISO_PIN)
 711:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_TX_SDA_MISO_HSIOM_REG,
 712:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_TX_SDA_MISO_HSIOM_MASK,
 713:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_TX_SDA_MISO_HSIOM_POS,
 714:Generated_Source\PSoC4/I2C_Accel.c ****                                         hsiomSel[I2C_Accel_TX_SDA_MISO_PIN_INDEX]);
 715:Generated_Source\PSoC4/I2C_Accel.c **** 
 716:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_uart_tx_i2c_sda_spi_miso_SetDriveMode((uint8) pinsDm[I2C_Accel_TX_SDA_MISO_PIN_IN
 717:Generated_Source\PSoC4/I2C_Accel.c **** 
 718:Generated_Source\PSoC4/I2C_Accel.c ****     #if (!I2C_Accel_CY_SCBIP_V1)
 719:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_uart_tx_i2c_sda_spi_miso_INP_DIS,
 720:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_uart_tx_i2c_sda_spi_miso_MASK,
 721:Generated_Source\PSoC4/I2C_Accel.c ****                                     (0u != (pinsInBuf & I2C_Accel_TX_SDA_MISO_PIN_MASK)));
 722:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (!I2C_Accel_CY_SCBIP_V1) */
 723:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_RX_SCL_MOSI_PIN) */
 724:Generated_Source\PSoC4/I2C_Accel.c **** 
 725:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SCLK_PIN)
 726:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_SCLK_HSIOM_REG,
 727:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SCLK_HSIOM_MASK,
 728:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SCLK_HSIOM_POS,
 729:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_SCLK_PIN_INDEX]);
 730:Generated_Source\PSoC4/I2C_Accel.c **** 
 731:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_spi_sclk_SetDriveMode((uint8) pinsDm[I2C_Accel_SCLK_PIN_INDEX]);
 732:Generated_Source\PSoC4/I2C_Accel.c **** 
 733:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_spi_sclk_INP_DIS,
 734:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_spi_sclk_MASK,
 735:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_SCLK_PIN_MASK)));
 736:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SCLK_PIN) */
 737:Generated_Source\PSoC4/I2C_Accel.c **** 
 738:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SS0_PIN)
 739:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_SS0_HSIOM_REG,
 740:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS0_HSIOM_MASK,
 741:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS0_HSIOM_POS,
 742:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_SS0_PIN_INDEX]);
 743:Generated_Source\PSoC4/I2C_Accel.c **** 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 21


 744:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_spi_ss0_SetDriveMode((uint8) pinsDm[I2C_Accel_SS0_PIN_INDEX]);
 745:Generated_Source\PSoC4/I2C_Accel.c **** 
 746:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_spi_ss0_INP_DIS,
 747:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_spi_ss0_MASK,
 748:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_SS0_PIN_MASK)));
 749:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SS0_PIN) */
 750:Generated_Source\PSoC4/I2C_Accel.c **** 
 751:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SS1_PIN)
 752:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_SS1_HSIOM_REG,
 753:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS1_HSIOM_MASK,
 754:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS1_HSIOM_POS,
 755:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_SS1_PIN_INDEX]);
 756:Generated_Source\PSoC4/I2C_Accel.c **** 
 757:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_spi_ss1_SetDriveMode((uint8) pinsDm[I2C_Accel_SS1_PIN_INDEX]);
 758:Generated_Source\PSoC4/I2C_Accel.c **** 
 759:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_spi_ss1_INP_DIS,
 760:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_spi_ss1_MASK,
 761:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_SS1_PIN_MASK)));
 762:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SS1_PIN) */
 763:Generated_Source\PSoC4/I2C_Accel.c **** 
 764:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SS2_PIN)
 765:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_SS2_HSIOM_REG,
 766:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS2_HSIOM_MASK,
 767:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS2_HSIOM_POS,
 768:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_SS2_PIN_INDEX]);
 769:Generated_Source\PSoC4/I2C_Accel.c **** 
 770:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_spi_ss2_SetDriveMode((uint8) pinsDm[I2C_Accel_SS2_PIN_INDEX]);
 771:Generated_Source\PSoC4/I2C_Accel.c **** 
 772:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_spi_ss2_INP_DIS,
 773:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_spi_ss2_MASK,
 774:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_SS2_PIN_MASK)));
 775:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SS2_PIN) */
 776:Generated_Source\PSoC4/I2C_Accel.c **** 
 777:Generated_Source\PSoC4/I2C_Accel.c ****     #if (I2C_Accel_SS3_PIN)
 778:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_HSIOM_SEL(I2C_Accel_SS3_HSIOM_REG,
 779:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS3_HSIOM_MASK,
 780:Generated_Source\PSoC4/I2C_Accel.c ****                                        I2C_Accel_SS3_HSIOM_POS,
 781:Generated_Source\PSoC4/I2C_Accel.c ****                                        hsiomSel[I2C_Accel_SS3_PIN_INDEX]);
 782:Generated_Source\PSoC4/I2C_Accel.c **** 
 783:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_spi_ss3_SetDriveMode((uint8) pinsDm[I2C_Accel_SS3_PIN_INDEX]);
 784:Generated_Source\PSoC4/I2C_Accel.c **** 
 785:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_SET_INP_DIS(I2C_Accel_spi_ss3_INP_DIS,
 786:Generated_Source\PSoC4/I2C_Accel.c ****                                      I2C_Accel_spi_ss3_MASK,
 787:Generated_Source\PSoC4/I2C_Accel.c ****                                      (0u != (pinsInBuf & I2C_Accel_SS3_PIN_MASK)));
 788:Generated_Source\PSoC4/I2C_Accel.c ****     #endif /* (I2C_Accel_SS3_PIN) */
 789:Generated_Source\PSoC4/I2C_Accel.c ****     }
 790:Generated_Source\PSoC4/I2C_Accel.c **** 
 791:Generated_Source\PSoC4/I2C_Accel.c **** #endif /* (I2C_Accel_SCB_MODE_UNCONFIG_CONST_CFG) */
 792:Generated_Source\PSoC4/I2C_Accel.c **** 
 793:Generated_Source\PSoC4/I2C_Accel.c **** 
 794:Generated_Source\PSoC4/I2C_Accel.c **** #if (I2C_Accel_CY_SCBIP_V0 || I2C_Accel_CY_SCBIP_V1)
 795:Generated_Source\PSoC4/I2C_Accel.c ****     /*******************************************************************************
 796:Generated_Source\PSoC4/I2C_Accel.c ****     * Function Name: I2C_Accel_I2CSlaveNackGeneration
 797:Generated_Source\PSoC4/I2C_Accel.c ****     ****************************************************************************//**
 798:Generated_Source\PSoC4/I2C_Accel.c ****     *
 799:Generated_Source\PSoC4/I2C_Accel.c ****     *  Sets command to generate NACK to the address or data.
 800:Generated_Source\PSoC4/I2C_Accel.c ****     *
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 22


 801:Generated_Source\PSoC4/I2C_Accel.c ****     *******************************************************************************/
 802:Generated_Source\PSoC4/I2C_Accel.c ****     void I2C_Accel_I2CSlaveNackGeneration(void)
 803:Generated_Source\PSoC4/I2C_Accel.c ****     {
 398              		.loc 1 803 0
 399              		.cfi_startproc
 400 0000 80B5     		push	{r7, lr}
 401              		.cfi_def_cfa_offset 8
 402              		.cfi_offset 7, -8
 403              		.cfi_offset 14, -4
 404 0002 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 804:Generated_Source\PSoC4/I2C_Accel.c ****         /* Check for EC_AM toggle condition: EC_AM and clock stretching for address are enabled */
 805:Generated_Source\PSoC4/I2C_Accel.c ****         if ((0u != (I2C_Accel_CTRL_REG & I2C_Accel_CTRL_EC_AM_MODE)) &&
 406              		.loc 1 805 0
 407 0004 0E4B     		ldr	r3, .L26
 408 0006 1A68     		ldr	r2, [r3]
 409 0008 8023     		mov	r3, #128
 410 000a 5B00     		lsl	r3, r3, #1
 411 000c 1340     		and	r3, r2
 412 000e 12D0     		beq	.L25
 806:Generated_Source\PSoC4/I2C_Accel.c ****             (0u == (I2C_Accel_I2C_CTRL_REG & I2C_Accel_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 413              		.loc 1 806 0 discriminator 1
 414 0010 0C4B     		ldr	r3, .L26+4
 415 0012 1A68     		ldr	r2, [r3]
 416 0014 8023     		mov	r3, #128
 417 0016 DB01     		lsl	r3, r3, #7
 418 0018 1340     		and	r3, r2
 805:Generated_Source\PSoC4/I2C_Accel.c ****             (0u == (I2C_Accel_I2C_CTRL_REG & I2C_Accel_I2C_CTRL_S_NOT_READY_ADDR_NACK)))
 419              		.loc 1 805 0 discriminator 1
 420 001a 0CD1     		bne	.L25
 807:Generated_Source\PSoC4/I2C_Accel.c ****         {
 808:Generated_Source\PSoC4/I2C_Accel.c ****             /* Toggle EC_AM before NACK generation */
 809:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_CTRL_REG &= ~I2C_Accel_CTRL_EC_AM_MODE;
 421              		.loc 1 809 0
 422 001c 084B     		ldr	r3, .L26
 423 001e 084A     		ldr	r2, .L26
 424 0020 1268     		ldr	r2, [r2]
 425 0022 0949     		ldr	r1, .L26+8
 426 0024 0A40     		and	r2, r1
 427 0026 1A60     		str	r2, [r3]
 810:Generated_Source\PSoC4/I2C_Accel.c ****             I2C_Accel_CTRL_REG |=  I2C_Accel_CTRL_EC_AM_MODE;
 428              		.loc 1 810 0
 429 0028 054B     		ldr	r3, .L26
 430 002a 054A     		ldr	r2, .L26
 431 002c 1268     		ldr	r2, [r2]
 432 002e 8021     		mov	r1, #128
 433 0030 4900     		lsl	r1, r1, #1
 434 0032 0A43     		orr	r2, r1
 435 0034 1A60     		str	r2, [r3]
 436              	.L25:
 811:Generated_Source\PSoC4/I2C_Accel.c ****         }
 812:Generated_Source\PSoC4/I2C_Accel.c **** 
 813:Generated_Source\PSoC4/I2C_Accel.c ****         I2C_Accel_I2C_SLAVE_CMD_REG = I2C_Accel_I2C_SLAVE_CMD_S_NACK;
 437              		.loc 1 813 0
 438 0036 054B     		ldr	r3, .L26+12
 439 0038 0222     		mov	r2, #2
 440 003a 1A60     		str	r2, [r3]
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 23


 814:Generated_Source\PSoC4/I2C_Accel.c ****     }
 441              		.loc 1 814 0
 442 003c BD46     		mov	sp, r7
 443              		@ sp needed
 444 003e 80BD     		pop	{r7, pc}
 445              	.L27:
 446              		.align	2
 447              	.L26:
 448 0040 00000740 		.word	1074200576
 449 0044 60000740 		.word	1074200672
 450 0048 FFFEFFFF 		.word	-257
 451 004c 6C000740 		.word	1074200684
 452              		.cfi_endproc
 453              	.LFE10:
 454              		.size	I2C_Accel_I2CSlaveNackGeneration, .-I2C_Accel_I2CSlaveNackGeneration
 455              		.text
 456              	.Letext0:
 457              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 458              		.section	.debug_info,"",%progbits
 459              	.Ldebug_info0:
 460 0000 F2010000 		.4byte	0x1f2
 461 0004 0400     		.2byte	0x4
 462 0006 00000000 		.4byte	.Ldebug_abbrev0
 463 000a 04       		.byte	0x4
 464 000b 01       		.uleb128 0x1
 465 000c 27010000 		.4byte	.LASF33
 466 0010 01       		.byte	0x1
 467 0011 A7000000 		.4byte	.LASF34
 468 0015 43020000 		.4byte	.LASF35
 469 0019 00000000 		.4byte	.Ldebug_ranges0+0
 470 001d 00000000 		.4byte	0
 471 0021 00000000 		.4byte	.Ldebug_line0
 472 0025 02       		.uleb128 0x2
 473 0026 01       		.byte	0x1
 474 0027 06       		.byte	0x6
 475 0028 D9020000 		.4byte	.LASF0
 476 002c 02       		.uleb128 0x2
 477 002d 01       		.byte	0x1
 478 002e 08       		.byte	0x8
 479 002f 99000000 		.4byte	.LASF1
 480 0033 02       		.uleb128 0x2
 481 0034 02       		.byte	0x2
 482 0035 05       		.byte	0x5
 483 0036 20020000 		.4byte	.LASF2
 484 003a 02       		.uleb128 0x2
 485 003b 02       		.byte	0x2
 486 003c 07       		.byte	0x7
 487 003d 64000000 		.4byte	.LASF3
 488 0041 02       		.uleb128 0x2
 489 0042 04       		.byte	0x4
 490 0043 05       		.byte	0x5
 491 0044 AF020000 		.4byte	.LASF4
 492 0048 02       		.uleb128 0x2
 493 0049 04       		.byte	0x4
 494 004a 07       		.byte	0x7
 495 004b CA000000 		.4byte	.LASF5
 496 004f 02       		.uleb128 0x2
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 24


 497 0050 08       		.byte	0x8
 498 0051 05       		.byte	0x5
 499 0052 0D020000 		.4byte	.LASF6
 500 0056 02       		.uleb128 0x2
 501 0057 08       		.byte	0x8
 502 0058 07       		.byte	0x7
 503 0059 C9010000 		.4byte	.LASF7
 504 005d 03       		.uleb128 0x3
 505 005e 04       		.byte	0x4
 506 005f 05       		.byte	0x5
 507 0060 696E7400 		.ascii	"int\000"
 508 0064 02       		.uleb128 0x2
 509 0065 04       		.byte	0x4
 510 0066 07       		.byte	0x7
 511 0067 BC010000 		.4byte	.LASF8
 512 006b 04       		.uleb128 0x4
 513 006c DC000000 		.4byte	.LASF9
 514 0070 02       		.byte	0x2
 515 0071 B901     		.2byte	0x1b9
 516 0073 2C000000 		.4byte	0x2c
 517 0077 04       		.uleb128 0x4
 518 0078 B5010000 		.4byte	.LASF10
 519 007c 02       		.byte	0x2
 520 007d BB01     		.2byte	0x1bb
 521 007f 48000000 		.4byte	0x48
 522 0083 02       		.uleb128 0x2
 523 0084 04       		.byte	0x4
 524 0085 04       		.byte	0x4
 525 0086 93000000 		.4byte	.LASF11
 526 008a 02       		.uleb128 0x2
 527 008b 08       		.byte	0x8
 528 008c 04       		.byte	0x4
 529 008d 02010000 		.4byte	.LASF12
 530 0091 02       		.uleb128 0x2
 531 0092 01       		.byte	0x1
 532 0093 08       		.byte	0x8
 533 0094 1B020000 		.4byte	.LASF13
 534 0098 04       		.uleb128 0x4
 535 0099 00000000 		.4byte	.LASF14
 536 009d 02       		.byte	0x2
 537 009e 6502     		.2byte	0x265
 538 00a0 A4000000 		.4byte	0xa4
 539 00a4 05       		.uleb128 0x5
 540 00a5 77000000 		.4byte	0x77
 541 00a9 06       		.uleb128 0x6
 542 00aa 04       		.byte	0x4
 543 00ab AF000000 		.4byte	0xaf
 544 00af 07       		.uleb128 0x7
 545 00b0 02       		.uleb128 0x2
 546 00b1 04       		.byte	0x4
 547 00b2 07       		.byte	0x7
 548 00b3 04020000 		.4byte	.LASF15
 549 00b7 08       		.uleb128 0x8
 550 00b8 21000000 		.4byte	.LASF16
 551 00bc 01       		.byte	0x1
 552 00bd 7B       		.byte	0x7b
 553 00be 00000000 		.4byte	.LFB0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 25


 554 00c2 0C000000 		.4byte	.LFE0-.LFB0
 555 00c6 01       		.uleb128 0x1
 556 00c7 9C       		.byte	0x9c
 557 00c8 08       		.uleb128 0x8
 558 00c9 F1000000 		.4byte	.LASF17
 559 00cd 01       		.byte	0x1
 560 00ce AB       		.byte	0xab
 561 00cf 00000000 		.4byte	.LFB1
 562 00d3 24000000 		.4byte	.LFE1-.LFB1
 563 00d7 01       		.uleb128 0x1
 564 00d8 9C       		.byte	0x9c
 565 00d9 08       		.uleb128 0x8
 566 00da 11000000 		.4byte	.LASF18
 567 00de 01       		.byte	0x1
 568 00df D2       		.byte	0xd2
 569 00e0 00000000 		.4byte	.LFB2
 570 00e4 24000000 		.4byte	.LFE2-.LFB2
 571 00e8 01       		.uleb128 0x1
 572 00e9 9C       		.byte	0x9c
 573 00ea 08       		.uleb128 0x8
 574 00eb E2000000 		.4byte	.LASF19
 575 00ef 01       		.byte	0x1
 576 00f0 EF       		.byte	0xef
 577 00f1 00000000 		.4byte	.LFB3
 578 00f5 34000000 		.4byte	.LFE3-.LFB3
 579 00f9 01       		.uleb128 0x1
 580 00fa 9C       		.byte	0x9c
 581 00fb 09       		.uleb128 0x9
 582 00fc 0E010000 		.4byte	.LASF20
 583 0100 01       		.byte	0x1
 584 0101 1701     		.2byte	0x117
 585 0103 00000000 		.4byte	.LFB4
 586 0107 34000000 		.4byte	.LFE4-.LFB4
 587 010b 01       		.uleb128 0x1
 588 010c 9C       		.byte	0x9c
 589 010d 30010000 		.4byte	0x130
 590 0111 0A       		.uleb128 0xa
 591 0112 30000000 		.4byte	.LASF22
 592 0116 01       		.byte	0x1
 593 0117 1701     		.2byte	0x117
 594 0119 77000000 		.4byte	0x77
 595 011d 02       		.uleb128 0x2
 596 011e 91       		.byte	0x91
 597 011f 6C       		.sleb128 -20
 598 0120 0B       		.uleb128 0xb
 599 0121 A4020000 		.4byte	.LASF23
 600 0125 01       		.byte	0x1
 601 0126 1901     		.2byte	0x119
 602 0128 77000000 		.4byte	0x77
 603 012c 02       		.uleb128 0x2
 604 012d 91       		.byte	0x91
 605 012e 74       		.sleb128 -12
 606 012f 00       		.byte	0
 607 0130 09       		.uleb128 0x9
 608 0131 2A020000 		.4byte	.LASF21
 609 0135 01       		.byte	0x1
 610 0136 3001     		.2byte	0x130
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 26


 611 0138 00000000 		.4byte	.LFB5
 612 013c 34000000 		.4byte	.LFE5-.LFB5
 613 0140 01       		.uleb128 0x1
 614 0141 9C       		.byte	0x9c
 615 0142 65010000 		.4byte	0x165
 616 0146 0A       		.uleb128 0xa
 617 0147 30000000 		.4byte	.LASF22
 618 014b 01       		.byte	0x1
 619 014c 3001     		.2byte	0x130
 620 014e 77000000 		.4byte	0x77
 621 0152 02       		.uleb128 0x2
 622 0153 91       		.byte	0x91
 623 0154 6C       		.sleb128 -20
 624 0155 0B       		.uleb128 0xb
 625 0156 06000000 		.4byte	.LASF24
 626 015a 01       		.byte	0x1
 627 015b 3201     		.2byte	0x132
 628 015d 77000000 		.4byte	0x77
 629 0161 02       		.uleb128 0x2
 630 0162 91       		.byte	0x91
 631 0163 74       		.sleb128 -12
 632 0164 00       		.byte	0
 633 0165 09       		.uleb128 0x9
 634 0166 E0010000 		.4byte	.LASF25
 635 016a 01       		.byte	0x1
 636 016b 4F01     		.2byte	0x14f
 637 016d 00000000 		.4byte	.LFB6
 638 0171 18000000 		.4byte	.LFE6-.LFB6
 639 0175 01       		.uleb128 0x1
 640 0176 9C       		.byte	0x9c
 641 0177 8B010000 		.4byte	0x18b
 642 017b 0A       		.uleb128 0xa
 643 017c 09010000 		.4byte	.LASF26
 644 0180 01       		.byte	0x1
 645 0181 4F01     		.2byte	0x14f
 646 0183 A9000000 		.4byte	0xa9
 647 0187 02       		.uleb128 0x2
 648 0188 91       		.byte	0x91
 649 0189 74       		.sleb128 -12
 650 018a 00       		.byte	0
 651 018b 0C       		.uleb128 0xc
 652 018c 36000000 		.4byte	.LASF27
 653 0190 01       		.byte	0x1
 654 0191 6401     		.2byte	0x164
 655 0193 00000000 		.4byte	.LFB7
 656 0197 0E000000 		.4byte	.LFE7-.LFB7
 657 019b 01       		.uleb128 0x1
 658 019c 9C       		.byte	0x9c
 659 019d 0D       		.uleb128 0xd
 660 019e E5020000 		.4byte	.LASF28
 661 01a2 01       		.byte	0x1
 662 01a3 7D01     		.2byte	0x17d
 663 01a5 00000000 		.4byte	.LFB8
 664 01a9 08000000 		.4byte	.LFE8-.LFB8
 665 01ad 01       		.uleb128 0x1
 666 01ae 9C       		.byte	0x9c
 667 01af 0C       		.uleb128 0xc
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 27


 668 01b0 4E000000 		.4byte	.LASF29
 669 01b4 01       		.byte	0x1
 670 01b5 A201     		.2byte	0x1a2
 671 01b7 00000000 		.4byte	.LFB9
 672 01bb 0C000000 		.4byte	.LFE9-.LFB9
 673 01bf 01       		.uleb128 0x1
 674 01c0 9C       		.byte	0x9c
 675 01c1 0E       		.uleb128 0xe
 676 01c2 B8020000 		.4byte	.LASF30
 677 01c6 01       		.byte	0x1
 678 01c7 2203     		.2byte	0x322
 679 01c9 00000000 		.4byte	.LFB10
 680 01cd 50000000 		.4byte	.LFE10-.LFB10
 681 01d1 01       		.uleb128 0x1
 682 01d2 9C       		.byte	0x9c
 683 01d3 0F       		.uleb128 0xf
 684 01d4 01030000 		.4byte	.LASF31
 685 01d8 01       		.byte	0x1
 686 01d9 51       		.byte	0x51
 687 01da 6B000000 		.4byte	0x6b
 688 01de 05       		.uleb128 0x5
 689 01df 03       		.byte	0x3
 690 01e0 00000000 		.4byte	I2C_Accel_initVar
 691 01e4 0F       		.uleb128 0xf
 692 01e5 77000000 		.4byte	.LASF32
 693 01e9 01       		.byte	0x1
 694 01ea 61       		.byte	0x61
 695 01eb A9000000 		.4byte	0xa9
 696 01ef 05       		.uleb128 0x5
 697 01f0 03       		.byte	0x3
 698 01f1 00000000 		.4byte	I2C_Accel_customIntrHandler
 699 01f5 00       		.byte	0
 700              		.section	.debug_abbrev,"",%progbits
 701              	.Ldebug_abbrev0:
 702 0000 01       		.uleb128 0x1
 703 0001 11       		.uleb128 0x11
 704 0002 01       		.byte	0x1
 705 0003 25       		.uleb128 0x25
 706 0004 0E       		.uleb128 0xe
 707 0005 13       		.uleb128 0x13
 708 0006 0B       		.uleb128 0xb
 709 0007 03       		.uleb128 0x3
 710 0008 0E       		.uleb128 0xe
 711 0009 1B       		.uleb128 0x1b
 712 000a 0E       		.uleb128 0xe
 713 000b 55       		.uleb128 0x55
 714 000c 17       		.uleb128 0x17
 715 000d 11       		.uleb128 0x11
 716 000e 01       		.uleb128 0x1
 717 000f 10       		.uleb128 0x10
 718 0010 17       		.uleb128 0x17
 719 0011 00       		.byte	0
 720 0012 00       		.byte	0
 721 0013 02       		.uleb128 0x2
 722 0014 24       		.uleb128 0x24
 723 0015 00       		.byte	0
 724 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 28


 725 0017 0B       		.uleb128 0xb
 726 0018 3E       		.uleb128 0x3e
 727 0019 0B       		.uleb128 0xb
 728 001a 03       		.uleb128 0x3
 729 001b 0E       		.uleb128 0xe
 730 001c 00       		.byte	0
 731 001d 00       		.byte	0
 732 001e 03       		.uleb128 0x3
 733 001f 24       		.uleb128 0x24
 734 0020 00       		.byte	0
 735 0021 0B       		.uleb128 0xb
 736 0022 0B       		.uleb128 0xb
 737 0023 3E       		.uleb128 0x3e
 738 0024 0B       		.uleb128 0xb
 739 0025 03       		.uleb128 0x3
 740 0026 08       		.uleb128 0x8
 741 0027 00       		.byte	0
 742 0028 00       		.byte	0
 743 0029 04       		.uleb128 0x4
 744 002a 16       		.uleb128 0x16
 745 002b 00       		.byte	0
 746 002c 03       		.uleb128 0x3
 747 002d 0E       		.uleb128 0xe
 748 002e 3A       		.uleb128 0x3a
 749 002f 0B       		.uleb128 0xb
 750 0030 3B       		.uleb128 0x3b
 751 0031 05       		.uleb128 0x5
 752 0032 49       		.uleb128 0x49
 753 0033 13       		.uleb128 0x13
 754 0034 00       		.byte	0
 755 0035 00       		.byte	0
 756 0036 05       		.uleb128 0x5
 757 0037 35       		.uleb128 0x35
 758 0038 00       		.byte	0
 759 0039 49       		.uleb128 0x49
 760 003a 13       		.uleb128 0x13
 761 003b 00       		.byte	0
 762 003c 00       		.byte	0
 763 003d 06       		.uleb128 0x6
 764 003e 0F       		.uleb128 0xf
 765 003f 00       		.byte	0
 766 0040 0B       		.uleb128 0xb
 767 0041 0B       		.uleb128 0xb
 768 0042 49       		.uleb128 0x49
 769 0043 13       		.uleb128 0x13
 770 0044 00       		.byte	0
 771 0045 00       		.byte	0
 772 0046 07       		.uleb128 0x7
 773 0047 15       		.uleb128 0x15
 774 0048 00       		.byte	0
 775 0049 27       		.uleb128 0x27
 776 004a 19       		.uleb128 0x19
 777 004b 00       		.byte	0
 778 004c 00       		.byte	0
 779 004d 08       		.uleb128 0x8
 780 004e 2E       		.uleb128 0x2e
 781 004f 00       		.byte	0
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 29


 782 0050 3F       		.uleb128 0x3f
 783 0051 19       		.uleb128 0x19
 784 0052 03       		.uleb128 0x3
 785 0053 0E       		.uleb128 0xe
 786 0054 3A       		.uleb128 0x3a
 787 0055 0B       		.uleb128 0xb
 788 0056 3B       		.uleb128 0x3b
 789 0057 0B       		.uleb128 0xb
 790 0058 27       		.uleb128 0x27
 791 0059 19       		.uleb128 0x19
 792 005a 11       		.uleb128 0x11
 793 005b 01       		.uleb128 0x1
 794 005c 12       		.uleb128 0x12
 795 005d 06       		.uleb128 0x6
 796 005e 40       		.uleb128 0x40
 797 005f 18       		.uleb128 0x18
 798 0060 9642     		.uleb128 0x2116
 799 0062 19       		.uleb128 0x19
 800 0063 00       		.byte	0
 801 0064 00       		.byte	0
 802 0065 09       		.uleb128 0x9
 803 0066 2E       		.uleb128 0x2e
 804 0067 01       		.byte	0x1
 805 0068 3F       		.uleb128 0x3f
 806 0069 19       		.uleb128 0x19
 807 006a 03       		.uleb128 0x3
 808 006b 0E       		.uleb128 0xe
 809 006c 3A       		.uleb128 0x3a
 810 006d 0B       		.uleb128 0xb
 811 006e 3B       		.uleb128 0x3b
 812 006f 05       		.uleb128 0x5
 813 0070 27       		.uleb128 0x27
 814 0071 19       		.uleb128 0x19
 815 0072 11       		.uleb128 0x11
 816 0073 01       		.uleb128 0x1
 817 0074 12       		.uleb128 0x12
 818 0075 06       		.uleb128 0x6
 819 0076 40       		.uleb128 0x40
 820 0077 18       		.uleb128 0x18
 821 0078 9742     		.uleb128 0x2117
 822 007a 19       		.uleb128 0x19
 823 007b 01       		.uleb128 0x1
 824 007c 13       		.uleb128 0x13
 825 007d 00       		.byte	0
 826 007e 00       		.byte	0
 827 007f 0A       		.uleb128 0xa
 828 0080 05       		.uleb128 0x5
 829 0081 00       		.byte	0
 830 0082 03       		.uleb128 0x3
 831 0083 0E       		.uleb128 0xe
 832 0084 3A       		.uleb128 0x3a
 833 0085 0B       		.uleb128 0xb
 834 0086 3B       		.uleb128 0x3b
 835 0087 05       		.uleb128 0x5
 836 0088 49       		.uleb128 0x49
 837 0089 13       		.uleb128 0x13
 838 008a 02       		.uleb128 0x2
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 30


 839 008b 18       		.uleb128 0x18
 840 008c 00       		.byte	0
 841 008d 00       		.byte	0
 842 008e 0B       		.uleb128 0xb
 843 008f 34       		.uleb128 0x34
 844 0090 00       		.byte	0
 845 0091 03       		.uleb128 0x3
 846 0092 0E       		.uleb128 0xe
 847 0093 3A       		.uleb128 0x3a
 848 0094 0B       		.uleb128 0xb
 849 0095 3B       		.uleb128 0x3b
 850 0096 05       		.uleb128 0x5
 851 0097 49       		.uleb128 0x49
 852 0098 13       		.uleb128 0x13
 853 0099 02       		.uleb128 0x2
 854 009a 18       		.uleb128 0x18
 855 009b 00       		.byte	0
 856 009c 00       		.byte	0
 857 009d 0C       		.uleb128 0xc
 858 009e 2E       		.uleb128 0x2e
 859 009f 00       		.byte	0
 860 00a0 03       		.uleb128 0x3
 861 00a1 0E       		.uleb128 0xe
 862 00a2 3A       		.uleb128 0x3a
 863 00a3 0B       		.uleb128 0xb
 864 00a4 3B       		.uleb128 0x3b
 865 00a5 05       		.uleb128 0x5
 866 00a6 27       		.uleb128 0x27
 867 00a7 19       		.uleb128 0x19
 868 00a8 11       		.uleb128 0x11
 869 00a9 01       		.uleb128 0x1
 870 00aa 12       		.uleb128 0x12
 871 00ab 06       		.uleb128 0x6
 872 00ac 40       		.uleb128 0x40
 873 00ad 18       		.uleb128 0x18
 874 00ae 9642     		.uleb128 0x2116
 875 00b0 19       		.uleb128 0x19
 876 00b1 00       		.byte	0
 877 00b2 00       		.byte	0
 878 00b3 0D       		.uleb128 0xd
 879 00b4 2E       		.uleb128 0x2e
 880 00b5 00       		.byte	0
 881 00b6 03       		.uleb128 0x3
 882 00b7 0E       		.uleb128 0xe
 883 00b8 3A       		.uleb128 0x3a
 884 00b9 0B       		.uleb128 0xb
 885 00ba 3B       		.uleb128 0x3b
 886 00bb 05       		.uleb128 0x5
 887 00bc 27       		.uleb128 0x27
 888 00bd 19       		.uleb128 0x19
 889 00be 11       		.uleb128 0x11
 890 00bf 01       		.uleb128 0x1
 891 00c0 12       		.uleb128 0x12
 892 00c1 06       		.uleb128 0x6
 893 00c2 40       		.uleb128 0x40
 894 00c3 18       		.uleb128 0x18
 895 00c4 9742     		.uleb128 0x2117
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 31


 896 00c6 19       		.uleb128 0x19
 897 00c7 00       		.byte	0
 898 00c8 00       		.byte	0
 899 00c9 0E       		.uleb128 0xe
 900 00ca 2E       		.uleb128 0x2e
 901 00cb 00       		.byte	0
 902 00cc 3F       		.uleb128 0x3f
 903 00cd 19       		.uleb128 0x19
 904 00ce 03       		.uleb128 0x3
 905 00cf 0E       		.uleb128 0xe
 906 00d0 3A       		.uleb128 0x3a
 907 00d1 0B       		.uleb128 0xb
 908 00d2 3B       		.uleb128 0x3b
 909 00d3 05       		.uleb128 0x5
 910 00d4 27       		.uleb128 0x27
 911 00d5 19       		.uleb128 0x19
 912 00d6 11       		.uleb128 0x11
 913 00d7 01       		.uleb128 0x1
 914 00d8 12       		.uleb128 0x12
 915 00d9 06       		.uleb128 0x6
 916 00da 40       		.uleb128 0x40
 917 00db 18       		.uleb128 0x18
 918 00dc 9742     		.uleb128 0x2117
 919 00de 19       		.uleb128 0x19
 920 00df 00       		.byte	0
 921 00e0 00       		.byte	0
 922 00e1 0F       		.uleb128 0xf
 923 00e2 34       		.uleb128 0x34
 924 00e3 00       		.byte	0
 925 00e4 03       		.uleb128 0x3
 926 00e5 0E       		.uleb128 0xe
 927 00e6 3A       		.uleb128 0x3a
 928 00e7 0B       		.uleb128 0xb
 929 00e8 3B       		.uleb128 0x3b
 930 00e9 0B       		.uleb128 0xb
 931 00ea 49       		.uleb128 0x49
 932 00eb 13       		.uleb128 0x13
 933 00ec 3F       		.uleb128 0x3f
 934 00ed 19       		.uleb128 0x19
 935 00ee 02       		.uleb128 0x2
 936 00ef 18       		.uleb128 0x18
 937 00f0 00       		.byte	0
 938 00f1 00       		.byte	0
 939 00f2 00       		.byte	0
 940              		.section	.debug_aranges,"",%progbits
 941 0000 6C000000 		.4byte	0x6c
 942 0004 0200     		.2byte	0x2
 943 0006 00000000 		.4byte	.Ldebug_info0
 944 000a 04       		.byte	0x4
 945 000b 00       		.byte	0
 946 000c 0000     		.2byte	0
 947 000e 0000     		.2byte	0
 948 0010 00000000 		.4byte	.LFB0
 949 0014 0C000000 		.4byte	.LFE0-.LFB0
 950 0018 00000000 		.4byte	.LFB1
 951 001c 24000000 		.4byte	.LFE1-.LFB1
 952 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 32


 953 0024 24000000 		.4byte	.LFE2-.LFB2
 954 0028 00000000 		.4byte	.LFB3
 955 002c 34000000 		.4byte	.LFE3-.LFB3
 956 0030 00000000 		.4byte	.LFB4
 957 0034 34000000 		.4byte	.LFE4-.LFB4
 958 0038 00000000 		.4byte	.LFB5
 959 003c 34000000 		.4byte	.LFE5-.LFB5
 960 0040 00000000 		.4byte	.LFB6
 961 0044 18000000 		.4byte	.LFE6-.LFB6
 962 0048 00000000 		.4byte	.LFB7
 963 004c 0E000000 		.4byte	.LFE7-.LFB7
 964 0050 00000000 		.4byte	.LFB8
 965 0054 08000000 		.4byte	.LFE8-.LFB8
 966 0058 00000000 		.4byte	.LFB9
 967 005c 0C000000 		.4byte	.LFE9-.LFB9
 968 0060 00000000 		.4byte	.LFB10
 969 0064 50000000 		.4byte	.LFE10-.LFB10
 970 0068 00000000 		.4byte	0
 971 006c 00000000 		.4byte	0
 972              		.section	.debug_ranges,"",%progbits
 973              	.Ldebug_ranges0:
 974 0000 00000000 		.4byte	.LFB0
 975 0004 0C000000 		.4byte	.LFE0
 976 0008 00000000 		.4byte	.LFB1
 977 000c 24000000 		.4byte	.LFE1
 978 0010 00000000 		.4byte	.LFB2
 979 0014 24000000 		.4byte	.LFE2
 980 0018 00000000 		.4byte	.LFB3
 981 001c 34000000 		.4byte	.LFE3
 982 0020 00000000 		.4byte	.LFB4
 983 0024 34000000 		.4byte	.LFE4
 984 0028 00000000 		.4byte	.LFB5
 985 002c 34000000 		.4byte	.LFE5
 986 0030 00000000 		.4byte	.LFB6
 987 0034 18000000 		.4byte	.LFE6
 988 0038 00000000 		.4byte	.LFB7
 989 003c 0E000000 		.4byte	.LFE7
 990 0040 00000000 		.4byte	.LFB8
 991 0044 08000000 		.4byte	.LFE8
 992 0048 00000000 		.4byte	.LFB9
 993 004c 0C000000 		.4byte	.LFE9
 994 0050 00000000 		.4byte	.LFB10
 995 0054 50000000 		.4byte	.LFE10
 996 0058 00000000 		.4byte	0
 997 005c 00000000 		.4byte	0
 998              		.section	.debug_line,"",%progbits
 999              	.Ldebug_line0:
 1000 0000 3D010000 		.section	.debug_str,"MS",%progbits,1
 1000      02004600 
 1000      00000201 
 1000      FB0E0D00 
 1000      01010101 
 1001              	.LASF14:
 1002 0000 72656733 		.ascii	"reg32\000"
 1002      3200
 1003              	.LASF24:
 1004 0006 74784669 		.ascii	"txFifoCtrl\000"
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 33


 1004      666F4374 
 1004      726C00
 1005              	.LASF18:
 1006 0011 4932435F 		.ascii	"I2C_Accel_Start\000"
 1006      41636365 
 1006      6C5F5374 
 1006      61727400 
 1007              	.LASF16:
 1008 0021 4932435F 		.ascii	"I2C_Accel_Init\000"
 1008      41636365 
 1008      6C5F496E 
 1008      697400
 1009              	.LASF22:
 1010 0030 6C657665 		.ascii	"level\000"
 1010      6C00
 1011              	.LASF27:
 1012 0036 4932435F 		.ascii	"I2C_Accel_ScbEnableIntr\000"
 1012      41636365 
 1012      6C5F5363 
 1012      62456E61 
 1012      626C6549 
 1013              	.LASF29:
 1014 004e 4932435F 		.ascii	"I2C_Accel_ScbModeStop\000"
 1014      41636365 
 1014      6C5F5363 
 1014      624D6F64 
 1014      6553746F 
 1015              	.LASF3:
 1016 0064 73686F72 		.ascii	"short unsigned int\000"
 1016      7420756E 
 1016      7369676E 
 1016      65642069 
 1016      6E7400
 1017              	.LASF32:
 1018 0077 4932435F 		.ascii	"I2C_Accel_customIntrHandler\000"
 1018      41636365 
 1018      6C5F6375 
 1018      73746F6D 
 1018      496E7472 
 1019              	.LASF11:
 1020 0093 666C6F61 		.ascii	"float\000"
 1020      7400
 1021              	.LASF1:
 1022 0099 756E7369 		.ascii	"unsigned char\000"
 1022      676E6564 
 1022      20636861 
 1022      7200
 1023              	.LASF34:
 1024 00a7 47656E65 		.ascii	"Generated_Source\\PSoC4\\I2C_Accel.c\000"
 1024      72617465 
 1024      645F536F 
 1024      75726365 
 1024      5C50536F 
 1025              	.LASF5:
 1026 00ca 6C6F6E67 		.ascii	"long unsigned int\000"
 1026      20756E73 
 1026      69676E65 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 34


 1026      6420696E 
 1026      7400
 1027              	.LASF9:
 1028 00dc 75696E74 		.ascii	"uint8\000"
 1028      3800
 1029              	.LASF19:
 1030 00e2 4932435F 		.ascii	"I2C_Accel_Stop\000"
 1030      41636365 
 1030      6C5F5374 
 1030      6F7000
 1031              	.LASF17:
 1032 00f1 4932435F 		.ascii	"I2C_Accel_Enable\000"
 1032      41636365 
 1032      6C5F456E 
 1032      61626C65 
 1032      00
 1033              	.LASF12:
 1034 0102 646F7562 		.ascii	"double\000"
 1034      6C6500
 1035              	.LASF26:
 1036 0109 66756E63 		.ascii	"func\000"
 1036      00
 1037              	.LASF20:
 1038 010e 4932435F 		.ascii	"I2C_Accel_SetRxFifoLevel\000"
 1038      41636365 
 1038      6C5F5365 
 1038      74527846 
 1038      69666F4C 
 1039              	.LASF33:
 1040 0127 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1040      4320342E 
 1040      392E3320 
 1040      32303135 
 1040      30333033 
 1041 015a 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m0 -mthumb -g -O"
 1041      20726576 
 1041      6973696F 
 1041      6E203232 
 1041      31323230 
 1042 018d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1042      66756E63 
 1042      74696F6E 
 1042      2D736563 
 1042      74696F6E 
 1043              	.LASF10:
 1044 01b5 75696E74 		.ascii	"uint32\000"
 1044      333200
 1045              	.LASF8:
 1046 01bc 756E7369 		.ascii	"unsigned int\000"
 1046      676E6564 
 1046      20696E74 
 1046      00
 1047              	.LASF7:
 1048 01c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 1048      206C6F6E 
 1048      6720756E 
 1048      7369676E 
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 35


 1048      65642069 
 1049              	.LASF25:
 1050 01e0 4932435F 		.ascii	"I2C_Accel_SetCustomInterruptHandler\000"
 1050      41636365 
 1050      6C5F5365 
 1050      74437573 
 1050      746F6D49 
 1051              	.LASF15:
 1052 0204 73697A65 		.ascii	"sizetype\000"
 1052      74797065 
 1052      00
 1053              	.LASF6:
 1054 020d 6C6F6E67 		.ascii	"long long int\000"
 1054      206C6F6E 
 1054      6720696E 
 1054      7400
 1055              	.LASF13:
 1056 021b 63686172 		.ascii	"char\000"
 1056      00
 1057              	.LASF2:
 1058 0220 73686F72 		.ascii	"short int\000"
 1058      7420696E 
 1058      7400
 1059              	.LASF21:
 1060 022a 4932435F 		.ascii	"I2C_Accel_SetTxFifoLevel\000"
 1060      41636365 
 1060      6C5F5365 
 1060      74547846 
 1060      69666F4C 
 1061              	.LASF35:
 1062 0243 433A5C55 		.ascii	"C:\\Users\\Shahil Zhangada\\OneDrive\\Spring 2017\\"
 1062      73657273 
 1062      5C536861 
 1062      68696C20 
 1062      5A68616E 
 1063 0271 4D656368 		.ascii	"Mech Eng 135\\KIT042_Accelerometer_LightPaint.cydsn"
 1063      20456E67 
 1063      20313335 
 1063      5C4B4954 
 1063      3034325F 
 1064 02a3 00       		.ascii	"\000"
 1065              	.LASF23:
 1066 02a4 72784669 		.ascii	"rxFifoCtrl\000"
 1066      666F4374 
 1066      726C00
 1067              	.LASF4:
 1068 02af 6C6F6E67 		.ascii	"long int\000"
 1068      20696E74 
 1068      00
 1069              	.LASF30:
 1070 02b8 4932435F 		.ascii	"I2C_Accel_I2CSlaveNackGeneration\000"
 1070      41636365 
 1070      6C5F4932 
 1070      43536C61 
 1070      76654E61 
 1071              	.LASF0:
 1072 02d9 7369676E 		.ascii	"signed char\000"
ARM GAS  C:\Users\SHAHIL~1\AppData\Local\Temp\cc9MClQ7.s 			page 36


 1072      65642063 
 1072      68617200 
 1073              	.LASF28:
 1074 02e5 4932435F 		.ascii	"I2C_Accel_ScbModePostEnable\000"
 1074      41636365 
 1074      6C5F5363 
 1074      624D6F64 
 1074      65506F73 
 1075              	.LASF31:
 1076 0301 4932435F 		.ascii	"I2C_Accel_initVar\000"
 1076      41636365 
 1076      6C5F696E 
 1076      69745661 
 1076      7200
 1077              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
